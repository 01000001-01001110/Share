#requires -Version 3
#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 85d00cdb-7072-4d50-8eee-0efbbd738375
# Source File: gddgfhdfghgfdh.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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
8wwAAA==#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2019 v5.6.165
     Generated on:       8/2/2019 2:26 PM
     Generated by:       Support.newingha
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2019
#>


#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Show-gddgfhdfghgfdh_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formProfileBackup = New-Object 'System.Windows.Forms.Form'
	$labelCheckDirectoryYouWan = New-Object 'System.Windows.Forms.Label'
	$label1NoSpacesInLocations = New-Object 'System.Windows.Forms.Label'
	$Info = New-Object 'System.Windows.Forms.GroupBox'
	$labelenvUserName = New-Object 'System.Windows.Forms.Label'
	$labelOSInstallDate = New-Object 'System.Windows.Forms.Label'
	$labelenvCOMPUTERNAME = New-Object 'System.Windows.Forms.Label'
	$labelAuthenticatedUser = New-Object 'System.Windows.Forms.Label'
	$labelInstDate = New-Object 'System.Windows.Forms.Label'
	$labelWindowsUser = New-Object 'System.Windows.Forms.Label'
	$label1 = New-Object 'System.Windows.Forms.Label'
	$labelDeviceName = New-Object 'System.Windows.Forms.Label'
	$labelProfileBackup004 = New-Object 'System.Windows.Forms.Label'
	$buttonPrograms = New-Object 'System.Windows.Forms.Button'
	$buttonInventory = New-Object 'System.Windows.Forms.Button'
	$buttonPrinters = New-Object 'System.Windows.Forms.Button'
	$buttonBackup = New-Object 'System.Windows.Forms.Button'
	$progressbar1 = New-Object 'System.Windows.Forms.ProgressBar'
	$groupbox3 = New-Object 'System.Windows.Forms.GroupBox'
	$checkboxCustomDirectory = New-Object 'System.Windows.Forms.CheckBox'
	$textbox7 = New-Object 'System.Windows.Forms.TextBox'
	$checkboxQuickparts = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxBrowsers = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxVideos = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxPictures = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxDocuments = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxDownloads = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxDesktop = New-Object 'System.Windows.Forms.CheckBox'
	$groupbox2 = New-Object 'System.Windows.Forms.GroupBox'
	$textbox1 = New-Object 'System.Windows.Forms.TextBox'
	$textbox2 = New-Object 'System.Windows.Forms.TextBox'
	$labelFromLocation = New-Object 'System.Windows.Forms.Label'
	$labelToLocation = New-Object 'System.Windows.Forms.Label'
	$richtextbox1 = New-Object 'System.Windows.Forms.RichTextBox'
	$tooltip1 = New-Object 'System.Windows.Forms.ToolTip'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formProfileBackup_Load={
		#TODO: Initialize Form Controls here
		
	}
	
	#region Control Helper Functions
	<#
		.SYNOPSIS
			Sets the emulation of the WebBrowser control for the application.
		
		.DESCRIPTION
			Sets the emulation of the WebBrowser control for the application using the installed version of IE.
			This improves the WebBrowser control compatibility with newer html features.
		
		.PARAMETER ExecutableName
			The name of the executable E.g. PowerShellStudio.exe.
			Default Value: The running executable name.
		
		.EXAMPLE
			PS C:\> Set-WebBrowserEmulation
	
		.EXAMPLE
			PS C:\> Set-WebBrowserEmulation PowerShell.exe
	#>
	#Begin Region - Automatic System Information Gathering
	$CurrentUserName = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name
	[string]$ComputerName = $env:computername
	$Computer = $ComputerName
	#Manufacturer information
	$Manufacturer = Get-WmiObject win32_computersystem | Select Manufacturer
	$Model = Get-WmiObject win32_computersystem | Select Model
	#Gets the OS info
	$GetOS = Get-WmiObject -class Win32_OperatingSystem -computername $Computer
	$OS = $GetOS.Caption
	$OSArchitecture = $GetOS.OSArchitecture
	$OSBuildNumber = $GetOS.BuildNumber
	#Monitor information
	$MonitorCount = Get-ciminstance -namespace root/wmi -classname WmiMonitorConnectionParams | Select VideoOutputTechnology
	#Gets memory information
	$Getmemoryslot = Get-WmiObject Win32_PhysicalMemoryArray -ComputerName $computer
	$Getmemory = Get-WMIObject Win32_PhysicalMemory -ComputerName $computer
	$Getmemorymeasure = Get-WMIObject Win32_PhysicalMemory -ComputerName $computer | Measure-Object -Property Capacity -Sum
	$MemorySlot = $Getmemoryslot.MemoryDevices
	$MaxMemory = $($Getmemoryslot.MaxCapacity/1024/1024)
	$TotalMemSticks = $Getmemorymeasure.count
	$TotalMemSize = $($Getmemorymeasure.sum/1024/1024/1024)
	#Get the disk info
	$GetDiskInfo = Get-WmiObject Win32_logicaldisk -ComputerName $computer -Filter "DeviceID='C:'"
	$DiskSize = $([math]::Round($GetDiskInfo.Size/1GB))
	$FreeSpace = $([math]::Round($GetDiskInfo.FreeSpace/1GB))
	$UsedSapce = $([math]::Round($DiskSize - $FreeSpace))
	#Gets CPU info
	$GetCPU = Get-wmiobject win32_processor -ComputerName $Computer
	$CPUName = $GetCPU.Name
	$CPUManufacturer = $GetCPU.Manufacturer
	$CPUMaxClockSpeed = $GetCPU.MaxClockSpeed
	#account status
	$LoggedOnUser = (Get-WmiObject win32_computersystem -ComputerName $Computer).Username
	$getLockedStart = If (Get-Process logonui -ComputerName $Computer -ErrorAction SilentlyContinue) { $Locked = "Yes" }
	Else { $Locked = "No" }
	#Serial Number
	$SerialNumber = (Get-WmiObject win32_bios -ComputerName $Computer).SerialNumber
	#get IP address
	$IPAddress = (Get-WmiObject win32_NetworkadapterConfiguration -ComputerName $Computer | Where-Object IPAddress -ne $null).IPAddress
	#Gets BIOS info
	$BIOSName = (Get-WmiObject win32_bios -ComputerName $Computer).Name
	$BIOSManufacturer = (Get-WmiObject win32_bios -ComputerName $Computer).Manufacturer
	$BIOSVersionN = (Get-WmiObject win32_bios -ComputerName $Computer).Version
	#Gets Motherboard info
	$MotherBoardName = (Get-WmiObject Win32_BaseBoard -ComputerName $Computer).Name
	$MotherBoardManufacturet = (Get-WmiObject Win32_BaseBoard -ComputerName $Computer).Manufacturer
	$MotherBoardProduct = (Get-WmiObject Win32_BaseBoard -ComputerName $Computer).Product
	$MotherBoardSerial = (Get-WmiObject Win32_BaseBoard -ComputerName $Computer).SerialNumber
	$InstDate = (Get-CimInstance Win32_OperatingSystem).InstallDate
	$DesktopPath = [Environment]::GetFolderPath("Desktop")
	$MonitorC0unt = $MonitorCount -replace '@{VideoOutputTechnology=', ''
	$MonitorCount = $MonitorC0unt -replace '}', ''
	$M4nufacturer = $Manufacturer -replace '@{Manufacturer=', ''
	$Manufacturer = $M4nufacturer -replace '}', ''
	$M0del = $Model -replace '@{Model='
	$Model = $M0del -replace '}'
	$directories = Get-ChildItem -Path "C:\Users\" | Select -Property Name
	$D1rectories = $directories -replace '{@{Name=', ''
	$directories = $D1rectories -replace '}', ''
	$M0therBoardSerial = $MotherBoardSerial -replace '/$SerialNumber/', ''
	$MotherBoardSerial = $M0therBoardSerial -replace '/'
	$TmpFile = [System.IO.Path]::GetTempFileName
	$nl = [Environment]::NewLine
	#End Region - Automatic System Information Gathering
	function Get-Inventory
	{
		$InventoryScript = cmd /c "net use"
		$InventoryScript += cmd /c "WMIC OS LIST BRIEF"
		$InventoryScript += cmd /c "WMIC BIOS get serialnumber"
		$InventoryScript += cmd /c "ipconfig /all"
		$InventoryScript += cmd /c 'net localgroup "Administrators"'
		$InventoryScript += cmd /c "WMIC OS GET csname"
		$InventoryScript += cmd /c 'netsh advfirewall export "$textbox2.Text\firwallpolicy.wfw"'
		$InventoryScript += cmd /c "WEVTUtil query-events System /count:500 /rd:true /format:text"
		$InventoryScript | Out-GridView
	}
	function listUsers
	{
		$userFolders = Get-ChildItem -path c:\users | Select-Object Name
		[array]$userFolders = Get-ChildItem -path C:\Users | Select-Object Name
		ForEach ($Item in $userFolders) { $richtextbox1.Items.Add($Item.Name) }
	}
	
	function backupDirectory
	{
		$source = $TextBox1.Text
		$dest = $TextBox2.Text
		If (Test-Path $source)
		{
			
			If ($checkboxDesktop.Checked)
			{
				$ProgressBar1.Value = "15"
				#Copy-Item "$source\Desktop" -Destination "$dest\Desktop" -Recurse -Force
				#robocopy c:\users\newingha\Desktop e:\backup\why *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				Robocopy $source\Desktop $dest\Desktop *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				#$richtextbox1.Text = Robocopy $source\Desktop $dest\Desktop *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt | Out-String
				$richtextbox1.Text += "Log file created successfully and being actively saved to: $source\desktop\backuplog.txt"
				$richtextbox1.Text += "`nDesktop directory backed up successfully."
				$ProgressBar1.Value = "30"
			}
			If ($checkboxDocuments.Checked)
			{
				Robocopy $source\Documents $dest\Documents *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$richtextbox1.Text += "`nDocuments directory backed up successfully."
				$ProgressBar1.Value = "45"
			}
			If ($checkboxDownloads.Checked)
			{
				Robocopy $source\Downloads $dest\Downloads *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$richtextbox1.Text += "`nDownloads directory backed up successfully."
				$ProgressBar1.Value = "57"
			}
			If ($checkboxBrowsers.Checked)
			{
				$richtextbox1.Text += "`nInitializing Browser data backup. Please close the customer's browsers now."
				Robocopy $source\Favorites $dest\Favorites *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$ProgressBar1.Value = "60"
				Robocopy $source\AppData\Local\Google $dest\AppData\Local\Google *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$ProgressBar1.Value = "63"
				Robocopy $source\AppData\Roaming\Mozilla\Firefox\Profiles $dest\AppData\Roaming\Mozilla\Firefox\Profiles *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$richtextbox1.Text += "`nIE, FireFox, and Chrome Bookmark directories backed up successfully."
				$ProgressBar1.Value = "65"
			}
			If ($checkboxPictures.Checked)
			{
				Robocopy $source\Pictures $dest\Pictures *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$richtextbox1.Text += "`nPictures directory backed up successfully."
				$ProgressBar1.Value = "75"
			}
			If ($checkboxVideos.Checked)
			{
				Robocopy $source\Videos $dest\Videos *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$richtextbox1.Text += "`nVideos directory backed up successfully."
				$ProgressBar1.Value = "80"
			}
			If ($checkboxQuickparts.Checked)
			{
				Robocopy "$source\application data\microsoft\templates" "$dest\application data\microsoft\templates" *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$richtextbox1.Text += "`nQuickParts directory backed up successfully."
				$ProgressBar1.Value = "90"
			}
			If ($checkboxCustomDirectory.Checked)
			{
				$source = $textbox7.Text
				Robocopy $source $dest\Custom_Directory_Backup *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$richtextbox1.Text += "`nCustom directory backed up successfully."
				$ProgressBar1.Value = "93"
			}
			Robocopy $source\AppData\Roaming\Adobe\Acrobat\DC\Security $dest\AppData\Roaming\Adobe\Acrobat\DC\Security *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
			$ProgressBar1.Value = "95"
			Robocopy $source\application data\microsoft\signatures $dest\application data\microsoft\signatures *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
			$ProgressBar1.Value = "98"
			$result = [System.Windows.Forms.MessageBox]::Show('This Operation Completed Successfully!', 'Warning', 'OK', 'Warning')
			$result
			$ProgressBar1.Value = "100"
			
		}
		Else
		{
			$result = [System.Windows.Forms.MessageBox]::Show('Unable to reach souce location!', 'Warning', 'YesNo', 'Warning')
			$result
		}
	}
	$checkboxDocuments_CheckedChanged={
		#TODO: Place custom script here
		
	}
	
	$checkboxDownloads_CheckedChanged={
		#TODO: Place custom script here
		
	}
	
	$checkboxDesktop_CheckedChanged={
		#TODO: Place custom script here
		
	}
	
	$buttonBackup_Click={
		backupDirectory
	}
	
	$buttonPrograms_Click={
		Get-ItemProperty HKLM:\Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Out-GridView
	}
	
	$buttonPrinters_Click={
		control printers
	}
	
	$buttonInventory_Click={
		Get-Inventory
	}
	
	$labelInstDate_Click={
		#TODO: Place custom script here
		
	}
	
	$checkboxPictures_CheckedChanged={
		#TODO: Place custom script here
		
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formProfileBackup.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$labelInstDate.remove_Click($labelInstDate_Click)
			$buttonPrograms.remove_Click($buttonPrograms_Click)
			$buttonInventory.remove_Click($buttonInventory_Click)
			$buttonPrinters.remove_Click($buttonPrinters_Click)
			$buttonBackup.remove_Click($buttonBackup_Click)
			$checkboxPictures.remove_CheckedChanged($checkboxPictures_CheckedChanged)
			$checkboxDesktop.remove_CheckedChanged($checkboxDesktop_CheckedChanged)
			$formProfileBackup.remove_Load($formProfileBackup_Load)
			$formProfileBackup.remove_Load($Form_StateCorrection_Load)
			$formProfileBackup.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formProfileBackup.SuspendLayout()
	$groupbox2.SuspendLayout()
	$groupbox3.SuspendLayout()
	$Info.SuspendLayout()
	#
	# formProfileBackup
	#
	$formProfileBackup.Controls.Add($labelCheckDirectoryYouWan)
	$formProfileBackup.Controls.Add($label1NoSpacesInLocations)
	$formProfileBackup.Controls.Add($Info)
	$formProfileBackup.Controls.Add($labelProfileBackup004)
	$formProfileBackup.Controls.Add($buttonPrograms)
	$formProfileBackup.Controls.Add($buttonInventory)
	$formProfileBackup.Controls.Add($buttonPrinters)
	$formProfileBackup.Controls.Add($buttonBackup)
	$formProfileBackup.Controls.Add($progressbar1)
	$formProfileBackup.Controls.Add($groupbox3)
	$formProfileBackup.Controls.Add($groupbox2)
	$formProfileBackup.Controls.Add($richtextbox1)
	$formProfileBackup.AutoScaleDimensions = '6, 13'
	$formProfileBackup.AutoScaleMode = 'Font'
	$formProfileBackup.ClientSize = '408, 461'
	#region Binary Data
	#$formProfileBackup.Icon = [System.Convert]::FromBase64String('
#AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEA
#AAAAAAD8/f4A/f3+AN/VwgCMUQYA//3+AItQCQCRUAkAfk0jAPn+/AD7/vwAjFIEAP/79ACIThgA
#jVEHAPfw6gCRUgQA+/33AI5QCgD7/PoA7+XYAP78+gCKTggA//79AI5SBQCQUQgAllIFAJRRCADy
#4tkA9/PjAPz+/gCLTgkA/v7+APTu4QCLUQkA/fr5AJJSBgCWUwMA+vz8AJJjOgCLTgoAklgXAJJP
#BwD7/vcAlUsKAP38/QCNSAsAiE4LAI1PCAD++PgA/vz1AKqBYgCVUwUAl1ELAIpPCQCLTwkAj1AG
#AI9PCQCTUwYA+P38AJhTBgD9/fwAilAHAOjYyACKTwoAi08KAH1NIQCvkXEA+/39APz9/QD9/f0A
#/v39AP/9/QCOUQUAilAIAIxaJgD9/PgAkVAIAPn6/gD8/PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
#AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
#AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
#AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
#AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
#AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
#AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
#AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
#AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
#AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
#AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
#AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
#AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
#AAAANjY2NjY2NjY2NjY2NjY2NjY2NjY2NjZAGBs+AzY2NjY2NjY2NjYRIAJOKS82NjY2NjY2SEo7
#QxNGNzY2NjY2NjY2OSJHAB8fTSM2NjY2NjY2HiZCEkQfHx8sBA02NjY2NjY2NkEfHx80JA82NjY2
#NjY2Jz0lHx8dRTpANjY2NjY2Nj8tHx8IRR8fKi42NjY2NjYhEB8fFhofHx9LCjY2NjY2BkMfHwsV
#TAEfRQ4HLzY2Nig8Hx8XHjYFMDwxKzY2NjYZDBQJNjY2NjY2NTY2NjYVNhwsMjU2NjY2NjY2NjY2
#NjZJODM2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
#AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=')
	#endregion
	$System_Windows_Forms_MenuStrip_1 = New-Object 'System.Windows.Forms.MenuStrip'
	$System_Windows_Forms_MenuStrip_1.Location = '0, 0'
	$System_Windows_Forms_MenuStrip_1.Name = ''
	$System_Windows_Forms_MenuStrip_1.Size = '632, 24'
	$System_Windows_Forms_MenuStrip_1.TabIndex = 10
	$System_Windows_Forms_MenuStrip_1.Visible = $False
	$formProfileBackup.MainMenuStrip = $System_Windows_Forms_MenuStrip_1
	$formProfileBackup.Name = 'formProfileBackup'
	$formProfileBackup.Text = 'Profile Backup '
	$formProfileBackup.add_Load($formProfileBackup_Load)
	#
	# labelCheckDirectoryYouWan
	#
	$labelCheckDirectoryYouWan.AutoSize = $True
	$labelCheckDirectoryYouWan.Location = '270, 54'
	$labelCheckDirectoryYouWan.Name = 'labelCheckDirectoryYouWan'
	$labelCheckDirectoryYouWan.Size = '0, 16'
	$labelCheckDirectoryYouWan.TabIndex = 46
	$labelCheckDirectoryYouWan.UseCompatibleTextRendering = $True
	#
	# label1NoSpacesInLocations
	#
	$label1NoSpacesInLocations.AutoSize = $True
	$label1NoSpacesInLocations.Location = '261, 37'
	$label1NoSpacesInLocations.Name = 'label1NoSpacesInLocations'
	$label1NoSpacesInLocations.Size = '135, 17'
	$label1NoSpacesInLocations.TabIndex = 45
	$label1NoSpacesInLocations.Text = 'alan.newingham@gmail.com'
	$label1NoSpacesInLocations.UseCompatibleTextRendering = $True
	#
	# Info
	#
	$Info.Controls.Add($labelenvUserName)
	$Info.Controls.Add($labelOSInstallDate)
	$Info.Controls.Add($labelenvCOMPUTERNAME)
	$Info.Controls.Add($labelAuthenticatedUser)
	$Info.Controls.Add($labelInstDate)
	$Info.Controls.Add($labelWindowsUser)
	$Info.Controls.Add($label1)
	$Info.Controls.Add($labelDeviceName)
	$Info.Location = '9, 250'
	$Info.Name = 'Info'
	$Info.Size = '245, 100'
	$Info.TabIndex = 44
	$Info.TabStop = $False
	$Info.Text = 'Information'
	$Info.UseCompatibleTextRendering = $True
	#
	# labelenvUserName
	#
	$labelenvUserName.AutoSize = $True
	$labelenvUserName.Location = '119, 57'
	$labelenvUserName.Name = 'labelenvUserName'
	$labelenvUserName.Size = '86, 17'
	$labelenvUserName.TabIndex = 36
	$labelenvUserName.Text = "$env:UserName"
	$labelenvUserName.UseCompatibleTextRendering = $True
	#
	# labelOSInstallDate
	#
	$labelOSInstallDate.AutoSize = $True
	$labelOSInstallDate.Location = '30, 74'
	$labelOSInstallDate.Name = 'labelOSInstallDate'
	$labelOSInstallDate.Size = '83, 17'
	$labelOSInstallDate.TabIndex = 43
	$labelOSInstallDate.Text = 'OS Install Date:'
	$labelOSInstallDate.UseCompatibleTextRendering = $True
	#
	# labelenvCOMPUTERNAME
	#
	$labelenvCOMPUTERNAME.AutoSize = $True
	$labelenvCOMPUTERNAME.Location = '119, 40'
	$labelenvCOMPUTERNAME.Name = 'labelenvCOMPUTERNAME'
	$labelenvCOMPUTERNAME.Size = '87, 17'
	$labelenvCOMPUTERNAME.TabIndex = 35
	$labelenvCOMPUTERNAME.Text = "$LoggedOnUser"
	$labelenvCOMPUTERNAME.UseCompatibleTextRendering = $True
	#
	# labelAuthenticatedUser
	#
	$labelAuthenticatedUser.AutoSize = $True
	$labelAuthenticatedUser.Location = '9, 57'
	$labelAuthenticatedUser.Name = 'labelAuthenticatedUser'
	$labelAuthenticatedUser.Size = '104, 17'
	$labelAuthenticatedUser.TabIndex = 42
	$labelAuthenticatedUser.Text = 'Authenticated User:'
	$labelAuthenticatedUser.UseCompatibleTextRendering = $True
	#
	# labelInstDate
	#
	$labelInstDate.AutoSize = $True
	$labelInstDate.Location = '119, 74'
	$labelInstDate.Name = 'labelInstDate'
	$labelInstDate.Size = '53, 17'
	$labelInstDate.TabIndex = 37
	$labelInstDate.Text = "$InstDate"
	$labelInstDate.UseCompatibleTextRendering = $True
	$labelInstDate.add_Click($labelInstDate_Click)
	#
	# labelWindowsUser
	#
	$labelWindowsUser.AutoSize = $True
	$labelWindowsUser.Location = '33, 40'
	$labelWindowsUser.Name = 'labelWindowsUser'
	$labelWindowsUser.Size = '80, 17'
	$labelWindowsUser.TabIndex = 41
	$labelWindowsUser.Text = 'Windows User:'
	$labelWindowsUser.UseCompatibleTextRendering = $True
	#
	# label1
	#
	$label1.AutoSize = $True
	$label1.Location = '119, 23'
	$label1.Name = 'label1'
	$label1.Size = '112, 17'
	$label1.TabIndex = 39
	$label1.Text = "$env:ComputerName"
	$label1.UseCompatibleTextRendering = $True
	#
	# labelDeviceName
	#
	$labelDeviceName.AutoSize = $True
	$labelDeviceName.Location = '39, 22'
	$labelDeviceName.Name = 'labelDeviceName'
	$labelDeviceName.Size = '75, 17'
	$labelDeviceName.TabIndex = 40
	$labelDeviceName.Text = 'Device Name:'
	$labelDeviceName.UseCompatibleTextRendering = $True
	#
	# labelProfileBackup004
	#
	$labelProfileBackup004.AutoSize = $True
	$labelProfileBackup004.Location = '150, 9'
	$labelProfileBackup004.Name = 'labelProfileBackup004'
	$labelProfileBackup004.Size = '105, 17'
	$labelProfileBackup004.TabIndex = 38
	$labelProfileBackup004.Text = 'Profile Backup 0.0.4'
	$labelProfileBackup004.UseCompatibleTextRendering = $True
	#
	# buttonPrograms
	#
	$buttonPrograms.Location = '317, 255'
	$buttonPrograms.Name = 'buttonPrograms'
	$buttonPrograms.Size = '75, 23'
	$buttonPrograms.TabIndex = 34
	$buttonPrograms.Text = 'Programs'
	$buttonPrograms.UseCompatibleTextRendering = $True
	$buttonPrograms.UseVisualStyleBackColor = $True
	$buttonPrograms.add_Click($buttonPrograms_Click)
	#
	# buttonInventory
	#
	$buttonInventory.Location = '317, 301'
	$buttonInventory.Name = 'buttonInventory'
	$buttonInventory.Size = '75, 23'
	$buttonInventory.TabIndex = 33
	$buttonInventory.Text = 'Inventory'
	$buttonInventory.UseCompatibleTextRendering = $True
	$buttonInventory.UseVisualStyleBackColor = $True
	$buttonInventory.add_Click($buttonInventory_Click)
	#
	# buttonPrinters
	#
	$buttonPrinters.Location = '317, 278'
	$buttonPrinters.Name = 'buttonPrinters'
	$buttonPrinters.Size = '75, 23'
	$buttonPrinters.TabIndex = 32
	$buttonPrinters.Text = 'Printers'
	$buttonPrinters.UseCompatibleTextRendering = $True
	$buttonPrinters.UseVisualStyleBackColor = $True
	$buttonPrinters.add_Click($buttonPrinters_Click)
	#
	# buttonBackup
	#
	$buttonBackup.Location = '317, 324'
	$buttonBackup.Name = 'buttonBackup'
	$buttonBackup.Size = '75, 25'
	$buttonBackup.TabIndex = 31
	$buttonBackup.Text = 'Backup'
	$buttonBackup.UseCompatibleTextRendering = $True
	$buttonBackup.UseVisualStyleBackColor = $True
	$buttonBackup.add_Click($buttonBackup_Click)
	#
	# progressbar1
	#
	$progressbar1.Location = '0, 446'
	$progressbar1.Name = 'progressbar1'
	$progressbar1.Size = '409, 17'
	$progressbar1.TabIndex = 30
	#
	# groupbox3
	#
	$groupbox3.Controls.Add($checkboxCustomDirectory)
	$groupbox3.Controls.Add($textbox7)
	$groupbox3.Controls.Add($checkboxQuickparts)
	$groupbox3.Controls.Add($checkboxBrowsers)
	$groupbox3.Controls.Add($checkboxVideos)
	$groupbox3.Controls.Add($checkboxPictures)
	$groupbox3.Controls.Add($checkboxDocuments)
	$groupbox3.Controls.Add($checkboxDownloads)
	$groupbox3.Controls.Add($checkboxDesktop)
	$groupbox3.Location = '9, 109'
	$groupbox3.Name = 'groupbox3'
	$groupbox3.Size = '245, 134'
	$groupbox3.TabIndex = 29
	$groupbox3.TabStop = $False
	$groupbox3.Text = 'Directories'
	$groupbox3.UseCompatibleTextRendering = $True
	#
	# checkboxCustomDirectory
	#
	$checkboxCustomDirectory.Location = '6, 96'
	$checkboxCustomDirectory.Name = 'checkboxCustomDirectory'
	$checkboxCustomDirectory.Size = '122, 24'
	$checkboxCustomDirectory.TabIndex = 36
	$checkboxCustomDirectory.Text = 'Custom Directory'
	$checkboxCustomDirectory.UseCompatibleTextRendering = $True
	$checkboxCustomDirectory.UseVisualStyleBackColor = $True
	#
	# textbox7
	#
	$textbox7.Location = '134, 96'
	$textbox7.Name = 'textbox7'
	$textbox7.Size = '100, 20'
	$textbox7.TabIndex = 35
	#
	# checkboxQuickparts
	#
	$checkboxQuickparts.Location = '6, 76'
	$checkboxQuickparts.Name = 'checkboxQuickparts'
	$checkboxQuickparts.Size = '109, 24'
	$checkboxQuickparts.TabIndex = 34
	$checkboxQuickparts.Text = 'Quickparts'
	$checkboxQuickparts.UseCompatibleTextRendering = $True
	$checkboxQuickparts.UseVisualStyleBackColor = $True
	#
	# checkboxBrowsers
	#
	$checkboxBrowsers.Location = '134, 59'
	$checkboxBrowsers.Name = 'checkboxBrowsers'
	$checkboxBrowsers.Size = '104, 24'
	$checkboxBrowsers.TabIndex = 33
	$checkboxBrowsers.Text = 'Browsers'
	$checkboxBrowsers.UseCompatibleTextRendering = $True
	$checkboxBrowsers.UseVisualStyleBackColor = $True
	#
	# checkboxVideos
	#
	$checkboxVideos.Location = '6, 57'
	$checkboxVideos.Name = 'checkboxVideos'
	$checkboxVideos.Size = '104, 24'
	$checkboxVideos.TabIndex = 32
	$checkboxVideos.Text = 'Videos'
	$checkboxVideos.UseCompatibleTextRendering = $True
	$checkboxVideos.UseVisualStyleBackColor = $True
	#
	# checkboxPictures
	#
	$checkboxPictures.Location = '134, 40'
	$checkboxPictures.Name = 'checkboxPictures'
	$checkboxPictures.Size = '104, 24'
	$checkboxPictures.TabIndex = 31
	$checkboxPictures.Text = 'Pictures'
	$checkboxPictures.UseCompatibleTextRendering = $True
	$checkboxPictures.UseVisualStyleBackColor = $True
	$checkboxPictures.add_CheckedChanged($checkboxPictures_CheckedChanged)
	#
	# checkboxDocuments
	#
	$checkboxDocuments.Location = '134, 22'
	$checkboxDocuments.Name = 'checkboxDocuments'
	$checkboxDocuments.Size = '104, 24'
	$checkboxDocuments.TabIndex = 30
	$checkboxDocuments.Text = 'Documents'
	$checkboxDocuments.UseCompatibleTextRendering = $True
	$checkboxDocuments.UseVisualStyleBackColor = $True
	#
	# checkboxDownloads
	#
	$checkboxDownloads.Location = '6, 38'
	$checkboxDownloads.Name = 'checkboxDownloads'
	$checkboxDownloads.Size = '104, 24'
	$checkboxDownloads.TabIndex = 29
	$checkboxDownloads.Text = 'Downloads'
	$checkboxDownloads.UseCompatibleTextRendering = $True
	$checkboxDownloads.UseVisualStyleBackColor = $True
	#
	# checkboxDesktop
	#
	$checkboxDesktop.Location = '6, 19'
	$checkboxDesktop.Name = 'checkboxDesktop'
	$checkboxDesktop.Size = '104, 27'
	$checkboxDesktop.TabIndex = 28
	$checkboxDesktop.Text = 'Desktop'
	$checkboxDesktop.UseCompatibleTextRendering = $True
	$checkboxDesktop.UseVisualStyleBackColor = $True
	$checkboxDesktop.add_CheckedChanged($checkboxDesktop_CheckedChanged)
	#
	# groupbox2
	#
	$groupbox2.Controls.Add($textbox1)
	$groupbox2.Controls.Add($textbox2)
	$groupbox2.Controls.Add($labelFromLocation)
	$groupbox2.Controls.Add($labelToLocation)
	$groupbox2.Location = '9, 27'
	$groupbox2.Name = 'groupbox2'
	$groupbox2.Size = '245, 76'
	$groupbox2.TabIndex = 28
	$groupbox2.TabStop = $False
	$groupbox2.Text = 'Locations'
	$groupbox2.UseCompatibleTextRendering = $True
	#
	# textbox1
	#
	$textbox1.Location = '102, 19'
	$textbox1.Name = 'textbox1'
	$textbox1.Size = '128, 20'
	$textbox1.TabIndex = 1
	#
	# textbox2
	#
	$textbox2.Location = '102, 45'
	$textbox2.Name = 'textbox2'
	$textbox2.Size = '128, 20'
	$textbox2.TabIndex = 2
	#
	# labelFromLocation
	#
	$labelFromLocation.AutoSize = $True
	$labelFromLocation.Location = '7, 22'
	$labelFromLocation.Name = 'labelFromLocation'
	$labelFromLocation.Size = '77, 17'
	$labelFromLocation.TabIndex = 11
	$labelFromLocation.Text = 'From Location'
	$labelFromLocation.UseCompatibleTextRendering = $True
	#
	# labelToLocation
	#
	$labelToLocation.AutoSize = $True
	$labelToLocation.Location = '7, 48'
	$labelToLocation.Name = 'labelToLocation'
	$labelToLocation.Size = '63, 17'
	$labelToLocation.TabIndex = 12
	$labelToLocation.Text = 'To Location'
	$labelToLocation.UseCompatibleTextRendering = $True
	#
	# richtextbox1
	#
	$richtextbox1.Location = '5, 356'
	$richtextbox1.Name = 'richtextbox1'
	$richtextbox1.Size = '400, 90'
	$richtextbox1.TabIndex = 7
	$richtextbox1.Text = ''
	#
	# tooltip1
	#
	$Info.ResumeLayout()
	$groupbox3.ResumeLayout()
	$groupbox2.ResumeLayout()
	$formProfileBackup.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formProfileBackup.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formProfileBackup.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formProfileBackup.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formProfileBackup.ShowDialog()

} #End Function

#Call the form
Show-gddgfhdfghgfdh_psf | Out-Null
