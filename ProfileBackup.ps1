#requires -Version 3
#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 85d00cdb-7072-4d50-8eee-0efbbd738375
# Source File: gddgfhdfghgfdh.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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
e/kT/P+Lz1//BRf13A0HDQAA#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Form code generated by:  PowerShell Studio 2019
     Generated on:       	  8/2/2019 9:07 AM
	 Powershell Logic by:     Alan Newingham
	 Contact: 		   	      alan.newingham@gmail.com
	 Git:					  https://github.com/01000001-01001110/Share
	--------------------------------------------------------------------------------
#>


#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Show-ProfileBackup {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formProfileBackup = New-Object 'System.Windows.Forms.Form'
	$checkboxNewComputer = New-Object 'System.Windows.Forms.CheckBox'
	$labelCheckDirectoryYouWan = New-Object 'System.Windows.Forms.Label'
	$Info = New-Object 'System.Windows.Forms.GroupBox'
	$labelenvUserName = New-Object 'System.Windows.Forms.Label'
	$labelOSInstallDate = New-Object 'System.Windows.Forms.Label'
	$labelenvCOMPUTERNAME = New-Object 'System.Windows.Forms.Label'
	$labelAuthenticatedUser = New-Object 'System.Windows.Forms.Label'
	$labelInstDate = New-Object 'System.Windows.Forms.Label'
	$labelWindowsUser = New-Object 'System.Windows.Forms.Label'
	$label1 = New-Object 'System.Windows.Forms.Label'
	$labelDeviceName = New-Object 'System.Windows.Forms.Label'
	$labelProfileBackup005 = New-Object 'System.Windows.Forms.Label'
	$buttonPrograms = New-Object 'System.Windows.Forms.Button'
	$buttonInventory = New-Object 'System.Windows.Forms.Button'
	$buttonPrinters = New-Object 'System.Windows.Forms.Button'
	$buttonBackup = New-Object 'System.Windows.Forms.Button'
	$progressbar1 = New-Object 'System.Windows.Forms.ProgressBar'
	$groupbox3 = New-Object 'System.Windows.Forms.GroupBox'
	$checkboxOneDrive = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxCustomDirectory = New-Object 'System.Windows.Forms.CheckBox'
	$textbox7 = New-Object 'System.Windows.Forms.TextBox'
	$checkboxQuickparts = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxBrowsers = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxVideos = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxPictures = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxDocuments = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxDownloads = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxDesktop = New-Object 'System.Windows.Forms.CheckBox'
	$groupbox2 = New-Object 'System.Windows.Forms.GroupBox'
	$textbox1 = New-Object 'System.Windows.Forms.TextBox'
	$textbox2 = New-Object 'System.Windows.Forms.TextBox'
	$labelFromLocation = New-Object 'System.Windows.Forms.Label'
	$labelToLocation = New-Object 'System.Windows.Forms.Label'
	$richtextbox1 = New-Object 'System.Windows.Forms.RichTextBox'
	$tooltip1 = New-Object 'System.Windows.Forms.ToolTip'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formProfileBackup_Load={
		#TODO: Initialize Form Controls here
		
	}
	
	#Begin Region - Automatic System Information Gathering
	#shortened my information gathering script to this as it was taking the script too long to load on startup. 

	$CurrentUserName = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name
	[string]$ComputerName = $env:computername
	$Computer = $ComputerName
	$LoggedOnUser = (Get-WmiObject win32_computersystem -ComputerName $Computer).Username
	$InstDate = (Get-CimInstance Win32_OperatingSystem).InstallDate
	#End Region - Automatic System Information Gathering
	
	# Setting up Speech
	# Need to load the System.Speech assembly
	Add-Type -AssemblyName System.speech
	
	# Now we create the SpeechSynthesizer object.
	$speak = New-Object System.Speech.Synthesis.SpeechSynthesizer
	
	# Setting voice
	$speak.SelectVoice('Microsoft Zira Desktop')
		
	function Get-Inventory
	{
		$InventoryScript = cmd /c "net use"
		$InventoryScript += cmd /c "WMIC OS LIST BRIEF"
		$InventoryScript += cmd /c "WMIC BIOS get serialnumber"
		$InventoryScript += cmd /c "ipconfig /all"
		$InventoryScript += cmd /c 'net localgroup "Administrators"'
		$InventoryScript += cmd /c "WMIC OS GET csname"
		$InventoryScript += cmd /c 'netsh advfirewall export "$textbox2.Text\firwallpolicy.wfw"'
		$InventoryScript += cmd /c "WEVTUtil query-events System /count:500 /rd:true /format:text"
		$InventoryScript | Out-GridView
	}
	function listUsers
	{
		$userFolders = Get-ChildItem -path c:\users | Select-Object Name
		[array]$userFolders = Get-ChildItem -path C:\Users | Select-Object Name
		ForEach ($Item in $userFolders) { $richtextbox1.Items.Add($Item.Name) }
	}
	
	function backupDirectory
	{
		$source = $TextBox1.Text
		$dest = $TextBox2.Text
		If (Test-Path $source)
		{
			If ($checkboxNewComputer.Checked)
			{
					cmd /c 'start "" "%ProgramFiles(x86)%\Microsoft Office\Office16\Outlook.exe"'
					cmd /c 'start "" "%ProgramFiles(x86)%\Google\Chrome\Application\chrome.exe"'
					cmd /c 'start "" "%ProgramFiles%\Mozilla Firefox\firefox.exe"'
					cmd /c 'start control'
					cmd /c 'start control /name Microsoft.DevicesAndPrinters'	
			}
			If ($checkboxDesktop.Checked)
			{
				$ProgressBar1.Value = "15"
				#Copy-Item "$source\Desktop" -Destination "$dest\Desktop" -Recurse -Force
				#robocopy c:\users\newingha\Desktop e:\backup\why *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				Robocopy $source\Desktop $dest\Desktop *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				#$richtextbox1.Text = Robocopy $source\Desktop $dest\Desktop *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt | Out-String
				$richtextbox1.Text += "`nDesktop directory backed up successfully."
				$speak.Speak("The Desktop directory completed backing up. 30 percent complete")
				$richtextbox1.Text += "`n# # # # # # # # # #`n"
				$ProgressBar1.Value = "30"
			}
			If ($checkboxDocuments.Checked)
			{
				Robocopy $source\Documents $dest\Documents *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$richtextbox1.Text += "`nDocuments directory backed up successfully."
				$speak.Speak("The Documents directory completed backing up. 45 percent complete")
				$richtextbox1.Text += "`n# # # # # # # # # #`n"
				$ProgressBar1.Value = "45"
			}
			If ($checkboxDownloads.Checked)
			{
				Robocopy $source\Downloads $dest\Downloads *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$richtextbox1.Text += "`nDownloads directory backed up successfully."
				$speak.Speak("The Downloads directory completed backing up. 57 percent complete")
				$richtextbox1.Text += "`n# # # # # # # # # #`n"
				$ProgressBar1.Value = "57"
			}
			If ($checkboxBrowsers.Checked)
			{
				$richtextbox1.Text += "Initializing Browser data backup, please close the customer's browsers now."
				Robocopy $source\Favorites $dest\Favorites *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$ProgressBar1.Value = "60"
				Robocopy $source\AppData\Local\Google $dest\AppData\Local\Google *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$ProgressBar1.Value = "63"
				Robocopy $source\AppData\Roaming\Mozilla\Firefox\Profiles $dest\AppData\Roaming\Mozilla\Firefox\Profiles *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$richtextbox1.Text += "`nIE, FireFox, and Chrome Bookmark directories backed up successfully."
				$speak.Speak("The Eye E, Fire Fox and Chrome Bookmarks directories completed backing up. 65 percent complete")
				$richtextbox1.Text += "`n# # # # # # # # # #`n"
				$ProgressBar1.Value = "65"
			}
			If ($checkboxPictures.Checked)
			{
				Robocopy $source\Pictures $dest\Pictures *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$richtextbox1.Text += "`nPictures directory backed up successfully."
				$speak.Speak("The Pictures directory completed backing up. 75 percent complete")
				$richtextbox1.Text += "`n# # # # # # # # # #`n"
				$ProgressBar1.Value = "75"
			}
			If ($checkboxVideos.Checked)
			{
				Robocopy $source\Videos $dest\Videos *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$richtextbox1.Text += "`nVideos directory backed up successfully."
				$speak.Speak("The Videos directory completed backing up. 80 percent complete")
				$richtextbox1.Text += "`n# # # # # # # # # #`n"
				$ProgressBar1.Value = "80"
			}
			If ($checkboxQuickparts.Checked)
			{
				Robocopy "$source\application data\microsoft\templates" "$dest\application data\microsoft\templates" *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$richtextbox1.Text += "`nQuickParts directory backed up successfully."
				$speak.Speak("The Microsoft QuickParts completed backing up. 90 percent complete")
				$richtextbox1.Text += "`n# # # # # # # # # #`n"
				$ProgressBar1.Value = "90"
			}
			If ($checkboxCustomDirectory.Checked)
			{
				$source = $textbox7.Text
				Robocopy $source $dest\Custom_Directory_Backup *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				$richtextbox1.Text += "`nCustom directory backed up successfully."
				$speak.Speak("The custom backup directory completed backing up. 93 percent complete")
				$richtextbox1.Text += "`n# # # # # # # # # #`n"
				$ProgressBar1.Value = "93"
			}
			If ($checkboxOneDrive.Checked)
			{
				Robocopy $source\OneDrive - Embry-Riddle Aeronautical University $dest\OneDrive - Embry-Riddle Aeronautical University.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
				
				$richtextbox1.Text += "`OneDrive directory backed up successfully."
				$speak.Speak("The OneDrive, directory completed backing up. 96 percent complete")
				$richtextbox1.Text += "`n# # # # # # # # # #`n"
				$ProgressBar1.Value = "96"
				
			}
			Robocopy $source\AppData\Roaming\Adobe\Acrobat\DC\Security $dest\AppData\Roaming\Adobe\Acrobat\DC\Security *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
			$richtextbox1.Text += "`nAdobe signature file backed up successfully."
			$speak.Speak("The Adobe signature file completed backing up.")
			$richtextbox1.Text += "`nOneDrive-Not-Yet-Syncd-Files directory backed up successfully."
			$speak.Speak("OneDrive Not Yet Sinked Files directory backed up successfully.")
			Robocopy $source\application data\microsoft\signatures $dest\application data\microsoft\signatures *.* /E /ZB /J /LOG+:$source\desktop\backuplog.txt
			$richtextbox1.Text += "`nOutlook signature backed up successfully."
			$speak.Speak("The Outlook signaturecompleted backing up. 98 percent complete")
			$ProgressBar1.Value = "98"
			$ProgressBar1.Value = "100"
			$speak.Speak("All selected directories completed backing up. Please continue with your day in whatever manner that might mean.")
			$result = [System.Windows.Forms.MessageBox]::Show('This Operation Completed Successfully!', 'Warning', 'OK', 'Warning')
			$result
			}
		Else
		{
			$speak.Speak("No joy. I was unable to locate the directory you specified. Please check your path and try again.")
			$result = [System.Windows.Forms.MessageBox]::Show('Unable to reach souce location!', 'Warning', 'YesNo', 'Warning')
			$result
		}
	}
	
	$buttonBackup_Click={
		backupDirectory
	}
	
	$buttonPrograms_Click={
		Get-ItemProperty HKLM:\Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Out-GridView
	}
	
	$buttonPrinters_Click={
		control printers
	}
	
	$buttonInventory_Click={
		Get-Inventory
	}
	
	

	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formProfileBackup.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$checkboxNewComputer.remove_CheckedChanged($checkboxNewComputer_CheckedChanged)
			$buttonPrograms.remove_Click($buttonPrograms_Click)
			$buttonInventory.remove_Click($buttonInventory_Click)
			$buttonPrinters.remove_Click($buttonPrinters_Click)
			$buttonBackup.remove_Click($buttonBackup_Click)
			$checkboxDesktop.remove_CheckedChanged($checkboxDesktop_CheckedChanged)
			$formProfileBackup.remove_Load($formProfileBackup_Load)
			$formProfileBackup.remove_Load($Form_StateCorrection_Load)
			$formProfileBackup.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formProfileBackup.SuspendLayout()
	$Info.SuspendLayout()
	$groupbox3.SuspendLayout()
	$groupbox2.SuspendLayout()
	#
	# formProfileBackup
	#
	$formProfileBackup.Controls.Add($checkboxNewComputer)
	$formProfileBackup.Controls.Add($labelCheckDirectoryYouWan)
	$formProfileBackup.Controls.Add($Info)
	$formProfileBackup.Controls.Add($labelProfileBackup005)
	$formProfileBackup.Controls.Add($buttonPrograms)
	$formProfileBackup.Controls.Add($buttonInventory)
	$formProfileBackup.Controls.Add($buttonPrinters)
	$formProfileBackup.Controls.Add($buttonBackup)
	$formProfileBackup.Controls.Add($progressbar1)
	$formProfileBackup.Controls.Add($groupbox3)
	$formProfileBackup.Controls.Add($groupbox2)
	$formProfileBackup.Controls.Add($richtextbox1)
	$formProfileBackup.AutoScaleDimensions = '6, 13'
	$formProfileBackup.AutoScaleMode = 'Font'
	$formProfileBackup.ClientSize = '408, 461'
	#region Binary Data
	
	#endregion
	$formProfileBackup.Name = 'formProfileBackup'
	$formProfileBackup.Text = 'Profile Backup '
	$formProfileBackup.add_Load($formProfileBackup_Load)
	#
	# checkboxNewComputer
	#
	$checkboxNewComputer.Location = '276, 42'
	$checkboxNewComputer.Name = 'checkboxNewComputer'
	$checkboxNewComputer.Size = '116, 24'
	$checkboxNewComputer.TabIndex = 38
	$checkboxNewComputer.Text = 'New Computer?'
	$checkboxNewComputer.UseCompatibleTextRendering = $True
	$checkboxNewComputer.UseVisualStyleBackColor = $True
	$checkboxNewComputer.add_CheckedChanged($checkboxNewComputer_CheckedChanged)
	#
	# labelCheckDirectoryYouWan
	#
	$labelCheckDirectoryYouWan.AutoSize = $True
	$labelCheckDirectoryYouWan.Location = '270, 54'
	$labelCheckDirectoryYouWan.Name = 'labelCheckDirectoryYouWan'
	$labelCheckDirectoryYouWan.Size = '0, 16'
	$labelCheckDirectoryYouWan.TabIndex = 46
	$labelCheckDirectoryYouWan.UseCompatibleTextRendering = $True
	#
	# Info
	#
	$Info.Controls.Add($labelenvUserName)
	$Info.Controls.Add($labelOSInstallDate)
	$Info.Controls.Add($labelenvCOMPUTERNAME)
	$Info.Controls.Add($labelAuthenticatedUser)
	$Info.Controls.Add($labelInstDate)
	$Info.Controls.Add($labelWindowsUser)
	$Info.Controls.Add($label1)
	$Info.Controls.Add($labelDeviceName)
	$Info.Location = '9, 250'
	$Info.Name = 'Info'
	$Info.Size = '245, 100'
	$Info.TabIndex = 44
	$Info.TabStop = $False
	$Info.Text = 'Information'
	$Info.UseCompatibleTextRendering = $True
	#
	# labelenvUserName
	#
	$labelenvUserName.AutoSize = $True
	$labelenvUserName.Location = '119, 57'
	$labelenvUserName.Name = 'labelenvUserName'
	$labelenvUserName.Size = '86, 17'
	$labelenvUserName.TabIndex = 36
	$labelenvUserName.Text = "$env:UserName"
	$labelenvUserName.UseCompatibleTextRendering = $True
	#
	# labelOSInstallDate
	#
	$labelOSInstallDate.AutoSize = $True
	$labelOSInstallDate.Location = '30, 74'
	$labelOSInstallDate.Name = 'labelOSInstallDate'
	$labelOSInstallDate.Size = '83, 17'
	$labelOSInstallDate.TabIndex = 43
	$labelOSInstallDate.Text = 'OS Install Date:'
	$labelOSInstallDate.UseCompatibleTextRendering = $True
	#
	# labelenvCOMPUTERNAME
	#
	$labelenvCOMPUTERNAME.AutoSize = $True
	$labelenvCOMPUTERNAME.Location = '119, 40'
	$labelenvCOMPUTERNAME.Name = 'labelenvCOMPUTERNAME'
	$labelenvCOMPUTERNAME.Size = '87, 17'
	$labelenvCOMPUTERNAME.TabIndex = 35
	$labelenvCOMPUTERNAME.Text = "$LoggedOnUser"
	$labelenvCOMPUTERNAME.UseCompatibleTextRendering = $True
	#
	# labelAuthenticatedUser
	#
	$labelAuthenticatedUser.AutoSize = $True
	$labelAuthenticatedUser.Location = '9, 57'
	$labelAuthenticatedUser.Name = 'labelAuthenticatedUser'
	$labelAuthenticatedUser.Size = '104, 17'
	$labelAuthenticatedUser.TabIndex = 42
	$labelAuthenticatedUser.Text = 'Authenticated User:'
	$labelAuthenticatedUser.UseCompatibleTextRendering = $True
	#
	# labelInstDate
	#
	$labelInstDate.AutoSize = $True
	$labelInstDate.Location = '119, 74'
	$labelInstDate.Name = 'labelInstDate'
	$labelInstDate.Size = '53, 17'
	$labelInstDate.TabIndex = 37
	$labelInstDate.Text = "$InstDate"
	$labelInstDate.UseCompatibleTextRendering = $True
	#
	# labelWindowsUser
	#
	$labelWindowsUser.AutoSize = $True
	$labelWindowsUser.Location = '33, 40'
	$labelWindowsUser.Name = 'labelWindowsUser'
	$labelWindowsUser.Size = '80, 17'
	$labelWindowsUser.TabIndex = 41
	$labelWindowsUser.Text = 'Windows User:'
	$labelWindowsUser.UseCompatibleTextRendering = $True
	#
	# label1
	#
	$label1.AutoSize = $True
	$label1.Location = '119, 23'
	$label1.Name = 'label1'
	$label1.Size = '112, 17'
	$label1.TabIndex = 39
	$label1.Text = "$env:ComputerName"
	$label1.UseCompatibleTextRendering = $True
	#
	# labelDeviceName
	#
	$labelDeviceName.AutoSize = $True
	$labelDeviceName.Location = '39, 22'
	$labelDeviceName.Name = 'labelDeviceName'
	$labelDeviceName.Size = '75, 17'
	$labelDeviceName.TabIndex = 40
	$labelDeviceName.Text = 'Device Name:'
	$labelDeviceName.UseCompatibleTextRendering = $True
	#
	# labelProfileBackup005
	#
	$labelProfileBackup005.AutoSize = $True
	$labelProfileBackup005.Location = '150, 9'
	$labelProfileBackup005.Name = 'labelProfileBackup005'
	$labelProfileBackup005.Size = '105, 17'
	$labelProfileBackup005.TabIndex = 38
	$labelProfileBackup005.Text = 'Profile Backup 0.0.5'
	$labelProfileBackup005.UseCompatibleTextRendering = $True
	#
	# buttonPrograms
	#
	$buttonPrograms.Location = '317, 255'
	$buttonPrograms.Name = 'buttonPrograms'
	$buttonPrograms.Size = '75, 23'
	$buttonPrograms.TabIndex = 34
	$buttonPrograms.Text = 'Programs'
	$buttonPrograms.UseCompatibleTextRendering = $True
	$buttonPrograms.UseVisualStyleBackColor = $True
	$buttonPrograms.add_Click($buttonPrograms_Click)
	#
	# buttonInventory
	#
	$buttonInventory.Location = '317, 301'
	$buttonInventory.Name = 'buttonInventory'
	$buttonInventory.Size = '75, 23'
	$buttonInventory.TabIndex = 33
	$buttonInventory.Text = 'Inventory'
	$buttonInventory.UseCompatibleTextRendering = $True
	$buttonInventory.UseVisualStyleBackColor = $True
	$buttonInventory.add_Click($buttonInventory_Click)
	#
	# buttonPrinters
	#
	$buttonPrinters.Location = '317, 278'
	$buttonPrinters.Name = 'buttonPrinters'
	$buttonPrinters.Size = '75, 23'
	$buttonPrinters.TabIndex = 32
	$buttonPrinters.Text = 'Printers'
	$buttonPrinters.UseCompatibleTextRendering = $True
	$buttonPrinters.UseVisualStyleBackColor = $True
	$buttonPrinters.add_Click($buttonPrinters_Click)
	#
	# buttonBackup
	#
	$buttonBackup.Location = '317, 324'
	$buttonBackup.Name = 'buttonBackup'
	$buttonBackup.Size = '75, 25'
	$buttonBackup.TabIndex = 31
	$buttonBackup.Text = 'Backup'
	$buttonBackup.UseCompatibleTextRendering = $True
	$buttonBackup.UseVisualStyleBackColor = $True
	$buttonBackup.add_Click($buttonBackup_Click)
	#
	# progressbar1
	#
	$progressbar1.Location = '0, 446'
	$progressbar1.Name = 'progressbar1'
	$progressbar1.Size = '409, 17'
	$progressbar1.TabIndex = 30
	#
	# groupbox3
	#
	$groupbox3.Controls.Add($checkboxOneDrive)
	$groupbox3.Controls.Add($checkboxCustomDirectory)
	$groupbox3.Controls.Add($textbox7)
	$groupbox3.Controls.Add($checkboxQuickparts)
	$groupbox3.Controls.Add($checkboxBrowsers)
	$groupbox3.Controls.Add($checkboxVideos)
	$groupbox3.Controls.Add($checkboxPictures)
	$groupbox3.Controls.Add($checkboxDocuments)
	$groupbox3.Controls.Add($checkboxDownloads)
	$groupbox3.Controls.Add($checkboxDesktop)
	$groupbox3.Location = '9, 109'
	$groupbox3.Name = 'groupbox3'
	$groupbox3.Size = '246, 134'
	$groupbox3.TabIndex = 29
	$groupbox3.TabStop = $False
	$groupbox3.Text = 'Directories'
	$groupbox3.UseCompatibleTextRendering = $True
	#
	# checkboxOneDrive
	#
	$checkboxOneDrive.Location = '134, 76'
	$checkboxOneDrive.Name = 'checkboxOneDrive'
	$checkboxOneDrive.Size = '104, 24'
	$checkboxOneDrive.TabIndex = 37
	$checkboxOneDrive.Text = 'OneDrive'
	$checkboxOneDrive.UseCompatibleTextRendering = $True
	$checkboxOneDrive.UseVisualStyleBackColor = $True
	#
	# checkboxCustomDirectory
	#
	$checkboxCustomDirectory.Location = '6, 96'
	$checkboxCustomDirectory.Name = 'checkboxCustomDirectory'
	$checkboxCustomDirectory.Size = '122, 24'
	$checkboxCustomDirectory.TabIndex = 36
	$checkboxCustomDirectory.Text = 'Custom Directory'
	$checkboxCustomDirectory.UseCompatibleTextRendering = $True
	$checkboxCustomDirectory.UseVisualStyleBackColor = $True
	#
	# textbox7
	#
	$textbox7.Location = '134, 100'
	$textbox7.Name = 'textbox7'
	$textbox7.Size = '100, 20'
	$textbox7.TabIndex = 35
	#
	# checkboxQuickparts
	#
	$checkboxQuickparts.Location = '6, 76'
	$checkboxQuickparts.Name = 'checkboxQuickparts'
	$checkboxQuickparts.Size = '109, 24'
	$checkboxQuickparts.TabIndex = 34
	$checkboxQuickparts.Text = 'Quickparts'
	$checkboxQuickparts.UseCompatibleTextRendering = $True
	$checkboxQuickparts.UseVisualStyleBackColor = $True
	#
	# checkboxBrowsers
	#
	$checkboxBrowsers.Location = '134, 57'
	$checkboxBrowsers.Name = 'checkboxBrowsers'
	$checkboxBrowsers.Size = '104, 24'
	$checkboxBrowsers.TabIndex = 33
	$checkboxBrowsers.Text = 'Browsers'
	$checkboxBrowsers.UseCompatibleTextRendering = $True
	$checkboxBrowsers.UseVisualStyleBackColor = $True
	#
	# checkboxVideos
	#
	$checkboxVideos.Location = '6, 57'
	$checkboxVideos.Name = 'checkboxVideos'
	$checkboxVideos.Size = '104, 24'
	$checkboxVideos.TabIndex = 32
	$checkboxVideos.Text = 'Videos'
	$checkboxVideos.UseCompatibleTextRendering = $True
	$checkboxVideos.UseVisualStyleBackColor = $True
	#
	# checkboxPictures
	#
	$checkboxPictures.Location = '134, 38'
	$checkboxPictures.Name = 'checkboxPictures'
	$checkboxPictures.Size = '104, 24'
	$checkboxPictures.TabIndex = 31
	$checkboxPictures.Text = 'Pictures'
	$checkboxPictures.UseCompatibleTextRendering = $True
	$checkboxPictures.UseVisualStyleBackColor = $True
	#
	# checkboxDocuments
	#
	$checkboxDocuments.Location = '134, 20'
	$checkboxDocuments.Name = 'checkboxDocuments'
	$checkboxDocuments.Size = '104, 24'
	$checkboxDocuments.TabIndex = 30
	$checkboxDocuments.Text = 'Documents'
	$checkboxDocuments.UseCompatibleTextRendering = $True
	$checkboxDocuments.UseVisualStyleBackColor = $True
	#
	# checkboxDownloads
	#
	$checkboxDownloads.Location = '6, 38'
	$checkboxDownloads.Name = 'checkboxDownloads'
	$checkboxDownloads.Size = '104, 24'
	$checkboxDownloads.TabIndex = 29
	$checkboxDownloads.Text = 'Downloads'
	$checkboxDownloads.UseCompatibleTextRendering = $True
	$checkboxDownloads.UseVisualStyleBackColor = $True
	#
	# checkboxDesktop
	#
	$checkboxDesktop.Location = '6, 19'
	$checkboxDesktop.Name = 'checkboxDesktop'
	$checkboxDesktop.Size = '104, 27'
	$checkboxDesktop.TabIndex = 28
	$checkboxDesktop.Text = 'Desktop'
	$checkboxDesktop.UseCompatibleTextRendering = $True
	$checkboxDesktop.UseVisualStyleBackColor = $True
	$checkboxDesktop.add_CheckedChanged($checkboxDesktop_CheckedChanged)
	#
	# groupbox2
	#
	$groupbox2.Controls.Add($textbox1)
	$groupbox2.Controls.Add($textbox2)
	$groupbox2.Controls.Add($labelFromLocation)
	$groupbox2.Controls.Add($labelToLocation)
	$groupbox2.Location = '9, 27'
	$groupbox2.Name = 'groupbox2'
	$groupbox2.Size = '245, 76'
	$groupbox2.TabIndex = 28
	$groupbox2.TabStop = $False
	$groupbox2.Text = 'Locations'
	$groupbox2.UseCompatibleTextRendering = $True
	#
	# textbox1
	#
	$textbox1.Location = '102, 19'
	$textbox1.Name = 'textbox1'
	$textbox1.Size = '128, 20'
	$textbox1.TabIndex = 1
	#
	# textbox2
	#
	$textbox2.Location = '102, 45'
	$textbox2.Name = 'textbox2'
	$textbox2.Size = '128, 20'
	$textbox2.TabIndex = 2
	#
	# labelFromLocation
	#
	$labelFromLocation.AutoSize = $True
	$labelFromLocation.Location = '7, 22'
	$labelFromLocation.Name = 'labelFromLocation'
	$labelFromLocation.Size = '77, 17'
	$labelFromLocation.TabIndex = 11
	$labelFromLocation.Text = 'From Location'
	$labelFromLocation.UseCompatibleTextRendering = $True
	#
	# labelToLocation
	#
	$labelToLocation.AutoSize = $True
	$labelToLocation.Location = '7, 48'
	$labelToLocation.Name = 'labelToLocation'
	$labelToLocation.Size = '63, 17'
	$labelToLocation.TabIndex = 12
	$labelToLocation.Text = 'To Location'
	$labelToLocation.UseCompatibleTextRendering = $True
	#
	# richtextbox1
	#
	$richtextbox1.Location = '5, 356'
	$richtextbox1.Name = 'richtextbox1'
	$richtextbox1.Size = '400, 90'
	$richtextbox1.TabIndex = 7
	$richtextbox1.Text = ''
	#
	# tooltip1
	#
	$groupbox2.ResumeLayout()
	$groupbox3.ResumeLayout()
	$Info.ResumeLayout()
	$formProfileBackup.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formProfileBackup.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formProfileBackup.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formProfileBackup.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formProfileBackup.ShowDialog()

} #End Function

#Call the form
Show-ProfileBackup | Out-Null
