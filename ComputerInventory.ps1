
<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2019 v5.6.167
     Generated on:       9/25/2019 3:12 PM
     Generated by:       Alan Newingham
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2019
#>


#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Show-ComputerInventory_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$form1 = New-Object 'System.Windows.Forms.Form'
	$linklabelAbout = New-Object 'System.Windows.Forms.LinkLabel'
	$buttonCose = New-Object 'System.Windows.Forms.Button'
	$groupbox3 = New-Object 'System.Windows.Forms.GroupBox'
	$labelThisWillAlsoWorkRemo = New-Object 'System.Windows.Forms.Label'
	$buttonMouse = New-Object 'System.Windows.Forms.Button'
	$textbox21 = New-Object 'System.Windows.Forms.TextBox'
	$labelComputerNAme = New-Object 'System.Windows.Forms.Label'
	$button1 = New-Object 'System.Windows.Forms.Button'
	$buttonGraphics = New-Object 'System.Windows.Forms.Button'
	$buttonNetwork = New-Object 'System.Windows.Forms.Button'
	$buttonOS = New-Object 'System.Windows.Forms.Button'
	$buttonNetStat = New-Object 'System.Windows.Forms.Button'
	$buttonNetworkSettings = New-Object 'System.Windows.Forms.Button'
	$buttonPingTest = New-Object 'System.Windows.Forms.Button'
	$buttonMonitors = New-Object 'System.Windows.Forms.Button'
	$buttonKeyboard = New-Object 'System.Windows.Forms.Button'
	$buttonServices = New-Object 'System.Windows.Forms.Button'
	$buttonLogicalDrives = New-Object 'System.Windows.Forms.Button'
	$buttonProcesses = New-Object 'System.Windows.Forms.Button'
	$buttonSystemInformation = New-Object 'System.Windows.Forms.Button'
	$buttonPortBattery = New-Object 'System.Windows.Forms.Button'
	$buttonBios = New-Object 'System.Windows.Forms.Button'
	$buttonFAn = New-Object 'System.Windows.Forms.Button'
	$buttonMotherboard = New-Object 'System.Windows.Forms.Button'
	$buttonSoftwareInstalled1 = New-Object 'System.Windows.Forms.Button'
	$buttonPrinters = New-Object 'System.Windows.Forms.Button'
	$buttonCPU = New-Object 'System.Windows.Forms.Button'
	$buttonBattery = New-Object 'System.Windows.Forms.Button'
	$buttonRAM = New-Object 'System.Windows.Forms.Button'
	$buttonSound = New-Object 'System.Windows.Forms.Button'
	$buttonPhysicalDrives = New-Object 'System.Windows.Forms.Button'
	$buttonOpticalDrive = New-Object 'System.Windows.Forms.Button'
	$buttonRDP = New-Object 'System.Windows.Forms.Button'
	$label19 = New-Object 'System.Windows.Forms.Label'
	$buttonCut = New-Object 'System.Windows.Forms.Button'
	$buttonCopy = New-Object 'System.Windows.Forms.Button'
	$buttonPaste = New-Object 'System.Windows.Forms.Button'
	$label26 = New-Object 'System.Windows.Forms.Label'
	$label25 = New-Object 'System.Windows.Forms.Label'
	$textbox3 = New-Object 'System.Windows.Forms.TextBox'
	$buttonSearchTDX = New-Object 'System.Windows.Forms.Button'
	$buttonSaveToFile = New-Object 'System.Windows.Forms.Button'
	$labelNotes = New-Object 'System.Windows.Forms.Label'
	$richtextbox1 = New-Object 'System.Windows.Forms.RichTextBox'
	$groupbox2 = New-Object 'System.Windows.Forms.GroupBox'
	$textbox11 = New-Object 'System.Windows.Forms.TextBox'
	$labelLastModified = New-Object 'System.Windows.Forms.Label'
	$labelVersion = New-Object 'System.Windows.Forms.Label'
	$textbox10 = New-Object 'System.Windows.Forms.TextBox'
	$labelOS = New-Object 'System.Windows.Forms.Label'
	$label20 = New-Object 'System.Windows.Forms.Label'
	$textbox9 = New-Object 'System.Windows.Forms.TextBox'
	$labelIP = New-Object 'System.Windows.Forms.Label'
	$labelCreationDateAD = New-Object 'System.Windows.Forms.Label'
	$textbox8 = New-Object 'System.Windows.Forms.TextBox'
	$label24 = New-Object 'System.Windows.Forms.Label'
	$labelOU = New-Object 'System.Windows.Forms.Label'
	$textbox7 = New-Object 'System.Windows.Forms.TextBox'
	$textbox2 = New-Object 'System.Windows.Forms.TextBox'
	$textbox4 = New-Object 'System.Windows.Forms.TextBox'
	$textbox5 = New-Object 'System.Windows.Forms.TextBox'
	$textbox6 = New-Object 'System.Windows.Forms.TextBox'
	$buttonSearchComputers = New-Object 'System.Windows.Forms.Button'
	$groupbox1 = New-Object 'System.Windows.Forms.GroupBox'
	$textbox20 = New-Object 'System.Windows.Forms.TextBox'
	$textbox19 = New-Object 'System.Windows.Forms.TextBox'
	$textbox18 = New-Object 'System.Windows.Forms.TextBox'
	$textbox15 = New-Object 'System.Windows.Forms.TextBox'
	$textbox16 = New-Object 'System.Windows.Forms.TextBox'
	$textbox17 = New-Object 'System.Windows.Forms.TextBox'
	$textbox12 = New-Object 'System.Windows.Forms.TextBox'
	$textbox14 = New-Object 'System.Windows.Forms.TextBox'
	$textbox13 = New-Object 'System.Windows.Forms.TextBox'
	$labelTitle = New-Object 'System.Windows.Forms.Label'
	$labelActiveAccount = New-Object 'System.Windows.Forms.Label'
	$labelUsername = New-Object 'System.Windows.Forms.Label'
	$labelDepartment = New-Object 'System.Windows.Forms.Label'
	$labelLocation = New-Object 'System.Windows.Forms.Label'
	$labelEmail = New-Object 'System.Windows.Forms.Label'
	$labelPhone = New-Object 'System.Windows.Forms.Label'
	$labelName = New-Object 'System.Windows.Forms.Label'
	$buttonSearchPeople = New-Object 'System.Windows.Forms.Button'
	$textbox1 = New-Object 'System.Windows.Forms.TextBox'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$form1_Load={
		#TODO: Initialize Form Controls here
		
	}
	
	
	$exitToolStripMenuItem_Click={
		#TODO: Place custom script here
		$form1.Close()
	}
	
	$aboutToolStripMenuItem_Click={
		#TODO: Place custom script here
		[System.Windows.Forms.MessageBox]::Show("Menu Application v1.0","Menu Application");
	}
	
	
	
	#region Control Helper Functions
	function Update-DataGridView
	{
		<#
		.SYNOPSIS
			This functions helps you load items into a DataGridView.
	
		.DESCRIPTION
			Use this function to dynamically load items into the DataGridView control.
	
		.PARAMETER  DataGridView
			The DataGridView control you want to add items to.
	
		.PARAMETER  Item
			The object or objects you wish to load into the DataGridView's items collection.
		
		.PARAMETER  DataMember
			Sets the name of the list or table in the data source for which the DataGridView is displaying data.
	
		.PARAMETER AutoSizeColumns
		    Resizes DataGridView control's columns after loading the items.
		#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.DataGridView]$DataGridView,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Item,
		    [Parameter(Mandatory=$false)]
			[string]$DataMember,
			[System.Windows.Forms.DataGridViewAutoSizeColumnsMode]$AutoSizeColumns = 'None'
		)
		$DataGridView.SuspendLayout()
		$DataGridView.DataMember = $DataMember
		
		if ($null -eq $Item)
		{
			$DataGridView.DataSource = $null
		}
		elseif ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
		{
			$DataGridView.DataSource = $Item.Tables[0]
		}
		elseif ($Item -is [System.ComponentModel.IListSource]`
		-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
		{
			$DataGridView.DataSource = $Item
		}
		else
		{
			$array = New-Object System.Collections.ArrayList
			
			if ($Item -is [System.Collections.IList])
			{
				$array.AddRange($Item)
			}
			else
			{
				$array.Add($Item)
			}
			$DataGridView.DataSource = $array
		}
		
		if ($AutoSizeColumns -ne 'None')
		{
			$DataGridView.AutoResizeColumns($AutoSizeColumns)
		}
		
		$DataGridView.ResumeLayout()
	}
	
	function ConvertTo-DataTable
	{
		<#
			.SYNOPSIS
				Converts objects into a DataTable.
		
			.DESCRIPTION
				Converts objects into a DataTable, which are used for DataBinding.
		
			.PARAMETER  InputObject
				The input to convert into a DataTable.
		
			.PARAMETER  Table
				The DataTable you wish to load the input into.
		
			.PARAMETER RetainColumns
				This switch tells the function to keep the DataTable's existing columns.
			
			.PARAMETER FilterWMIProperties
				This switch removes WMI properties that start with an underline.
		
			.EXAMPLE
				$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
		#>
		[OutputType([System.Data.DataTable])]
		param(
		$InputObject, 
		[ValidateNotNull()]
		[System.Data.DataTable]$Table,
		[switch]$RetainColumns,
		[switch]$FilterWMIProperties)
		
		if($null -eq $Table)
		{
			$Table = New-Object System.Data.DataTable
		}
		
		if ($null -eq $InputObject)
		{
			$Table.Clear()
			return @( ,$Table)
		}
		
		if ($InputObject -is [System.Data.DataTable])
		{
			$Table = $InputObject
		}
		elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
		{
			$Table = $InputObject.Tables[0]
		}
		else
		{
			if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
			{
				#Clear out the Table Contents
				$Table.Clear()
				
				if ($null -eq $InputObject) { return } #Empty Data
				
				$object = $null
				#find the first non null value
				foreach ($item in $InputObject)
				{
					if ($null -ne $item)
					{
						$object = $item
						break
					}
				}
				
				if ($null -eq $object) { return } #All null then empty
				
				#Get all the properties in order to create the columns
				foreach ($prop in $object.PSObject.Get_Properties())
				{
					if (-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__')) #filter out WMI properties
					{
						#Get the type from the Definition string
						$type = $null
						
						if ($null -ne $prop.Value)
						{
							try { $type = $prop.Value.GetType() }
							catch { Out-Null }
						}
						
						if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
						{
							[void]$table.Columns.Add($prop.Name, $type)
						}
						else #Type info not found
						{
							[void]$table.Columns.Add($prop.Name)
						}
					}
				}
				
				if ($object -is [System.Data.DataRow])
				{
					foreach ($item in $InputObject)
					{
						$Table.Rows.Add($item)
					}
					return @( ,$Table)
				}
			}
			else
			{
				$Table.Rows.Clear()
			}
			
			foreach ($item in $InputObject)
			{
				$row = $table.NewRow()
				
				if ($item)
				{
					foreach ($prop in $item.PSObject.Get_Properties())
					{
						if ($table.Columns.Contains($prop.Name))
						{
							$row.Item($prop.Name) = $prop.Value
						}
					}
				}
				[void]$table.Rows.Add($row)
			}
		}
		
		return @(,$Table)
	}
	
	function Show-NotifyIcon
	{
	<#
		.SYNOPSIS
			Displays a NotifyIcon's balloon tip message in the taskbar's notification area.
		
		.DESCRIPTION
			Displays a NotifyIcon's a balloon tip message in the taskbar's notification area.
			
		.PARAMETER NotifyIcon
	     	The NotifyIcon control that will be displayed.
		
		.PARAMETER BalloonTipText
	     	Sets the text to display in the balloon tip.
		
		.PARAMETER BalloonTipTitle
			Sets the Title to display in the balloon tip.
		
		.PARAMETER BalloonTipIcon	
			The icon to display in the ballon tip.
		
		.PARAMETER Timeout	
			The time the ToolTip Balloon will remain visible in milliseconds. 
			Default: 0 - Uses windows default.
	#>
		 param(
		  [Parameter(Mandatory = $true, Position = 0)]
		  [ValidateNotNull()]
		  [System.Windows.Forms.NotifyIcon]$NotifyIcon,
		  [Parameter(Mandatory = $true, Position = 1)]
		  [ValidateNotNullOrEmpty()]
		  [String]$BalloonTipText,
		  [Parameter(Position = 2)]
		  [String]$BalloonTipTitle = '',
		  [Parameter(Position = 3)]
		  [System.Windows.Forms.ToolTipIcon]$BalloonTipIcon = 'None',
		  [Parameter(Position = 4)]
		  [int]$Timeout = 0
	 	)
		
		if($null -eq $NotifyIcon.Icon)
		{
			#Set a Default Icon otherwise the balloon will not show
			$NotifyIcon.Icon = [System.Drawing.Icon]::ExtractAssociatedIcon([System.Windows.Forms.Application]::ExecutablePath)
		}
		
		$NotifyIcon.ShowBalloonTip($Timeout, $BalloonTipTitle, $BalloonTipText, $BalloonTipIcon)
	}
	
	
	
	function Update-ListViewColumnSort
	{
	<#
		.SYNOPSIS
			Sort the ListView's item using the specified column.
		
		.DESCRIPTION
			Sort the ListView's item using the specified column.
			This function uses Add-Type to define a class that sort the items.
			The ListView's Tag property is used to keep track of the sorting.
		
		.PARAMETER ListView
			The ListView control to sort.
		
		.PARAMETER ColumnIndex
			The index of the column to use for sorting.
		
		.PARAMETER SortOrder
			The direction to sort the items. If not specified or set to None, it will toggle.
		
		.EXAMPLE
			Update-ListViewColumnSort -ListView $listview1 -ColumnIndex 0
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ListView]
			$ListView,
			[Parameter(Mandatory = $true)]
			[int]
			$ColumnIndex,
			[System.Windows.Forms.SortOrder]
			$SortOrder = 'None'
		)
		
		if (($ListView.Items.Count -eq 0) -or ($ColumnIndex -lt 0) -or ($ColumnIndex -ge $ListView.Columns.Count))
		{
			return;
		}
		
		#region Define ListViewItemComparer
		try
		{
			[ListViewItemComparer] | Out-Null
		}
		catch
		{
			Add-Type -ReferencedAssemblies ('System.Windows.Forms') -TypeDefinition  @" 
	using System;
	using System.Windows.Forms;
	using System.Collections;
	public class ListViewItemComparer : IComparer
	{
	    public int column;
	    public SortOrder sortOrder;
	    public ListViewItemComparer()
	    {
	        column = 0;
			sortOrder = SortOrder.Ascending;
	    }
	    public ListViewItemComparer(int column, SortOrder sort)
	    {
	        this.column = column;
			sortOrder = sort;
	    }
	    public int Compare(object x, object y)
	    {
			if(column >= ((ListViewItem)x).SubItems.Count)
				return  sortOrder == SortOrder.Ascending ? -1 : 1;
		
			if(column >= ((ListViewItem)y).SubItems.Count)
				return sortOrder == SortOrder.Ascending ? 1 : -1;
		
			if(sortOrder == SortOrder.Ascending)
	        	return String.Compare(((ListViewItem)x).SubItems[column].Text, ((ListViewItem)y).SubItems[column].Text);
			else
				return String.Compare(((ListViewItem)y).SubItems[column].Text, ((ListViewItem)x).SubItems[column].Text);
	    }
	}
"@ | Out-Null
		}
		#endregion
		
		if ($ListView.Tag -is [ListViewItemComparer])
		{
			#Toggle the Sort Order
			if ($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
			{
				if ($ListView.Tag.column -eq $ColumnIndex -and $ListView.Tag.sortOrder -eq 'Ascending')
				{
					$ListView.Tag.sortOrder = 'Descending'
				}
				else
				{
					$ListView.Tag.sortOrder = 'Ascending'
				}
			}
			else
			{
				$ListView.Tag.sortOrder = $SortOrder
			}
			
			$ListView.Tag.column = $ColumnIndex
			$ListView.Sort() #Sort the items
		}
		else
		{
			if ($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
			{
				$SortOrder = [System.Windows.Forms.SortOrder]::Ascending
			}
			
			#Set to Tag because for some reason in PowerShell ListViewItemSorter prop returns null
			$ListView.Tag = New-Object ListViewItemComparer ($ColumnIndex, $SortOrder)
			$ListView.ListViewItemSorter = $ListView.Tag #Automatically sorts
		}
	}
	
	
	function Add-ListViewItem
	{
	<#
		.SYNOPSIS
			Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.
	
		.DESCRIPTION
			Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.
	
		.PARAMETER ListView
			The ListView control to add the items to.
	
		.PARAMETER Items
			The object or objects you wish to load into the ListView's Items collection.
			
		.PARAMETER  ImageIndex
			The index of a predefined image in the ListView's ImageList.
		
		.PARAMETER  SubItems
			List of strings to add as Subitems.
		
		.PARAMETER Group
			The group to place the item(s) in.
		
		.PARAMETER Clear
			This switch clears the ListView's Items before adding the new item(s).
		
		.EXAMPLE
			Add-ListViewItem -ListView $listview1 -Items "Test" -Group $listview1.Groups[0] -ImageIndex 0 -SubItems "Installed"
	#>
		
		Param( 
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.ListView]$ListView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Items,
		[int]$ImageIndex = -1,
		[string[]]$SubItems,
		$Group,
		[switch]$Clear)
		
		if($Clear)
		{
			$ListView.Items.Clear();
	    }
	    
	    $lvGroup = $null
	    if ($Group -is [System.Windows.Forms.ListViewGroup])
	    {
	        $lvGroup = $Group
	    }
	    elseif ($Group -is [string])
	    {
	        #$lvGroup = $ListView.Group[$Group] # Case sensitive
	        foreach ($groupItem in $ListView.Groups)
	        {
	            if ($groupItem.Name -eq $Group)
	            {
	                $lvGroup = $groupItem
	                break
	            }
	        }
	        
	        if ($null -eq $lvGroup)
	        {
	            $lvGroup = $ListView.Groups.Add($Group, $Group)
	        }
	    }
	    
		if($Items -is [Array])
		{
			$ListView.BeginUpdate()
			foreach ($item in $Items)
			{		
				$listitem  = $ListView.Items.Add($item.ToString(), $ImageIndex)
				#Store the object in the Tag
				$listitem.Tag = $item
				
				if($null -ne $SubItems)
				{
					$listitem.SubItems.AddRange($SubItems)
				}
				
				if($null -ne $lvGroup)
				{
					$listitem.Group = $lvGroup
				}
			}
			$ListView.EndUpdate()
		}
		else
		{
			#Add a new item to the ListView
			$listitem  = $ListView.Items.Add($Items.ToString(), $ImageIndex)
			#Store the object in the Tag
			$listitem.Tag = $Items
			
			if($null -ne $SubItems)
			{
				$listitem.SubItems.AddRange($SubItems)
			}
			
			if($null -ne $lvGroup)
			{
				$listitem.Group = $lvGroup
			}
		}
	}
	
	#endregion
	
	
	function outputADUserData
	{
		$testvar1 = get-aduser $textbox1.Text -properties GivenName, Surname, Department, Description, Enabled, Title, UserPrincipalName 
		#$testvar2 = Import-Csv c:\users\newingha\desktop\test\users.csv
		$textbox13.Text = $testvar1.GivenName
		$textbox20.Text = $testvar1.Surname
		$textbox17.Text = $testvar1.Department
		#$textbox15.Text = $testvar1.Description
		$textbox18.Text = $testvar1.Enabled
		$textbox15.Text = $testvar1.Name
		$textbox19.Text = $testvar1.Title
		$textbox12.Text = $testvar1.UserPrincipalName
	}
	
	function GetADComputer
	{
		$testvar3 = Get-ADComputer $textbox2.Text -Properties *
		#| export-csv c:\users\newingha\desktop\test\computers.csv
		#$testvar4 = Import-Csv c:\users\newingha\desktop\test\computers.csv
		$textbox4.Text = $testvar3.CanonicalName
		$textbox5.Text = $testvar3.CN
		$textbox6.Text = $testvar3.Created
		$textbox7.Text = $testvar3.IPv4Address
		$textbox8.Text = $testvar3.LastLogonDate
		#$label15.Text = $testvar4.ms-Mcs-AdmPwd
		$textbox10.Text = $testvar3.OperatingSystem
		$textbox11.Text = $testvar3.OperatingSystemVersion
	}
	
	
	$buttonSearchPeople_Click={
		outputADUserData
	}
	
	function saveAllData
	{
		#$testvar4 = Get-ADComputer $textbox2.Text -Properties *
		#$testvar2 = get-aduser $textbox1.Text -properties GivenName, Surname, Department, Description, Enabled, Title, UserPrincipalName
			$ticketNumber = $textbox3.Text
			$testvar5 = $label11.Text
		New-Object -TypeName PSCustomObject -Property @{
			OU = $textbox4.Text
			ComputerName = $textbox5.Text
			ImagedDate = $textbox6.Text
			IP = $textbox7.Text
			LastLogOn = $textbox8.Text
			#$label15.Text = $testvar4.ms-Mcs-AdmPwd
			OperatingSystem = $textbox10.Text
			OSVersion = $textbox11.Text
			FirstName = $textbox13.Text
			LastName = $textbox20.Text
			Department = $textbox17.Text
			#Description = $textbox.Text
			Enabled = $textbox18.Text
			Name = $textbox15.Text
			Title = $textbox19.Text
			UserPrincipalName = $textbox12.Text
			Notes = $richtextbox1.Text
			Ticket = $ticketNumber
		} | Export-Csv -Path "\\Server\Tracking\CorelationMaster.csv" -NoTypeInformation -Append
		
		#$testvar6 | export-csv c:\test\$testvar5.csv
	}
	
	
	$buttonSearchComputers_Click={
		GetADComputer
	}
	
	$buttonSearchTDX_Click = {
		$ticketNumber = $textbox3.Text
		Start-Process "chrome.exe" "TicketID=$ticketNumber"
	}
	
	$buttonSaveToFile_Click={
		saveAllData
	}
	
	$buttonCut_Click={
		$richTextBox1.Cut()
	}
	
	$buttonCopy_Click={
		$richTextBox1.Copy()
	}
	
	$buttonPaste_Click={
		$richTextBox1.Paste()
	}
	
	$textbox16_TextChanged={
		#TODO: Place custom script here
		
	}
	
	
		$computerName = $textbox21.Text
	
	$buttonSystemInformation_Click={
		#startSystemInfo 
		$richtextbox1.Text += "System Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_ComputerSystem -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonBios_Click={
		$richtextbox1.Text += "BIOS Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_BIOS -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonCPU_Click={
		$richtextbox1.Text += "CPU Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_BIOS -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonRAM_Click={
		$richtextbox1.Text += "RAM Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_PhysicalMemory -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonMotherboard_Click={
		$richtextbox1.Text += "MotherBoard Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_BaseBoard -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonPhysicalDrives_Click={
		$richtextbox1.Text += "Physical Drives Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_DiskDrive -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonLogicalDrives_Click={
		$richtextbox1.Text += "Logical Drives Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_LogicalDisk -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonGraphics_Click={
		$richtextbox1.Text += "GPU Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_VideoController -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonNetwork_Click={
		$richtextbox1.Text += "Network Devices Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_NetworkAdapter -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonNetworkSettings_Click={
		$richtextbox1.Text += "Network Configuration Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_NetworkAdapterConfiguration -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonMonitors_Click={
		$richtextbox1.Text += "Monitors Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_DesktopMonitor -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonOS_Click={
		$richtextbox1.Text += "Operating System Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_OperatingSystem -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonKeyboard_Click={
		$richtextbox1.Text += "Keyboard Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_Keyboard -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonMouse_Click={
		$richtextbox1.Text += "Pointing Device Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_PointingDevice -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonOpticalDrive_Click={
		$richtextbox1.Text += "Optical Drives Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_CDROMDrive -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonSound_Click={
		$richtextbox1.Text += "Sound Devices Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_SoundDevice -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonPrinters_Click={
		$richtextbox1.Text += "Printer Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_Printer -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonFAn_Click={
		$richtextbox1.Text += "System Fan Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_Fan -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonBattery_Click={
		$richtextbox1.Text += "System Battery Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_Battery -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonPortBattery_Click={
		$richtextbox1.Text += "Portable Battery Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_PortableBattery -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonSoftwareInstalled1_Click={
		$richtextbox1.Text += "Software Information - AddRemovePrograms - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32Reg_AddRemovePrograms -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonProcesses_Click={
		$richtextbox1.Text += "Software Information - Product - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32Reg_Product -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonServices_Click={
		$richtextbox1.Text += "Processes Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_Process -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonPingTest_Click={
		$richtextbox1.Text += "Services Information - $(Get-Date)"
		$richtextbox1.Text += Get-CimInstance -Class Win32_Service -ComputerNAme $computerName -Property * | Select-Object -Property * | Out-String
	}
	
	$buttonNetStat_Click={
		$richtextbox1.Text += "Ping Information - $(Get-Date)"
		$Ping_Test = Test-Connection $ComputerName1 
		$richtextbox1.Text += $Ping_Test | Out-String
	}
	
	$buttonRDP_Click={
		mstsc /v:$computerName
	}
	
	$button1_Click = {
		$richtextbox1.Text += "Ping Information - $(Get-Date)"
		$RemoteNetStat = Invoke-Command -ComputerName $ComputerName1 -ScriptBlock { Get-NetTCPConnection }
		$richtextbox1.Text += $RemoteNetStat | Out-String
	}
	
	$buttonCose_Click={
		$form1.close()
	}
	
	#requires -Version 3
	#------------------------------------------------------------------------
	# Source File Information (DO NOT MODIFY)
	# Source ID: 59aa670b-13ff-441b-9b86-8c87fe29d6e5
	# Source File: ..\..\..\SAPIEN\PowerShell Studio\Files\AboutForm.psf
	#------------------------------------------------------------------------
	#region File Recovery Data (DO NOT MODIFY)
	<#RecoveryData:
	Wg8AAB+LCAAAAAAABABlV8cOhEqSvLfU/zCaK9LgnfRmJHzTNLZxzQ3vvefrl/dmZ7Wr5ZKlKigl
	kZGZkX9Yadxv6XTy4RL+7V7MZd/98+/oP+C//+v5+Nvf/tCnMi+7sBHLJtXCNv0XE/XrIvZT+49h
	zv4A/9/5X1/9ef6vXWQ1UfHgyYIYhtN5jvn3wzJ807qr3de5d9CARvHzj46YLXmZCrcWa0IlpxJS
	uSJPyrkHvVLyPqvbJ5Elv+cDtp1rpR04cNDZFq7ZYyUX3+g9Ky452+XBv+zXgcUUQAdrYg9ZV63J
	JpA7vKfV1clxtuAEZAvrTAHV89HKtgFeNJwVNgHzwnFGOwYsE4h+UDpLB9kKGJ99AVr8FmwdrBzI
	nDuKwS9fASsOIwC9OrZ5T70eS+nnw1gxvciB5GTw4jqznHPwGJdmn4P89Vi/RYxyNCbkOeFISo9f
	gplFu8trzhSo2P79bhsSf4pd0+PpJT8f1FUQiBki3irYxbbz4EQEFPlltQ7sezY201KirS95Inz1
	Y4KQFoQU/WFOuQpUsnYJOBZ9RsU6KlgX/3ysV/PFdKHXyF0ShoIFYf2FBQVaI3glx1Fdyq0FU+Li
	woRYke+OBV846tnuNO0mXWaS+LVD8xdlNiiVz0dF/GbMAPmFTnlQIso6mWsYMNSTRCNIGPZkZXZ+
	tytCQ2MtJM8CoQ0duOrPSlBLvL0UmAPxszyy7LCejz4DCDYi8gGCM2ohMn0a0FWFJF2UQGC3lK7L
	moP16fAyOtptw2L7BeBxSrxjbnPd0VHiaMfQx6uQsM8HyUx2DvKn4yzsrBKcwGFi/xMAJXc43pSS
	XMCZN8HYrjy2sly2XIuQQQCLKnwqQa4qSunKtczUjFNzz0edmzXnFF+u65U0H4i/bD8okpOftWTb
	+rwwHB7fazM/zbzkOFmW8wJi+YGrzPFUxsr0JmwspMV9PkKFMfT8Pz5wdpLPJcs7Hwdn/CEfF/wL
	qvEH2iWgrKxc/7KlqX3Z0dQ4djC19xcSDdOhWftP+3xA6O+j2aOZcPx9qrADo71ZXNFNIc1lmrEI
	poCKd0nL8oXm9+1iSojxZ/alteT5yWULgRNM2WL+tM+HrP7OIhKbcWHD3vMkj1rmXqZ+EpQjtbTn
	iMOduWfewOJsQfd5Xct14eRKbZkHPzCxzDdM3PM1o9Z3FOpe+9OBCmJfPff6Cog85xdHcFyJqKEv
	W+Y6l7fLzL99+DJ2zXQ9awjs+Ns5aHe9cn5fGqNcTEQ8HyWDsCIjD6Ky16w49IXDKLn1bQWhLv70
	4y9EHHdmlfsuVjLlkhVNeWRE7vUXGAljEnkliKyJKs/Hm1xHSBwC5fd9OW2Z81fPdj9WN7k0F2jm
	LTXfthfDlhsR1/UCbFTvgFRcmx+DrAXsKGsuM/aiwxCN/nz8T0D+tLSUM658wxHIfMCEMu+0hMhE
	FssKgmCalso5/O9dso6QcdwIwZ2TF0rKQgKTJYx8/ykTIP+NhS4UY5jzhICIER7AhBB0fdAy+8CJ
	b6aXRZG5y4DA/GpOGLz/Q899JO7Y7jffvKKylf2Gt5A5oZZvB1i25wwzOgNJ1Q2QOjWt1qzGAoJe
	/tJaHFoE6Mr9C3Iwpxb3MXW/BVdDgmJ3z8eiZFP5ZdX8+1Z+la/h0xuzho4F6CxKqHZhX2A7Zau/
	fhWcnNqDQuXwS2rvFXA99WjJE8U9gtPBZEns52ODMIRwh6PZ54YTwzvQrrmjfR/h2pkhIsLRsUFI
	Ykwf9BQc0WexySuBuhZwwhNzyAUup34o5tGLo+TOrMkEaODHK35ftwhscFN0FT4aspd5DdoVStak
	Ka2LvX8QSu1e1V7t1azNrB0wAfJhNrFzS6gyhSZV/3z4r59YeCmxceEHrNzURSeOn0Y1U/puxxGP
	XtxP21XuIIDbVJOSrX/7NoWmPEHsKVLPEe3Wz1GQgkvcURg19LT9wErouqLrzGpCGJFjSFVeuLi2
	5uTUSMX+sGxuhwNrWHDYuncTN2PgmrpmeYsKEHJoqloKrNTzccJbiLQjqhSB1mvp6yCk7zJwUrWe
	eQev5H/6bpXUH6Tq9GgIl4FtIx9P2o1Xk2gSyJcAdLXVOXeelhe8Jpw6TTCiXOrOy0uU0gMW19CG
	ILUDgHZATcyhELmlOfFbxWAUteUPGGj+Z/IEoeyUNDkjMMXy58OuQoA8KDwcr2GEnDOK0rapSgvV
	2RMJvuHkNJ85qbs+c3pRylBc82jsrF79UDcr3eiNFfjCnjmpLi3PhzhY7NtVEaRcjvBT/D7qD4bX
	AylJQz0kxTUjI7CcGLpI5IjsY9wkH25f8FJ0xLyqndfqVNJTYDDvVvN8HHZ02p86lQBj8X7TgnyP
	SIKc7/qJ8sXdvtCPKKNYbtzZD7e1jT0r2DYPHiFzLO+278YohswH6Bs21T4fBTbDQXsavtQA2kDb
	C2u1vzCIY6HAW/Cy8mQgOk5K747wxrf1EDWll8gPYpTQTAbvprmusyxhXgMR4PnACh5WX/f2fPF5
	9Zl/VfYbrP33jeDYcD5typ5tjgYTjnJKX7IN2UBKhPUau8Zab+cAXsrE26zX64zE5yMO5MHJ5w5z
	m/UlWsGe4ouEIX4F6pVZF6iLuO92riu+J6A3ttqObbmdvhLljxYXsz+816/nP2/VSJhbI7299uTe
	GgeTPmy53PnmXsio5zAcK8H3OELcGCTXNmBF/KmohyfSFgsJGbmB6uj8dYJfGjpJsmff27DeWa/X
	/je4Jlanfm3TYMV0iUbUMjCXT+MwDerySl9nWLvAueoH0q0aRGjpsM8hX386dGDpu/C88DIPkM/z
	8VLAMlOZ3fX1d6cvOuV23cjXXTnXv6Yp7/ox7Azss2GHmRyamO/mGhQA8uC+phoCD8bZ8ad6+FTN
	ct9G8OOBk9qgLfMCBa9tcM94iny7DMw4BVh4THc/i/BOHG8OOZ6mf6qxxG/RBRTrSnkfGUU5yiQD
	ntSLm28rW9SgyH+U3T1exvxRad1FdFD3jbs3g3BfcS5NrJxeIImuuLgJqho7uOwyj0niANGuoQFt
	QO/5OG/FdVD+qbz5YlD4dliUalnsXVQ2aw/X0u8w5DVAcuM5/YxM/shNjV4tmYMJw/QychXT4CXj
	6RsAvsAK8u4L14LYyTsrO0aU8lYUv/krTbrlgwRSV3aV8FJP7Ei7Ph71BiAVBxztHzLBrzLrVHQN
	rdVvz60i5Xmvnw8pfsFRxH3fnVSm1jeyxlvxzBCAClvMiquvnnEDb3LsSvbtHJLrsGT3l+3C42Ij
	7rZOhZsA4Fqc9uvuCxjuXm84o29ZHLEjjNI08dPg7i5nW74R/MbjEGiEPkDDBkHsif+2yd9144hA
	ymDTgEVNuwrEXkUVEP58XNh8tBO2AG21Vv0XJp2zkrEQhgI4ktA23j6tac7AVBmb/5KnBdNZ1Ecw
	YSHhuQyyTn8PUtpc3Dhfd2aZHktFxutYhADQZ3Fyph0AGipK3qMI+6+NTidsckVwBj6kEfOZobLg
	yXxmw53BydXBho6OfiaNw/fUOxf4goh/2QDNKvl9z+oXlX4725xMd/FTxTlmdPWg+nuDjRF99yqn
	++UzagS8o1qfUkIBzsasWSW3RRP6fPDGbyMNrypXABXpjZ4/KJHQ26dYZACE7cjAAQVAT3kngfjm
	+WaBxAsJKwO8Zb0RuNiC0MSLpMYtI497+ijRyHj7J32//fUwO82E08sIzDsGfocZfT0AkDAOh6CR
	VfJJ6tcZxpZFZETgprPGlZYh2ZpmiXhU4PPh0Nu+JWDZFiAoGYTnZxNUAPB5UQackDMFZ3K3xj21
	QT6B/tCTIteeJ+taX86YdhBVtjcKFhs8ADP4Zi/h+2lMbTn8w3Kkz7a2uyoYucXOFR/viowQeTvQ
	EF3BsgvA2ljTOV0vgCQQGmmNq5pa+eY0lsn1vj0fCnDlhOvFIUutTnHF1nrQCUiUFCjDABhst+SJ
	0RFK7tH1n3+Af422fw25zDynbdSU6fw38N75A/zfs/S//guW2Dt7Wg8AAA==#>
	#endregion
	
	<#
	    .NOTES
	    --------------------------------------------------------------------------------
	     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2019 v5.6.165
	     Generated on:       7/30/2019 3:36 PM
	     Generated by:       Support.newingha
	    --------------------------------------------------------------------------------
	    .DESCRIPTION
	        GUI script generated by PowerShell Studio 2019
	#>
	
	
	#----------------------------------------------
	#region Application Functions
	#----------------------------------------------
	
	#endregion Application Functions
	
	#----------------------------------------------
	# Generated Form Function
	#----------------------------------------------
	function Show-AboutForm_psf
	{
		
		#----------------------------------------------
		#region Import the Assemblies
		#----------------------------------------------
		[void][reflection.assembly]::Load('System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
		[void][reflection.assembly]::Load('System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
		#endregion Import Assemblies
		
		#----------------------------------------------
		#region Generated Form Objects
		#----------------------------------------------
		[System.Windows.Forms.Application]::EnableVisualStyles()
		$formAboutTheAuthor = New-Object 'System.Windows.Forms.Form'
		$picturebox1 = New-Object 'System.Windows.Forms.PictureBox'
		$labelWrittenInPowerShellS = New-Object 'System.Windows.Forms.Label'
		$labelAlannewinghamgmailco = New-Object 'System.Windows.Forms.Label'
		$labelEmail = New-Object 'System.Windows.Forms.Label'
		$labelAlanNewingham = New-Object 'System.Windows.Forms.Label'
		$labelAuthor = New-Object 'System.Windows.Forms.Label'
		$buttonOK = New-Object 'System.Windows.Forms.Button'
		$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
		#endregion Generated Form Objects
		
		#----------------------------------------------
		# User Generated Script
		#----------------------------------------------
		
		$formAboutTheAuthor_Load = {
			#TODO: Initialize Form Controls here
			
		}
		
		# --End User Generated Script--
		#----------------------------------------------
		#region Generated Events
		#----------------------------------------------
		
		$Form_StateCorrection_Load =
		{
			#Correct the initial state of the form to prevent the .Net maximized form issue
			$formAboutTheAuthor.WindowState = $InitialFormWindowState
		}
		
		$Form_Cleanup_FormClosed =
		{
			#Remove all event handlers from the controls
			try
			{
				$formAboutTheAuthor.remove_Load($formAboutTheAuthor_Load)
				$formAboutTheAuthor.remove_Load($Form_StateCorrection_Load)
				$formAboutTheAuthor.remove_FormClosed($Form_Cleanup_FormClosed)
			}
			catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
		}
		#endregion Generated Events
		
		#----------------------------------------------
		#region Generated Form Code
		#----------------------------------------------
		$formAboutTheAuthor.SuspendLayout()
		$picturebox1.BeginInit()
		#
		# formAboutTheAuthor
		#
		$formAboutTheAuthor.Controls.Add($picturebox1)
		$formAboutTheAuthor.Controls.Add($labelWrittenInPowerShellS)
		$formAboutTheAuthor.Controls.Add($labelAlannewinghamgmailco)
		$formAboutTheAuthor.Controls.Add($labelEmail)
		$formAboutTheAuthor.Controls.Add($labelAlanNewingham)
		$formAboutTheAuthor.Controls.Add($labelAuthor)
		$formAboutTheAuthor.Controls.Add($buttonOK)
		$formAboutTheAuthor.AcceptButton = $buttonOK
		$formAboutTheAuthor.AutoScaleDimensions = '6, 13'
		$formAboutTheAuthor.AutoScaleMode = 'Font'
		$formAboutTheAuthor.ClientSize = '284, 262'
		$formAboutTheAuthor.FormBorderStyle = 'FixedDialog'
		$formAboutTheAuthor.MaximizeBox = $False
		$formAboutTheAuthor.MinimizeBox = $False
		$formAboutTheAuthor.Name = 'formAboutTheAuthor'
		$formAboutTheAuthor.StartPosition = 'CenterScreen'
		$formAboutTheAuthor.Text = 'About the Author'
		$formAboutTheAuthor.add_Load($formAboutTheAuthor_Load)
		#
		# picturebox1
		#
		#region Binary Data
		$picturebox1.Image = [System.Convert]::FromBase64String('
R0lGODlhdAB0AIcAAAAAAAAAMwAAZgAAmQAAzAAA/wArAAArMwArZgArmQArzAAr/wBVAABVMwBV
ZgBVmQBVzABV/wCAAACAMwCAZgCAmQCAzACA/wCqAACqMwCqZgCqmQCqzACq/wDVAADVMwDVZgDV
mQDVzADV/wD/AAD/MwD/ZgD/mQD/zAD//zMAADMAMzMAZjMAmTMAzDMA/zMrADMrMzMrZjMrmTMr
zDMr/zNVADNVMzNVZjNVmTNVzDNV/zOAADOAMzOAZjOAmTOAzDOA/zOqADOqMzOqZjOqmTOqzDOq
/zPVADPVMzPVZjPVmTPVzDPV/zP/ADP/MzP/ZjP/mTP/zDP//2YAAGYAM2YAZmYAmWYAzGYA/2Yr
AGYrM2YrZmYrmWYrzGYr/2ZVAGZVM2ZVZmZVmWZVzGZV/2aAAGaAM2aAZmaAmWaAzGaA/2aqAGaq
M2aqZmaqmWaqzGaq/2bVAGbVM2bVZmbVmWbVzGbV/2b/AGb/M2b/Zmb/mWb/zGb//5kAAJkAM5kA
ZpkAmZkAzJkA/5krAJkrM5krZpkrmZkrzJkr/5lVAJlVM5lVZplVmZlVzJlV/5mAAJmAM5mAZpmA
mZmAzJmA/5mqAJmqM5mqZpmqmZmqzJmq/5nVAJnVM5nVZpnVmZnVzJnV/5n/AJn/M5n/Zpn/mZn/
zJn//8wAAMwAM8wAZswAmcwAzMwA/8wrAMwrM8wrZswrmcwrzMwr/8xVAMxVM8xVZsxVmcxVzMxV
/8yAAMyAM8yAZsyAmcyAzMyA/8yqAMyqM8yqZsyqmcyqzMyq/8zVAMzVM8zVZszVmczVzMzV/8z/
AMz/M8z/Zsz/mcz/zMz///8AAP8AM/8AZv8Amf8AzP8A//8rAP8rM/8rZv8rmf8rzP8r//9VAP9V
M/9VZv9Vmf9VzP9V//+AAP+AM/+AZv+Amf+AzP+A//+qAP+qM/+qZv+qmf+qzP+q///VAP/VM//V
Zv/Vmf/VzP/V////AP//M///Zv//mf//zP///wAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEB
AAAh+QQBAAD8ACwAAAAAdAB0AAAI/wABCBxIsKDBg/sS7jvIsKDChxAjJiT4kKLChhgzatwIoCJH
hxJDehQ4suPFjyhTIjypUqTLhQNLllRJ8+NMmy9DWpwYk2XNhjl19oy4EybJoDyPJjXpsijSpU6f
Rl0qU+pQo0xFTg3K8CnErUW3ClWKNafYl129+hyb9SzRq27LqoUKN2PVt2TD1sXI9i7WtHTz2l0r
Ua/gw0AL7207ODBjvoTxPp5802DfyH9XOq4MkqpixH41Xvbs2HDnzJYxA5YrWbRVxKtjN2aNmvLn
jV5Ny05dejFnv5xXm128+7Rr0rWB+zzOlbjm5Muf6/4JOjpv2syLFw9OM/Ts6de1S/93Tt07ZOTZ
x5/HTt04efew1Z/O/d584tZXlSMV/nqyae5k/XbbXJsRCJ5tvQVoXVb6NXcdffFVlyCDC46mVnv3
sSehhghyiOGHvqkWInoj1gZieSJu+F+K/p2IoX0wsmjfiwQOp+B++bEYV408opUjjjd6+GOPRNpI
IZBHChlkkUwOaOCQBzYpmZEAughfiy3dFteBVspXJXMCNvVel+GNiRN+S+pI5nYLomSheBuGyeOa
6ZVpZ5L8zUXnd/KtiGaSEO7ZZ32YyVmjoLhpWSKYbS46aJp/suWniVDyGSGWgCoaJJsTSuplhaAi
CdannWp6pZx5ajVbg55eWiWqZ1L/+mChPt7JJaET3jorckZG2airv17JKK+1CmsmsLkem+iUtEba
36SBfllpnKYGCm1/0m5aYquZOkssktniuW21z44LbrMcGhrspKmu+SauX8Xq6580MkvirrKeGmq8
Xb6LLL/LKikuiIeS2etzr+67o6n1qrpewgV+66CVB+Nbp756Glxsu5Yaa/GQEKdLrr0XxspqsDF6
C3DBHFnILbvTzoduxRmeXOq9A8ssMc1FLpzsneruPPOTkALsppraFu3zxNbKC6/NtPUMMsMdBx21
kzhfzDPRHR59c77Xqhwt0hlerPXGU4upotPreX212NiSDWe3DusMdnsuxy202nYj9pr3uXvXPeqe
fzM9NN+D01k4lejOO7HZHTtuteRot822xzknbvXLj5bdObf+2s25rZE/vS68MLeMtcBuh8wp6wjL
ePrDKCvsqOok6xqw66TC/vHaKJIsJXQ/d73q6osTOffrw65c7PCw4u473VumPWfnzB8vPNXB3610
7BFPH67brY9s9O2e9zs79eATL/765JtsfvSYUg6487n3nmqDYRu+fdboq17SOjS2/wlsRtbT3OHq
VjjH2Q9/ENQdAr9Hu+KVL3+W+9foMncixn3tgSEbn/wwmD5M0SxxLvJgvqA2uZglj28TxNjjXIi8
BYaOd0Vr4QBfyHFAuZlLcDQ04NJStsLGme6D2juf9M5GQhRiL4HdqZ3EHgg5fInwUv2jYumsCD/r
8RCHopOi+5qnwhMeUYmYC6HeZkg6CpZQglxrWhvZl0HMpdCIOTRfw3QXvx1yjY9V62Idv6hHvPkw
S1P0YiG7V5SAAAA7')
		#endregion
		$picturebox1.Location = '84, 41'
		$picturebox1.Name = 'picturebox1'
		$picturebox1.Size = '116, 116'
		$picturebox1.TabIndex = 6
		$picturebox1.TabStop = $False
		#
		# labelWrittenInPowerShellS
		#
		$labelWrittenInPowerShellS.AutoSize = $True
		$labelWrittenInPowerShellS.Location = '15, 232'
		$labelWrittenInPowerShellS.Name = 'labelWrittenInPowerShellS'
		$labelWrittenInPowerShellS.Size = '176, 17'
		$labelWrittenInPowerShellS.TabIndex = 5
		$labelWrittenInPowerShellS.Text = 'Written in PowerShell Studio 2019'
		$labelWrittenInPowerShellS.UseCompatibleTextRendering = $True
		#
		# labelAlannewinghamgmailco
		#
		$labelAlannewinghamgmailco.AutoSize = $True
		$labelAlannewinghamgmailco.Location = '89, 207'
		$labelAlannewinghamgmailco.Name = 'labelAlannewinghamgmailco'
		$labelAlannewinghamgmailco.Size = '150, 17'
		$labelAlannewinghamgmailco.TabIndex = 4
		$labelAlannewinghamgmailco.Text = 'alan.newingham@gmail.com'
		$labelAlannewinghamgmailco.UseCompatibleTextRendering = $True
		#
		# labelEmail
		#
		$labelEmail.AutoSize = $True
		$labelEmail.Location = '46, 207'
		$labelEmail.Name = 'labelEmail'
		$labelEmail.Size = '36, 17'
		$labelEmail.TabIndex = 3
		$labelEmail.Text = 'Email:'
		$labelEmail.UseCompatibleTextRendering = $True
		#
		# labelAlanNewingham
		#
		$labelAlanNewingham.AutoSize = $True
		$labelAlanNewingham.Location = '121, 190'
		$labelAlanNewingham.Name = 'labelAlanNewingham'
		$labelAlanNewingham.Size = '90, 17'
		$labelAlanNewingham.TabIndex = 2
		$labelAlanNewingham.Text = 'Alan Newingham'
		$labelAlanNewingham.UseCompatibleTextRendering = $True
		#
		# labelAuthor
		#
		$labelAuthor.AutoSize = $True
		$labelAuthor.Location = '73, 190'
		$labelAuthor.Name = 'labelAuthor'
		$labelAuthor.Size = '41, 17'
		$labelAuthor.TabIndex = 1
		$labelAuthor.Text = 'Author:'
		$labelAuthor.UseCompatibleTextRendering = $True
		#
		# buttonOK
		#
		$buttonOK.Anchor = 'Bottom, Right'
		$buttonOK.DialogResult = 'OK'
		$buttonOK.Location = '197, 227'
		$buttonOK.Name = 'buttonOK'
		$buttonOK.Size = '75, 23'
		$buttonOK.TabIndex = 0
		$buttonOK.Text = '&OK'
		$buttonOK.UseCompatibleTextRendering = $True
		$buttonOK.UseVisualStyleBackColor = $True
		$picturebox1.EndInit()
		$formAboutTheAuthor.ResumeLayout()
		#endregion Generated Form Code
		
		#----------------------------------------------
		
		#Save the initial state of the form
		$InitialFormWindowState = $formAboutTheAuthor.WindowState
		#Init the OnLoad event to correct the initial state of the form
		$formAboutTheAuthor.add_Load($Form_StateCorrection_Load)
		#Clean up the control events
		$formAboutTheAuthor.add_FormClosed($Form_Cleanup_FormClosed)
		#Show the Form
		return $formAboutTheAuthor.ShowDialog()
		
	} #End Function
	
	
	
	
	
	$linklabelAbout_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.LinkLabelLinkClickedEventArgs]
		#TODO: Place custom script here
		#Call the form
		Show-AboutForm_psf | Out-Null
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$form1.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$linklabelAbout.remove_LinkClicked($linklabelAbout_LinkClicked)
			$buttonCose.remove_Click($buttonCose_Click)
			$buttonMouse.remove_Click($buttonMouse_Click)
			$button1.remove_Click($button1_Click)
			$buttonGraphics.remove_Click($buttonGraphics_Click)
			$buttonNetwork.remove_Click($buttonNetwork_Click)
			$buttonOS.remove_Click($buttonOS_Click)
			$buttonNetStat.remove_Click($buttonNetStat_Click)
			$buttonNetworkSettings.remove_Click($buttonNetworkSettings_Click)
			$buttonPingTest.remove_Click($buttonPingTest_Click)
			$buttonMonitors.remove_Click($buttonMonitors_Click)
			$buttonKeyboard.remove_Click($buttonKeyboard_Click)
			$buttonServices.remove_Click($buttonServices_Click)
			$buttonLogicalDrives.remove_Click($buttonLogicalDrives_Click)
			$buttonProcesses.remove_Click($buttonProcesses_Click)
			$buttonSystemInformation.remove_Click($buttonSystemInformation_Click)
			$buttonPortBattery.remove_Click($buttonPortBattery_Click)
			$buttonBios.remove_Click($buttonBios_Click)
			$buttonFAn.remove_Click($buttonFAn_Click)
			$buttonMotherboard.remove_Click($buttonMotherboard_Click)
			$buttonSoftwareInstalled1.remove_Click($buttonSoftwareInstalled1_Click)
			$buttonPrinters.remove_Click($buttonPrinters_Click)
			$buttonCPU.remove_Click($buttonCPU_Click)
			$buttonBattery.remove_Click($buttonBattery_Click)
			$buttonRAM.remove_Click($buttonRAM_Click)
			$buttonSound.remove_Click($buttonSound_Click)
			$buttonPhysicalDrives.remove_Click($buttonPhysicalDrives_Click)
			$buttonOpticalDrive.remove_Click($buttonOpticalDrive_Click)
			$buttonRDP.remove_Click($buttonRDP_Click)
			$buttonCut.remove_Click($buttonCut_Click)
			$buttonCopy.remove_Click($buttonCopy_Click)
			$buttonPaste.remove_Click($buttonPaste_Click)
			$buttonSearchTDX.remove_Click($buttonSearchTDX_Click)
			$buttonSaveToFile.remove_Click($buttonSaveToFile_Click)
			$buttonSearchComputers.remove_Click($buttonSearchComputers_Click)
			$textbox16.remove_TextChanged($textbox16_TextChanged)
			$buttonSearchPeople.remove_Click($buttonSearchPeople_Click)
			$form1.remove_Load($form1_Load)
			$form1.remove_Load($Form_StateCorrection_Load)
			$form1.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$form1.SuspendLayout()
	$groupbox1.SuspendLayout()
	$groupbox2.SuspendLayout()
	$groupbox3.SuspendLayout()
	#
	# form1
	#
	$form1.Controls.Add($linklabelAbout)
	$form1.Controls.Add($buttonCose)
	$form1.Controls.Add($groupbox3)
	$form1.Controls.Add($buttonRDP)
	$form1.Controls.Add($label19)
	$form1.Controls.Add($buttonCut)
	$form1.Controls.Add($buttonCopy)
	$form1.Controls.Add($buttonPaste)
	$form1.Controls.Add($label26)
	$form1.Controls.Add($label25)
	$form1.Controls.Add($textbox3)
	$form1.Controls.Add($buttonSearchTDX)
	$form1.Controls.Add($buttonSaveToFile)
	$form1.Controls.Add($labelNotes)
	$form1.Controls.Add($richtextbox1)
	$form1.Controls.Add($groupbox2)
	$form1.Controls.Add($groupbox1)
	$form1.AutoScaleDimensions = '6, 13'
	$form1.AutoScaleMode = 'Font'
	$form1.ClientSize = '776, 727'
	$System_Windows_Forms_MenuStrip_1 = New-Object 'System.Windows.Forms.MenuStrip'
	$System_Windows_Forms_MenuStrip_1.Location = '0, 0'
	$System_Windows_Forms_MenuStrip_1.Name = ''
	$System_Windows_Forms_MenuStrip_1.Size = '1048, 24'
	$System_Windows_Forms_MenuStrip_1.TabIndex = 0
	$System_Windows_Forms_MenuStrip_1.Visible = $False
	$form1.MainMenuStrip = $System_Windows_Forms_MenuStrip_1
	$form1.Name = 'form1'
	$form1.StartPosition = 'CenterScreen'
	$form1.Text = 'Form'
	$form1.add_Load($form1_Load)
	#
	# linklabelAbout
	#
	$linklabelAbout.Location = '19, 6'
	$linklabelAbout.Name = 'linklabelAbout'
	$linklabelAbout.Size = '100, 23'
	$linklabelAbout.TabIndex = 96
	$linklabelAbout.TabStop = $True
	$linklabelAbout.Text = 'About'
	$linklabelAbout.UseCompatibleTextRendering = $True
	$linklabelAbout.add_LinkClicked($linklabelAbout_LinkClicked)
	#
	# buttonCose
	#
	$buttonCose.Location = '11, 692'
	$buttonCose.Name = 'buttonCose'
	$buttonCose.Size = '75, 23'
	$buttonCose.TabIndex = 95
	$buttonCose.Text = 'Cose'
	$buttonCose.UseCompatibleTextRendering = $True
	$buttonCose.UseVisualStyleBackColor = $True
	$buttonCose.add_Click($buttonCose_Click)
	#
	# groupbox3
	#
	$groupbox3.Controls.Add($labelThisWillAlsoWorkRemo)
	$groupbox3.Controls.Add($buttonMouse)
	$groupbox3.Controls.Add($textbox21)
	$groupbox3.Controls.Add($labelComputerNAme)
	$groupbox3.Controls.Add($button1)
	$groupbox3.Controls.Add($buttonGraphics)
	$groupbox3.Controls.Add($buttonNetwork)
	$groupbox3.Controls.Add($buttonOS)
	$groupbox3.Controls.Add($buttonNetStat)
	$groupbox3.Controls.Add($buttonNetworkSettings)
	$groupbox3.Controls.Add($buttonPingTest)
	$groupbox3.Controls.Add($buttonMonitors)
	$groupbox3.Controls.Add($buttonKeyboard)
	$groupbox3.Controls.Add($buttonServices)
	$groupbox3.Controls.Add($buttonLogicalDrives)
	$groupbox3.Controls.Add($buttonProcesses)
	$groupbox3.Controls.Add($buttonSystemInformation)
	$groupbox3.Controls.Add($buttonPortBattery)
	$groupbox3.Controls.Add($buttonBios)
	$groupbox3.Controls.Add($buttonFAn)
	$groupbox3.Controls.Add($buttonMotherboard)
	$groupbox3.Controls.Add($buttonSoftwareInstalled1)
	$groupbox3.Controls.Add($buttonPrinters)
	$groupbox3.Controls.Add($buttonCPU)
	$groupbox3.Controls.Add($buttonBattery)
	$groupbox3.Controls.Add($buttonRAM)
	$groupbox3.Controls.Add($buttonSound)
	$groupbox3.Controls.Add($buttonPhysicalDrives)
	$groupbox3.Controls.Add($buttonOpticalDrive)
	$groupbox3.Location = '11, 260'
	$groupbox3.Name = 'groupbox3'
	$groupbox3.Size = '596, 191'
	$groupbox3.TabIndex = 94
	$groupbox3.TabStop = $False
	$groupbox3.Text = 'Information'
	$groupbox3.UseCompatibleTextRendering = $True
	#
	# labelThisWillAlsoWorkRemo
	#
	$labelThisWillAlsoWorkRemo.AutoSize = $True
	$labelThisWillAlsoWorkRemo.Location = '289, 16'
	$labelThisWillAlsoWorkRemo.Name = 'labelThisWillAlsoWorkRemo'
	$labelThisWillAlsoWorkRemo.Size = '292, 17'
	$labelThisWillAlsoWorkRemo.TabIndex = 94
	$labelThisWillAlsoWorkRemo.Text = 'This will also work remotely if you can connect to the PC. '
	$labelThisWillAlsoWorkRemo.UseCompatibleTextRendering = $True
	#
	# buttonMouse
	#
	$buttonMouse.Location = '356, 40'
	$buttonMouse.Name = 'buttonMouse'
	$buttonMouse.Size = '111, 23'
	$buttonMouse.TabIndex = 74
	$buttonMouse.Text = 'Mouse'
	$buttonMouse.UseCompatibleTextRendering = $True
	$buttonMouse.UseVisualStyleBackColor = $True
	$buttonMouse.add_Click($buttonMouse_Click)
	#
	# textbox21
	#
	$textbox21.Location = '105, 14'
	$textbox21.Name = 'textbox21'
	$textbox21.Size = '167, 20'
	$textbox21.TabIndex = 91
	#
	# labelComputerNAme
	#
	$labelComputerNAme.AutoSize = $True
	$labelComputerNAme.Location = '9, 17'
	$labelComputerNAme.Name = 'labelComputerNAme'
	$labelComputerNAme.Size = '90, 17'
	$labelComputerNAme.TabIndex = 92
	$labelComputerNAme.Text = 'Computer Name:'
	$labelComputerNAme.UseCompatibleTextRendering = $True
	#
	# button1
	#
	$button1.Location = '356, 128'
	$button1.Name = 'button1'
	$button1.Size = '111, 23'
	$button1.TabIndex = 93
	$button1.Text = 'NetStat'
	$button1.UseCompatibleTextRendering = $True
	$button1.UseVisualStyleBackColor = $True
	$button1.add_Click($button1_Click)
	#
	# buttonGraphics
	#
	$buttonGraphics.Location = '123, 40'
	$buttonGraphics.Name = 'buttonGraphics'
	$buttonGraphics.Size = '111, 23'
	$buttonGraphics.TabIndex = 70
	$buttonGraphics.Text = 'Graphics'
	$buttonGraphics.UseCompatibleTextRendering = $True
	$buttonGraphics.UseVisualStyleBackColor = $True
	$buttonGraphics.add_Click($buttonGraphics_Click)
	#
	# buttonNetwork
	#
	$buttonNetwork.Location = '123, 62'
	$buttonNetwork.Name = 'buttonNetwork'
	$buttonNetwork.Size = '111, 23'
	$buttonNetwork.TabIndex = 71
	$buttonNetwork.Text = 'Network'
	$buttonNetwork.UseCompatibleTextRendering = $True
	$buttonNetwork.UseVisualStyleBackColor = $True
	$buttonNetwork.add_Click($buttonNetwork_Click)
	#
	# buttonOS
	#
	$buttonOS.Location = '123, 128'
	$buttonOS.Name = 'buttonOS'
	$buttonOS.Size = '111, 23'
	$buttonOS.TabIndex = 72
	$buttonOS.Text = 'OS'
	$buttonOS.UseCompatibleTextRendering = $True
	$buttonOS.UseVisualStyleBackColor = $True
	$buttonOS.add_Click($buttonOS_Click)
	#
	# buttonNetStat
	#
	$buttonNetStat.Location = '356, 106'
	$buttonNetStat.Name = 'buttonNetStat'
	$buttonNetStat.Size = '111, 23'
	$buttonNetStat.TabIndex = 89
	$buttonNetStat.Text = 'Ping Test'
	$buttonNetStat.UseCompatibleTextRendering = $True
	$buttonNetStat.UseVisualStyleBackColor = $True
	$buttonNetStat.add_Click($buttonNetStat_Click)
	#
	# buttonNetworkSettings
	#
	$buttonNetworkSettings.Location = '123, 84'
	$buttonNetworkSettings.Name = 'buttonNetworkSettings'
	$buttonNetworkSettings.Size = '111, 23'
	$buttonNetworkSettings.TabIndex = 73
	$buttonNetworkSettings.Text = 'Network Settings'
	$buttonNetworkSettings.UseCompatibleTextRendering = $True
	$buttonNetworkSettings.UseVisualStyleBackColor = $True
	$buttonNetworkSettings.add_Click($buttonNetworkSettings_Click)
	#
	# buttonPingTest
	#
	$buttonPingTest.Location = '356, 84'
	$buttonPingTest.Name = 'buttonPingTest'
	$buttonPingTest.Size = '111, 23'
	$buttonPingTest.TabIndex = 87
	$buttonPingTest.Text = 'Services'
	$buttonPingTest.UseCompatibleTextRendering = $True
	$buttonPingTest.UseVisualStyleBackColor = $True
	$buttonPingTest.add_Click($buttonPingTest_Click)
	#
	# buttonMonitors
	#
	$buttonMonitors.Location = '123, 106'
	$buttonMonitors.Name = 'buttonMonitors'
	$buttonMonitors.Size = '111, 23'
	$buttonMonitors.TabIndex = 75
	$buttonMonitors.Text = 'Monitors'
	$buttonMonitors.UseCompatibleTextRendering = $True
	$buttonMonitors.UseVisualStyleBackColor = $True
	$buttonMonitors.add_Click($buttonMonitors_Click)
	#
	# buttonKeyboard
	#
	$buttonKeyboard.Location = '123, 150'
	$buttonKeyboard.Name = 'buttonKeyboard'
	$buttonKeyboard.Size = '111, 23'
	$buttonKeyboard.TabIndex = 76
	$buttonKeyboard.Text = 'Keyboard'
	$buttonKeyboard.UseCompatibleTextRendering = $True
	$buttonKeyboard.UseVisualStyleBackColor = $True
	$buttonKeyboard.add_Click($buttonKeyboard_Click)
	#
	# buttonServices
	#
	$buttonServices.Location = '356, 62'
	$buttonServices.Name = 'buttonServices'
	$buttonServices.Size = '111, 23'
	$buttonServices.TabIndex = 85
	$buttonServices.Text = 'Processes'
	$buttonServices.UseCompatibleTextRendering = $True
	$buttonServices.UseVisualStyleBackColor = $True
	$buttonServices.add_Click($buttonServices_Click)
	#
	# buttonLogicalDrives
	#
	$buttonLogicalDrives.Location = '356, 150'
	$buttonLogicalDrives.Name = 'buttonLogicalDrives'
	$buttonLogicalDrives.Size = '111, 23'
	$buttonLogicalDrives.TabIndex = 67
	$buttonLogicalDrives.Text = 'Logical Drives'
	$buttonLogicalDrives.UseCompatibleTextRendering = $True
	$buttonLogicalDrives.UseVisualStyleBackColor = $True
	$buttonLogicalDrives.add_Click($buttonLogicalDrives_Click)
	#
	# buttonProcesses
	#
	$buttonProcesses.Location = '473, 62'
	$buttonProcesses.Name = 'buttonProcesses'
	$buttonProcesses.Size = '118, 23'
	$buttonProcesses.TabIndex = 84
	$buttonProcesses.Text = 'Software Installed 2'
	$buttonProcesses.UseCompatibleTextRendering = $True
	$buttonProcesses.UseVisualStyleBackColor = $True
	$buttonProcesses.add_Click($buttonProcesses_Click)
	#
	# buttonSystemInformation
	#
	$buttonSystemInformation.Location = '6, 40'
	$buttonSystemInformation.Name = 'buttonSystemInformation'
	$buttonSystemInformation.Size = '111, 23'
	$buttonSystemInformation.TabIndex = 63
	$buttonSystemInformation.Text = 'System Information'
	$buttonSystemInformation.UseCompatibleTextRendering = $True
	$buttonSystemInformation.UseVisualStyleBackColor = $True
	$buttonSystemInformation.add_Click($buttonSystemInformation_Click)
	#
	# buttonPortBattery
	#
	$buttonPortBattery.Location = '239, 150'
	$buttonPortBattery.Name = 'buttonPortBattery'
	$buttonPortBattery.Size = '111, 23'
	$buttonPortBattery.TabIndex = 83
	$buttonPortBattery.Text = 'Port Battery'
	$buttonPortBattery.UseCompatibleTextRendering = $True
	$buttonPortBattery.UseVisualStyleBackColor = $True
	$buttonPortBattery.add_Click($buttonPortBattery_Click)
	#
	# buttonBios
	#
	$buttonBios.Location = '6, 62'
	$buttonBios.Name = 'buttonBios'
	$buttonBios.Size = '111, 23'
	$buttonBios.TabIndex = 64
	$buttonBios.Text = 'BIOS'
	$buttonBios.UseCompatibleTextRendering = $True
	$buttonBios.UseVisualStyleBackColor = $True
	$buttonBios.add_Click($buttonBios_Click)
	#
	# buttonFAn
	#
	$buttonFAn.Location = '239, 106'
	$buttonFAn.Name = 'buttonFAn'
	$buttonFAn.Size = '111, 23'
	$buttonFAn.TabIndex = 82
	$buttonFAn.Text = 'Fan'
	$buttonFAn.UseCompatibleTextRendering = $True
	$buttonFAn.UseVisualStyleBackColor = $True
	$buttonFAn.add_Click($buttonFAn_Click)
	#
	# buttonMotherboard
	#
	$buttonMotherboard.Location = '6, 128'
	$buttonMotherboard.Name = 'buttonMotherboard'
	$buttonMotherboard.Size = '111, 23'
	$buttonMotherboard.TabIndex = 65
	$buttonMotherboard.Text = 'Motherboard'
	$buttonMotherboard.UseCompatibleTextRendering = $True
	$buttonMotherboard.UseVisualStyleBackColor = $True
	$buttonMotherboard.add_Click($buttonMotherboard_Click)
	#
	# buttonSoftwareInstalled1
	#
	$buttonSoftwareInstalled1.Location = '473, 40'
	$buttonSoftwareInstalled1.Name = 'buttonSoftwareInstalled1'
	$buttonSoftwareInstalled1.Size = '118, 23'
	$buttonSoftwareInstalled1.TabIndex = 81
	$buttonSoftwareInstalled1.Text = 'Software Installed 1'
	$buttonSoftwareInstalled1.UseCompatibleTextRendering = $True
	$buttonSoftwareInstalled1.UseVisualStyleBackColor = $True
	$buttonSoftwareInstalled1.add_Click($buttonSoftwareInstalled1_Click)
	#
	# buttonPrinters
	#
	$buttonPrinters.Location = '239, 84'
	$buttonPrinters.Name = 'buttonPrinters'
	$buttonPrinters.Size = '111, 23'
	$buttonPrinters.TabIndex = 80
	$buttonPrinters.Text = 'Printers'
	$buttonPrinters.UseCompatibleTextRendering = $True
	$buttonPrinters.UseVisualStyleBackColor = $True
	$buttonPrinters.add_Click($buttonPrinters_Click)
	#
	# buttonCPU
	#
	$buttonCPU.Location = '6, 84'
	$buttonCPU.Name = 'buttonCPU'
	$buttonCPU.Size = '111, 23'
	$buttonCPU.TabIndex = 66
	$buttonCPU.Text = 'CPU'
	$buttonCPU.UseCompatibleTextRendering = $True
	$buttonCPU.UseVisualStyleBackColor = $True
	$buttonCPU.add_Click($buttonCPU_Click)
	#
	# buttonBattery
	#
	$buttonBattery.Location = '239, 128'
	$buttonBattery.Name = 'buttonBattery'
	$buttonBattery.Size = '111, 23'
	$buttonBattery.TabIndex = 79
	$buttonBattery.Text = 'Battery'
	$buttonBattery.UseCompatibleTextRendering = $True
	$buttonBattery.UseVisualStyleBackColor = $True
	$buttonBattery.add_Click($buttonBattery_Click)
	#
	# buttonRAM
	#
	$buttonRAM.Location = '6, 106'
	$buttonRAM.Name = 'buttonRAM'
	$buttonRAM.Size = '111, 23'
	$buttonRAM.TabIndex = 68
	$buttonRAM.Text = 'RAM'
	$buttonRAM.UseCompatibleTextRendering = $True
	$buttonRAM.UseVisualStyleBackColor = $True
	$buttonRAM.add_Click($buttonRAM_Click)
	#
	# buttonSound
	#
	$buttonSound.Location = '239, 62'
	$buttonSound.Name = 'buttonSound'
	$buttonSound.Size = '111, 23'
	$buttonSound.TabIndex = 78
	$buttonSound.Text = 'Sound'
	$buttonSound.UseCompatibleTextRendering = $True
	$buttonSound.UseVisualStyleBackColor = $True
	$buttonSound.add_Click($buttonSound_Click)
	#
	# buttonPhysicalDrives
	#
	$buttonPhysicalDrives.Location = '6, 150'
	$buttonPhysicalDrives.Name = 'buttonPhysicalDrives'
	$buttonPhysicalDrives.Size = '111, 23'
	$buttonPhysicalDrives.TabIndex = 69
	$buttonPhysicalDrives.Text = 'Physical Drives'
	$buttonPhysicalDrives.UseCompatibleTextRendering = $True
	$buttonPhysicalDrives.UseVisualStyleBackColor = $True
	$buttonPhysicalDrives.add_Click($buttonPhysicalDrives_Click)
	#
	# buttonOpticalDrive
	#
	$buttonOpticalDrive.Location = '239, 40'
	$buttonOpticalDrive.Name = 'buttonOpticalDrive'
	$buttonOpticalDrive.Size = '111, 23'
	$buttonOpticalDrive.TabIndex = 77
	$buttonOpticalDrive.Text = 'Optical Drive'
	$buttonOpticalDrive.UseCompatibleTextRendering = $True
	$buttonOpticalDrive.UseVisualStyleBackColor = $True
	$buttonOpticalDrive.add_Click($buttonOpticalDrive_Click)
	#
	# buttonRDP
	#
	$buttonRDP.Location = '457, 1'
	$buttonRDP.Name = 'buttonRDP'
	$buttonRDP.Size = '54, 23'
	$buttonRDP.TabIndex = 86
	$buttonRDP.Text = 'RDP'
	$buttonRDP.UseCompatibleTextRendering = $True
	$buttonRDP.UseVisualStyleBackColor = $True
	$buttonRDP.add_Click($buttonRDP_Click)
	#
	# label19
	#
	$label19.AutoSize = $True
	$label19.Location = '444, 3'
	$label19.Name = 'label19'
	$label19.Size = '7, 17'
	$label19.TabIndex = 62
	$label19.Text = '|'
	$label19.UseCompatibleTextRendering = $True
	#
	# buttonCut
	#
	$buttonCut.Location = '237, 692'
	$buttonCut.Name = 'buttonCut'
	$buttonCut.Size = '75, 23'
	$buttonCut.TabIndex = 46
	$buttonCut.Text = 'Cut'
	$buttonCut.UseCompatibleTextRendering = $True
	$buttonCut.UseVisualStyleBackColor = $True
	$buttonCut.add_Click($buttonCut_Click)
	#
	# buttonCopy
	#
	$buttonCopy.Location = '351, 692'
	$buttonCopy.Name = 'buttonCopy'
	$buttonCopy.Size = '75, 23'
	$buttonCopy.TabIndex = 45
	$buttonCopy.Text = 'Copy'
	$buttonCopy.UseCompatibleTextRendering = $True
	$buttonCopy.UseVisualStyleBackColor = $True
	$buttonCopy.add_Click($buttonCopy_Click)
	#
	# buttonPaste
	#
	$buttonPaste.Location = '465, 692'
	$buttonPaste.Name = 'buttonPaste'
	$buttonPaste.Size = '75, 23'
	$buttonPaste.TabIndex = 44
	$buttonPaste.Text = 'Paste'
	$buttonPaste.UseCompatibleTextRendering = $True
	$buttonPaste.UseVisualStyleBackColor = $True
	$buttonPaste.add_Click($buttonPaste_Click)
	#
	# label26
	#
	$label26.AutoSize = $True
	$label26.Location = '758, 5'
	$label26.Name = 'label26'
	$label26.Size = '7, 17'
	$label26.TabIndex = 43
	$label26.Text = '|'
	$label26.UseCompatibleTextRendering = $True
	#
	# label25
	#
	$label25.AutoSize = $True
	$label25.Location = '517, 3'
	$label25.Name = 'label25'
	$label25.Size = '7, 17'
	$label25.TabIndex = 19
	$label25.Text = '|'
	$label25.UseCompatibleTextRendering = $True
	#
	# textbox3
	#
	$textbox3.Location = '530, 3'
	$textbox3.Name = 'textbox3'
	$textbox3.Size = '141, 20'
	$textbox3.TabIndex = 42
	#
	# buttonSearchTDX
	#
	$buttonSearchTDX.Location = '677, 1'
	$buttonSearchTDX.Name = 'buttonSearchTDX'
	$buttonSearchTDX.Size = '75, 23'
	$buttonSearchTDX.TabIndex = 41
	$buttonSearchTDX.Text = 'Search TDX'
	$buttonSearchTDX.UseCompatibleTextRendering = $True
	$buttonSearchTDX.UseVisualStyleBackColor = $True
	$buttonSearchTDX.add_Click($buttonSearchTDX_Click)
	#
	# buttonSaveToFile
	#
	$buttonSaveToFile.Location = '690, 692'
	$buttonSaveToFile.Name = 'buttonSaveToFile'
	$buttonSaveToFile.Size = '75, 23'
	$buttonSaveToFile.TabIndex = 40
	$buttonSaveToFile.Text = 'Save to file'
	$buttonSaveToFile.UseCompatibleTextRendering = $True
	$buttonSaveToFile.UseVisualStyleBackColor = $True
	$buttonSaveToFile.add_Click($buttonSaveToFile_Click)
	#
	# labelNotes
	#
	$labelNotes.AutoSize = $True
	$labelNotes.Location = '16, 454'
	$labelNotes.Name = 'labelNotes'
	$labelNotes.Size = '37, 17'
	$labelNotes.TabIndex = 39
	$labelNotes.Text = 'Notes:'
	$labelNotes.UseCompatibleTextRendering = $True
	#
	# richtextbox1
	#
	$richtextbox1.Location = '12, 474'
	$richtextbox1.Name = 'richtextbox1'
	$richtextbox1.Size = '753, 212'
	$richtextbox1.TabIndex = 38
	$richtextbox1.Text = ''
	#
	# groupbox2
	#
	$groupbox2.Controls.Add($textbox11)
	$groupbox2.Controls.Add($labelLastModified)
	$groupbox2.Controls.Add($labelVersion)
	$groupbox2.Controls.Add($textbox10)
	$groupbox2.Controls.Add($labelOS)
	$groupbox2.Controls.Add($label20)
	$groupbox2.Controls.Add($textbox9)
	$groupbox2.Controls.Add($labelIP)
	$groupbox2.Controls.Add($labelCreationDateAD)
	$groupbox2.Controls.Add($textbox8)
	$groupbox2.Controls.Add($label24)
	$groupbox2.Controls.Add($labelOU)
	$groupbox2.Controls.Add($textbox7)
	$groupbox2.Controls.Add($textbox2)
	$groupbox2.Controls.Add($textbox4)
	$groupbox2.Controls.Add($textbox5)
	$groupbox2.Controls.Add($textbox6)
	$groupbox2.Controls.Add($buttonSearchComputers)
	$groupbox2.Location = '12, 45'
	$groupbox2.Name = 'groupbox2'
	$groupbox2.Size = '380, 209'
	$groupbox2.TabIndex = 37
	$groupbox2.TabStop = $False
	$groupbox2.Text = 'Computer'
	$groupbox2.UseCompatibleTextRendering = $True
	#
	# textbox11
	#
	$textbox11.Location = '119, 172'
	$textbox11.Name = 'textbox11'
	$textbox11.Size = '240, 20'
	$textbox11.TabIndex = 50
	#
	# labelLastModified
	#
	$labelLastModified.AutoSize = $True
	$labelLastModified.Location = '4, 125'
	$labelLastModified.Name = 'labelLastModified'
	$labelLastModified.Size = '75, 17'
	$labelLastModified.TabIndex = 33
	$labelLastModified.Text = 'Last Modified:'
	$labelLastModified.UseCompatibleTextRendering = $True
	#
	# labelVersion
	#
	$labelVersion.AutoSize = $True
	$labelVersion.Location = '4, 176'
	$labelVersion.Name = 'labelVersion'
	$labelVersion.Size = '46, 17'
	$labelVersion.TabIndex = 36
	$labelVersion.Text = 'Version:'
	$labelVersion.UseCompatibleTextRendering = $True
	#
	# textbox10
	#
	$textbox10.Location = '119, 155'
	$textbox10.Name = 'textbox10'
	$textbox10.Size = '240, 20'
	$textbox10.TabIndex = 49
	#
	# labelOS
	#
	$labelOS.AutoSize = $True
	$labelOS.Location = '4, 159'
	$labelOS.Name = 'labelOS'
	$labelOS.Size = '24, 17'
	$labelOS.TabIndex = 35
	$labelOS.Text = 'OS:'
	$labelOS.UseCompatibleTextRendering = $True
	#
	# label20
	#
	$label20.AutoSize = $True
	$label20.Location = '4, 142'
	$label20.Name = 'label20'
	$label20.Size = '111, 17'
	$label20.TabIndex = 34
	$label20.Text = 'Firstname Lastname:'
	$label20.UseCompatibleTextRendering = $True
	#
	# textbox9
	#
	$textbox9.Location = '119, 138'
	$textbox9.Name = 'textbox9'
	$textbox9.Size = '240, 20'
	$textbox9.TabIndex = 48
	#
	# labelIP
	#
	$labelIP.AutoSize = $True
	$labelIP.Location = '4, 108'
	$labelIP.Name = 'labelIP'
	$labelIP.Size = '18, 17'
	$labelIP.TabIndex = 32
	$labelIP.Text = 'IP:'
	$labelIP.UseCompatibleTextRendering = $True
	#
	# labelCreationDateAD
	#
	$labelCreationDateAD.AutoSize = $True
	$labelCreationDateAD.Location = '4, 91'
	$labelCreationDateAD.Name = 'labelCreationDateAD'
	$labelCreationDateAD.Size = '103, 17'
	$labelCreationDateAD.TabIndex = 31
	$labelCreationDateAD.Text = 'Creation Date (AD):'
	$labelCreationDateAD.UseCompatibleTextRendering = $True
	#
	# textbox8
	#
	$textbox8.Location = '119, 121'
	$textbox8.Name = 'textbox8'
	$textbox8.Size = '240, 20'
	$textbox8.TabIndex = 47
	#
	# label24
	#
	$label24.AutoSize = $True
	$label24.Location = '4, 74'
	$label24.Name = 'label24'
	$label24.Size = '38, 17'
	$label24.TabIndex = 30
	$label24.Text = 'Name:'
	$label24.UseCompatibleTextRendering = $True
	#
	# labelOU
	#
	$labelOU.AutoSize = $True
	$labelOU.Location = '4, 56'
	$labelOU.Name = 'labelOU'
	$labelOU.Size = '27, 17'
	$labelOU.TabIndex = 29
	$labelOU.Text = 'OU: '
	$labelOU.UseCompatibleTextRendering = $True
	#
	# textbox7
	#
	$textbox7.Location = '119, 104'
	$textbox7.Name = 'textbox7'
	$textbox7.Size = '240, 20'
	$textbox7.TabIndex = 46
	#
	# textbox2
	#
	$textbox2.Location = '119, 19'
	$textbox2.Name = 'textbox2'
	$textbox2.Size = '240, 20'
	$textbox2.TabIndex = 28
	#
	# textbox4
	#
	$textbox4.Location = '119, 52'
	$textbox4.Name = 'textbox4'
	$textbox4.Size = '240, 20'
	$textbox4.TabIndex = 43
	#
	# textbox5
	#
	$textbox5.Location = '119, 70'
	$textbox5.Name = 'textbox5'
	$textbox5.Size = '240, 20'
	$textbox5.TabIndex = 44
	#
	# textbox6
	#
	$textbox6.Location = '119, 87'
	$textbox6.Name = 'textbox6'
	$textbox6.Size = '240, 20'
	$textbox6.TabIndex = 45
	#
	# buttonSearchComputers
	#
	$buttonSearchComputers.Location = '9, 17'
	$buttonSearchComputers.Name = 'buttonSearchComputers'
	$buttonSearchComputers.Size = '106, 23'
	$buttonSearchComputers.TabIndex = 1
	$buttonSearchComputers.Text = 'Search Computers'
	$buttonSearchComputers.UseCompatibleTextRendering = $True
	$buttonSearchComputers.UseVisualStyleBackColor = $True
	$buttonSearchComputers.add_Click($buttonSearchComputers_Click)
	#
	# groupbox1
	#
	$groupbox1.Controls.Add($textbox20)
	$groupbox1.Controls.Add($textbox19)
	$groupbox1.Controls.Add($textbox18)
	$groupbox1.Controls.Add($textbox15)
	$groupbox1.Controls.Add($textbox16)
	$groupbox1.Controls.Add($textbox17)
	$groupbox1.Controls.Add($textbox12)
	$groupbox1.Controls.Add($textbox14)
	$groupbox1.Controls.Add($textbox13)
	$groupbox1.Controls.Add($labelTitle)
	$groupbox1.Controls.Add($labelActiveAccount)
	$groupbox1.Controls.Add($labelUsername)
	$groupbox1.Controls.Add($labelDepartment)
	$groupbox1.Controls.Add($labelLocation)
	$groupbox1.Controls.Add($labelEmail)
	$groupbox1.Controls.Add($labelPhone)
	$groupbox1.Controls.Add($labelName)
	$groupbox1.Controls.Add($buttonSearchPeople)
	$groupbox1.Controls.Add($textbox1)
	$groupbox1.Location = '398, 45'
	$groupbox1.Name = 'groupbox1'
	$groupbox1.Size = '367, 209'
	$groupbox1.TabIndex = 9
	$groupbox1.TabStop = $False
	$groupbox1.Text = 'Users'
	$groupbox1.UseCompatibleTextRendering = $True
	#
	# textbox20
	#
	$textbox20.Location = '217, 53'
	$textbox20.Name = 'textbox20'
	$textbox20.Size = '127, 20'
	$textbox20.TabIndex = 60
	#
	# textbox19
	#
	$textbox19.Location = '104, 175'
	$textbox19.Name = 'textbox19'
	$textbox19.Size = '240, 20'
	$textbox19.TabIndex = 59
	#
	# textbox18
	#
	$textbox18.Location = '104, 158'
	$textbox18.Name = 'textbox18'
	$textbox18.Size = '240, 20'
	$textbox18.TabIndex = 58
	#
	# textbox15
	#
	$textbox15.Location = '104, 141'
	$textbox15.Name = 'textbox15'
	$textbox15.Size = '240, 20'
	$textbox15.TabIndex = 55
	#
	# textbox16
	#
	$textbox16.Location = '104, 124'
	$textbox16.Name = 'textbox16'
	$textbox16.Size = '240, 20'
	$textbox16.TabIndex = 57
	$textbox16.add_TextChanged($textbox16_TextChanged)
	#
	# textbox17
	#
	$textbox17.Location = '104, 107'
	$textbox17.Name = 'textbox17'
	$textbox17.Size = '240, 20'
	$textbox17.TabIndex = 56
	#
	# textbox12
	#
	$textbox12.Location = '104, 90'
	$textbox12.Name = 'textbox12'
	$textbox12.Size = '240, 20'
	$textbox12.TabIndex = 51
	#
	# textbox14
	#
	$textbox14.Location = '104, 73'
	$textbox14.Name = 'textbox14'
	$textbox14.Size = '240, 20'
	$textbox14.TabIndex = 53
	#
	# textbox13
	#
	$textbox13.Location = '104, 53'
	$textbox13.Name = 'textbox13'
	$textbox13.Size = '115, 20'
	$textbox13.TabIndex = 52
	#
	# labelTitle
	#
	$labelTitle.AutoSize = $True
	$labelTitle.Location = '15, 175'
	$labelTitle.Name = 'labelTitle'
	$labelTitle.Size = '29, 17'
	$labelTitle.TabIndex = 14
	$labelTitle.Text = 'Title:'
	$labelTitle.UseCompatibleTextRendering = $True
	#
	# labelActiveAccount
	#
	$labelActiveAccount.AutoSize = $True
	$labelActiveAccount.Location = '15, 158'
	$labelActiveAccount.Name = 'labelActiveAccount'
	$labelActiveAccount.Size = '82, 17'
	$labelActiveAccount.TabIndex = 6
	$labelActiveAccount.Text = 'Active Account:'
	$labelActiveAccount.UseCompatibleTextRendering = $True
	#
	# labelUsername
	#
	$labelUsername.AutoSize = $True
	$labelUsername.Location = '15, 141'
	$labelUsername.Name = 'labelUsername'
	$labelUsername.Size = '63, 17'
	$labelUsername.TabIndex = 5
	$labelUsername.Text = 'Username: '
	$labelUsername.UseCompatibleTextRendering = $True
	#
	# labelDepartment
	#
	$labelDepartment.AutoSize = $True
	$labelDepartment.Location = '15, 107'
	$labelDepartment.Name = 'labelDepartment'
	$labelDepartment.Size = '66, 17'
	$labelDepartment.TabIndex = 4
	$labelDepartment.Text = 'Department:'
	$labelDepartment.UseCompatibleTextRendering = $True
	#
	# labelLocation
	#
	$labelLocation.AutoSize = $True
	$labelLocation.Location = '15, 124'
	$labelLocation.Name = 'labelLocation'
	$labelLocation.Size = '47, 17'
	$labelLocation.TabIndex = 3
	$labelLocation.Text = 'Location'
	$labelLocation.UseCompatibleTextRendering = $True
	#
	# labelEmail
	#
	$labelEmail.AutoSize = $True
	$labelEmail.Location = '15, 90'
	$labelEmail.Name = 'labelEmail'
	$labelEmail.Size = '36, 17'
	$labelEmail.TabIndex = 2
	$labelEmail.Text = 'Email:'
	$labelEmail.UseCompatibleTextRendering = $True
	#
	# labelPhone
	#
	$labelPhone.AutoSize = $True
	$labelPhone.Location = '15, 73'
	$labelPhone.Name = 'labelPhone'
	$labelPhone.Size = '43, 17'
	$labelPhone.TabIndex = 1
	$labelPhone.Text = 'Phone: '
	$labelPhone.UseCompatibleTextRendering = $True
	#
	# labelName
	#
	$labelName.AutoSize = $True
	$labelName.Location = '15, 56'
	$labelName.Name = 'labelName'
	$labelName.Size = '38, 17'
	$labelName.TabIndex = 0
	$labelName.Text = 'Name:'
	$labelName.UseCompatibleTextRendering = $True
	#
	# buttonSearchPeople
	#
	$buttonSearchPeople.Location = '15, 19'
	$buttonSearchPeople.Name = 'buttonSearchPeople'
	$buttonSearchPeople.Size = '90, 23'
	$buttonSearchPeople.TabIndex = 2
	$buttonSearchPeople.Text = 'Search People'
	$buttonSearchPeople.UseCompatibleTextRendering = $True
	$buttonSearchPeople.UseVisualStyleBackColor = $True
	$buttonSearchPeople.add_Click($buttonSearchPeople_Click)
	#
	# textbox1
	#
	$textbox1.Location = '111, 19'
	$textbox1.Name = 'textbox1'
	$textbox1.Size = '233, 20'
	$textbox1.TabIndex = 3
	$groupbox3.ResumeLayout()
	$groupbox2.ResumeLayout()
	$groupbox1.ResumeLayout()
	$form1.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $form1.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$form1.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$form1.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $form1.ShowDialog()

} #End Function

#Call the form
Show-ComputerInventory_psf | Out-Null
