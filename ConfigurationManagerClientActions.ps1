
<#
    .NOTES
    --------------------------------------------------------------------------------
     Form generated by:  PowerShell Studio 2019
     Generated on:       9/16/2019 1:42 PM
	 Logic by:	         Alan Newingham
	 Email: 			 alan.newingham@gmail.com
	 GitHub: 			 https://github.com/01000001-01001110
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2019
#>

#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Show-ConfigurationManagerActions-popupwindow_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formConfigurationManager = New-Object 'System.Windows.Forms.Form'
	$buttonExternalEventDetecti = New-Object 'System.Windows.Forms.Button'
	$labelClickOnTheActionYouW = New-Object 'System.Windows.Forms.Label'
	$buttonEndpointAMPolicyReev = New-Object 'System.Windows.Forms.Button'
	$buttonEndpointDeploymentRe = New-Object 'System.Windows.Forms.Button'
	$buttonSendUnsentStateMessa = New-Object 'System.Windows.Forms.Button'
	$buttonDCMPolicy = New-Object 'System.Windows.Forms.Button'
	$buttonSUMUpdatesInstallSch = New-Object 'System.Windows.Forms.Button'
	$buttonPendingPackageCheckS = New-Object 'System.Windows.Forms.Button'
	$buttonPolicyAgentRequestAs = New-Object 'System.Windows.Forms.Button'
	$buttonLSTimeoutRefresh = New-Object 'System.Windows.Forms.Button'
	$buttonPowerManagementStart = New-Object 'System.Windows.Forms.Button'
	$buttonAppManagerGlobalEval = New-Object 'System.Windows.Forms.Button'
	$buttonAppManagerUserPolicy = New-Object 'System.Windows.Forms.Button'
	$buttonApplicationManagerPo = New-Object 'System.Windows.Forms.Button'
	$buttonAMTStatusCheckPolicy = New-Object 'System.Windows.Forms.Button'
	$button26 = New-Object 'System.Windows.Forms.Button'
	$buttonStateSystemPolicyBul = New-Object 'System.Windows.Forms.Button'
	$buttonUpdateStorePolicy = New-Object 'System.Windows.Forms.Button'
	$buttonScanByUpdateSource = New-Object 'System.Windows.Forms.Button'
	$buttonStateSystemPolicyCle = New-Object 'System.Windows.Forms.Button'
	$buttonBranchDistributionPo = New-Object 'System.Windows.Forms.Button'
	$buttonSoftwareUpdatesAssig = New-Object 'System.Windows.Forms.Button'
	$buttonWindowsInstallerSour = New-Object 'System.Windows.Forms.Button'
	$button14 = New-Object 'System.Windows.Forms.Button'
	$buttonIDMIFCollectionCycle = New-Object 'System.Windows.Forms.Button'
	$buttonFileCollectionCycle = New-Object 'System.Windows.Forms.Button'
	$buttonDiscoveryDataCollect = New-Object 'System.Windows.Forms.Button'
	$buttonSoftwareInventoryCol = New-Object 'System.Windows.Forms.Button'
	$buttonHardwareInventoryCol = New-Object 'System.Windows.Forms.Button'
	$buttonNAPAction = New-Object 'System.Windows.Forms.Button'
	$buttonPeerDPStatusReportin = New-Object 'System.Windows.Forms.Button'
	$buttonRetryRefreshingCerti = New-Object 'System.Windows.Forms.Button'
	$buttonValidateUserPolicy = New-Object 'System.Windows.Forms.Button'
	$buttonValidateMachinePolic = New-Object 'System.Windows.Forms.Button'
	$buttonUserPolicyAgentClean = New-Object 'System.Windows.Forms.Button'
	$buttonMachinePolicyAgentCl = New-Object 'System.Windows.Forms.Button'
	$buttonClearProxySettingsCa = New-Object 'System.Windows.Forms.Button'
	$buttonSourceUpdateMessage = New-Object 'System.Windows.Forms.Button'
	$buttonSoftwareMeteringUsag = New-Object 'System.Windows.Forms.Button'
	$buttonPolicyAgentEvaluateA = New-Object 'System.Windows.Forms.Button'
	$buttonLSRefreshLocations = New-Object 'System.Windows.Forms.Button'
	$buttonRefreshDefaultMPTask = New-Object 'System.Windows.Forms.Button'
	$buttonEvaluateMachinePolic = New-Object 'System.Windows.Forms.Button'
	$buttonMachineAssignments = New-Object 'System.Windows.Forms.Button'
	$buttonClientMachineAuthent = New-Object 'System.Windows.Forms.Button'
	$buttonIDMIFCollection = New-Object 'System.Windows.Forms.Button'
	$buttonFileCollection = New-Object 'System.Windows.Forms.Button'
	$buttonDiscoveryInventory = New-Object 'System.Windows.Forms.Button'
	$buttonSoftwareInventory = New-Object 'System.Windows.Forms.Button'
	$buttonHardwareInventory = New-Object 'System.Windows.Forms.Button'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	#The function Parade
	function HardwareInventory
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000001}" /NOINTERACTIVE
	}
	function SoftwareInventory
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000002}" /NOINTERACTIVE
	}
	function DiscoveryInventory
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000003}" /NOINTERACTIVE
	}
	function FileCollection
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000010}" /NOINTERACTIVE
	}
	function IDMIFCollection
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000011}" /NOINTERACTIVE
	}
	function ClientMachineAuthentication
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000012}" /NOINTERACTIVE
	}
	function RequestMachineAssignments
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000021}" /NOINTERACTIVE
	}
	function EvaluateMachinePolicies
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000022}" /NOINTERACTIVE
	}
	function RefreshDefaultMPTask
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000023}" /NOINTERACTIVE
	}
	function LSRefreshLocationsTask
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000024}" /NOINTERACTIVE
	}
	function LSTimeoutRefreshTask
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000025}" /NOINTERACTIVE
	}
	function PolicyAgentRequestAssignment
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000026}" /NOINTERACTIVE
	}
	function PolicyAgentEvaluateAssignment
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000027}" /NOINTERACTIVE
	}
	function SoftwareMeteringGeneratingUsageReport
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000031}" /NOINTERACTIVE
	}
	function SourceUpdateMessage
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000032}" /NOINTERACTIVE
	}
	function ClearProxySettingsCache
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000037}" /NOINTERACTIVE
	}
	function MachinePolicyAgentCleanup
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000040}" /NOINTERACTIVE
	}
	function UserPolicyAgentCleanup
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000041}" /NOINTERACTIVE
	}
	function PolicyAgentValidateMachinePolicy-Assignment
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000042}" /NOINTERACTIVE
	}
	function PolicyAgentValidateUserPolicy-Assignment
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000043}" /NOINTERACTIVE
	}
	function Retrying-RefreshingcertificatesADMP
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000051}" /NOINTERACTIVE
	}
	function PeerDPStatusReporting
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000061}" /NOINTERACTIVE
	}
	function PeerDPPendingPackageCheckSchedule
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000062}" /NOINTERACTIVE
	}
	function SUMUpdatesInstallSchedule
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000063}" /NOINTERACTIVE
	}
	function NAPAction
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000071}" /NOINTERACTIVE
	}
	function HardwareInventoryCollectionCycle
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000101}" /NOINTERACTIVE
	}
	function SoftwareInventoryCollectionCycle
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000102}" /NOINTERACTIVE
	}
	function DiscoveryDataCollectionCycle
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000103}" /NOINTERACTIVE
	}
	function FileCollectionCycle
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000104}" /NOINTERACTIVE
	}
	function IDMIFCollectionCycle
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000105}" /NOINTERACTIVE
	}
	function SoftwareMeteringUsageReportCycle
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000106}" /NOINTERACTIVE
	}
	function WindowsInstallerSourceListUpdateCycle
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000107}" /NOINTERACTIVE
	}
	function SoftwareUpdatesAssignmentsEvaluationCycle
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000108}" /NOINTERACTIVE
	}
	function BranchDistributionPointMaintenanceTask
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000109}" /NOINTERACTIVE
	}
	function DCMPolicy
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000110}" /NOINTERACTIVE
	}
	function SendUnsentStateMessage
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000111}" /NOINTERACTIVE
	}
	function StateSystemPolicyCacheCleanout
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000112}" /NOINTERACTIVE
	}
	function ScanByUpdateSource
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000113}" /NOINTERACTIVE
	}
	function UpdateStorePolicy
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000114}" /NOINTERACTIVE
	}
	function StateSystemPolicyBulkSendHigh
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000115}" /NOINTERACTIVE
	}
	function StateSystemPolicyBulkSendLow
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000116}" /NOINTERACTIVE
	}
	function AMTStatusCheckPolicy
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000120}" /NOINTERACTIVE
	}
	function ApplicationManagerPolicyAction
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000121}" /NOINTERACTIVE
	}
	function ApplicationManagerUserPolicyAction
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000122}" /NOINTERACTIVE
	}
	function ApplicationManagerGlobalEvaluationAction
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000123}" /NOINTERACTIVE
	}
	function PowerManagementStartSummarizer
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000131}" /NOINTERACTIVE
	}
	function EndpointDeploymentReevaluate
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000221}" /NOINTERACTIVE
	}
	function EndpointAMPolicyReevaluate
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000222}" /NOINTERACTIVE
	}
	function ExternalEventDetection
	{
		WMIC /namespace:\\root\ccm path sms_client CALL TriggerSchedule "{00000000-0000-0000-0000-000000000223}" /NOINTERACTIVE
	}
	
	
	
	
	$formConfigurationManager_Load={
		#TODO: Initialize Form Controls here
		
	}
	
	$buttonSoftwareMeteringUsag_Click={
		SoftwareMeteringUsageReportCycle
	}
	
	$buttonValidateMachinePolic_Click={
		PolicyAgentValidateMachinePolicy-Assignment
	}
	
	$buttonHardwareInventory_Click={
		HardwareInventory
	}
	
	$buttonSoftwareInventory_Click={
		SoftwareInventory
	}
	
	$buttonDiscoveryInventory_Click={
		DiscoveryInventory
	}
	
	$buttonFileCollection_Click={
		FileCollection
	}
	
	$buttonIDMIFCollection_Click={
		IDMIFCollection
	}
	
	$buttonClientMachineAuthent_Click={
		ClientMachineAuthentication
	}
	
	$buttonMachineAssignments_Click={
		RequestMachineAssignments
	}
	
	$buttonEvaluateMachinePolic_Click={
		EvaluateMachinePolicies
	}
	
	$buttonRefreshDefaultMPTask_Click={
		RefreshDefaultMPTask
	}
	
	$buttonLSRefreshLocations_Click={
		LSRefreshLocationsTask
	}
	
	$buttonLSTimeoutRefresh_Click={
		LSTimeoutRefreshTask
	}
	
	$buttonPolicyAgentRequestAs_Click={
		PolicyAgentRequestAssignment
	}
	
	$buttonPolicyAgentEvaluateA_Click={
		PolicyAgentEvaluateAssignment
	}
	
	$buttonSourceUpdateMessage_Click={
		SourceUpdateMessage
	}
	
	$buttonClearProxySettingsCa_Click={
		ClearProxySettingsCache
	}
	
	$buttonUserPolicyAgentClean_Click={
		MachinePolicyAgentCleanup
	}
	
	$buttonValidateUserPolicy_Click={
		PolicyAgentValidateUserPolicy-Assignment
	}
	
	$buttonRetryRefreshingCerti_Click={
		Retrying-RefreshingcertificatesADMP
	}
	
	$buttonPeerDPStatusReportin_Click={
		PeerDPStatusReporting
	}
	
	$buttonPendingPackageCheckS_Click={
		PeerDPPendingPackageCheckSchedule
	}
	
	$buttonSUMUpdatesInstallSch_Click={
		SUMUpdatesInstallSchedule
	}
	
	$buttonNAPAction_Click={
		NAPAction
	}
	
	$buttonHardwareInventoryCol_Click={
		HardwareInventoryCollectionCycle
	}
	
	$buttonSoftwareInventoryCol_Click={
		SoftwareInventoryCollectionCycle
	}
	
	$buttonDiscoveryDataCollect_Click={
		DiscoveryDataCollectionCycle
	}
	
	$buttonFileCollectionCycle_Click={
		FileCollectionCycle
	}
	
	$buttonIDMIFCollectionCycle_Click={
		IDMIFCollectionCycle
	}
	
	$button14_Click={
		SoftwareMeteringUsageReportCycle
	}
	
	$buttonWindowsInstallerSour_Click={
		WindowsInstallerSourceListUpdateCycle
	}
	
	$buttonSoftwareUpdatesAssig_Click={
		SoftwareUpdatesAssignmentsEvaluationCycle
	}
	
	$buttonMachinePolicyAgentCl_Click={
		MachinePolicyAgentCleanup
	}
	
	$buttonBranchDistributionPo_Click={
		BranchDistributionPointMaintenanceTask
	}
	
	$buttonDCMPolicy_Click={
		DCMPolicy
	}
	
	$buttonSendUnsentStateMessa_Click={
		SendUnsentStateMessage
	}
	
	$buttonStateSystemPolicyCle_Click={
		StateSystemPolicyCacheCleanout
	}
	
	$buttonScanByUpdateSource_Click={
		ScanByUpdateSource
	}
	
	$buttonUpdateStorePolicy_Click={
		UpdateStorePolicy
	}
	
	$buttonStateSystemPolicyBul_Click={
		StateSystemPolicyBulkSendHigh
	}
	
	$button26_Click={
		StateSystemPolicyBulkSendLow
	}
	
	$buttonAMTStatusCheckPolicy_Click={
		AMTStatusCheckPolicy
	}
	
	$buttonApplicationManagerPo_Click={
		ApplicationManagerPolicyAction
	}
	
	$buttonAppManagerUserPolicy_Click={
		ApplicationManagerUserPolicyAction
	}
	
	$buttonAppManagerGlobalEval_Click={
		ApplicationManagerGlobalEvaluationAction
	}
	
	$buttonPowerManagementStart_Click={
		PowerManagementStartSummarizer
	}
	
	$buttonEndpointDeploymentRe_Click={
		EndpointDeploymentReevaluate
	}
	
	$buttonEndpointAMPolicyReev_Click={
		EndpointAMPolicyReevaluate
	}
	
	$buttonExternalEventDetecti_Click={
		ExternalEventDetection
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formConfigurationManager.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonExternalEventDetecti.remove_Click($buttonExternalEventDetecti_Click)
			$buttonEndpointAMPolicyReev.remove_Click($buttonEndpointAMPolicyReev_Click)
			$buttonEndpointDeploymentRe.remove_Click($buttonEndpointDeploymentRe_Click)
			$buttonSendUnsentStateMessa.remove_Click($buttonSendUnsentStateMessa_Click)
			$buttonDCMPolicy.remove_Click($buttonDCMPolicy_Click)
			$buttonSUMUpdatesInstallSch.remove_Click($buttonSUMUpdatesInstallSch_Click)
			$buttonPendingPackageCheckS.remove_Click($buttonPendingPackageCheckS_Click)
			$buttonPolicyAgentRequestAs.remove_Click($buttonPolicyAgentRequestAs_Click)
			$buttonLSTimeoutRefresh.remove_Click($buttonLSTimeoutRefresh_Click)
			$buttonPowerManagementStart.remove_Click($buttonPowerManagementStart_Click)
			$buttonAppManagerGlobalEval.remove_Click($buttonAppManagerGlobalEval_Click)
			$buttonAppManagerUserPolicy.remove_Click($buttonAppManagerUserPolicy_Click)
			$buttonApplicationManagerPo.remove_Click($buttonApplicationManagerPo_Click)
			$buttonAMTStatusCheckPolicy.remove_Click($buttonAMTStatusCheckPolicy_Click)
			$button26.remove_Click($button26_Click)
			$buttonStateSystemPolicyBul.remove_Click($buttonStateSystemPolicyBul_Click)
			$buttonUpdateStorePolicy.remove_Click($buttonUpdateStorePolicy_Click)
			$buttonScanByUpdateSource.remove_Click($buttonScanByUpdateSource_Click)
			$buttonStateSystemPolicyCle.remove_Click($buttonStateSystemPolicyCle_Click)
			$buttonBranchDistributionPo.remove_Click($buttonBranchDistributionPo_Click)
			$buttonSoftwareUpdatesAssig.remove_Click($buttonSoftwareUpdatesAssig_Click)
			$buttonWindowsInstallerSour.remove_Click($buttonWindowsInstallerSour_Click)
			$button14.remove_Click($button14_Click)
			$buttonIDMIFCollectionCycle.remove_Click($buttonIDMIFCollectionCycle_Click)
			$buttonFileCollectionCycle.remove_Click($buttonFileCollectionCycle_Click)
			$buttonDiscoveryDataCollect.remove_Click($buttonDiscoveryDataCollect_Click)
			$buttonSoftwareInventoryCol.remove_Click($buttonSoftwareInventoryCol_Click)
			$buttonHardwareInventoryCol.remove_Click($buttonHardwareInventoryCol_Click)
			$buttonNAPAction.remove_Click($buttonNAPAction_Click)
			$buttonPeerDPStatusReportin.remove_Click($buttonPeerDPStatusReportin_Click)
			$buttonRetryRefreshingCerti.remove_Click($buttonRetryRefreshingCerti_Click)
			$buttonValidateUserPolicy.remove_Click($buttonValidateUserPolicy_Click)
			$buttonValidateMachinePolic.remove_Click($buttonValidateMachinePolic_Click)
			$buttonUserPolicyAgentClean.remove_Click($buttonUserPolicyAgentClean_Click)
			$buttonMachinePolicyAgentCl.remove_Click($buttonMachinePolicyAgentCl_Click)
			$buttonClearProxySettingsCa.remove_Click($buttonClearProxySettingsCa_Click)
			$buttonSourceUpdateMessage.remove_Click($buttonSourceUpdateMessage_Click)
			$buttonSoftwareMeteringUsag.remove_Click($buttonSoftwareMeteringUsag_Click)
			$buttonPolicyAgentEvaluateA.remove_Click($buttonPolicyAgentEvaluateA_Click)
			$buttonLSRefreshLocations.remove_Click($buttonLSRefreshLocations_Click)
			$buttonRefreshDefaultMPTask.remove_Click($buttonRefreshDefaultMPTask_Click)
			$buttonEvaluateMachinePolic.remove_Click($buttonEvaluateMachinePolic_Click)
			$buttonMachineAssignments.remove_Click($buttonMachineAssignments_Click)
			$buttonClientMachineAuthent.remove_Click($buttonClientMachineAuthent_Click)
			$buttonIDMIFCollection.remove_Click($buttonIDMIFCollection_Click)
			$buttonFileCollection.remove_Click($buttonFileCollection_Click)
			$buttonDiscoveryInventory.remove_Click($buttonDiscoveryInventory_Click)
			$buttonSoftwareInventory.remove_Click($buttonSoftwareInventory_Click)
			$buttonHardwareInventory.remove_Click($buttonHardwareInventory_Click)
			$formConfigurationManager.remove_Load($formConfigurationManager_Load)
			$formConfigurationManager.remove_Load($Form_StateCorrection_Load)
			$formConfigurationManager.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formConfigurationManager.SuspendLayout()
	#
	# formConfigurationManager
	#
	$formConfigurationManager.Controls.Add($buttonExternalEventDetecti)
	$formConfigurationManager.Controls.Add($labelClickOnTheActionYouW)
	$formConfigurationManager.Controls.Add($buttonEndpointAMPolicyReev)
	$formConfigurationManager.Controls.Add($buttonEndpointDeploymentRe)
	$formConfigurationManager.Controls.Add($buttonSendUnsentStateMessa)
	$formConfigurationManager.Controls.Add($buttonDCMPolicy)
	$formConfigurationManager.Controls.Add($buttonSUMUpdatesInstallSch)
	$formConfigurationManager.Controls.Add($buttonPendingPackageCheckS)
	$formConfigurationManager.Controls.Add($buttonPolicyAgentRequestAs)
	$formConfigurationManager.Controls.Add($buttonLSTimeoutRefresh)
	$formConfigurationManager.Controls.Add($buttonPowerManagementStart)
	$formConfigurationManager.Controls.Add($buttonAppManagerGlobalEval)
	$formConfigurationManager.Controls.Add($buttonAppManagerUserPolicy)
	$formConfigurationManager.Controls.Add($buttonApplicationManagerPo)
	$formConfigurationManager.Controls.Add($buttonAMTStatusCheckPolicy)
	$formConfigurationManager.Controls.Add($button26)
	$formConfigurationManager.Controls.Add($buttonStateSystemPolicyBul)
	$formConfigurationManager.Controls.Add($buttonUpdateStorePolicy)
	$formConfigurationManager.Controls.Add($buttonScanByUpdateSource)
	$formConfigurationManager.Controls.Add($buttonStateSystemPolicyCle)
	$formConfigurationManager.Controls.Add($buttonBranchDistributionPo)
	$formConfigurationManager.Controls.Add($buttonSoftwareUpdatesAssig)
	$formConfigurationManager.Controls.Add($buttonWindowsInstallerSour)
	$formConfigurationManager.Controls.Add($button14)
	$formConfigurationManager.Controls.Add($buttonIDMIFCollectionCycle)
	$formConfigurationManager.Controls.Add($buttonFileCollectionCycle)
	$formConfigurationManager.Controls.Add($buttonDiscoveryDataCollect)
	$formConfigurationManager.Controls.Add($buttonSoftwareInventoryCol)
	$formConfigurationManager.Controls.Add($buttonHardwareInventoryCol)
	$formConfigurationManager.Controls.Add($buttonNAPAction)
	$formConfigurationManager.Controls.Add($buttonPeerDPStatusReportin)
	$formConfigurationManager.Controls.Add($buttonRetryRefreshingCerti)
	$formConfigurationManager.Controls.Add($buttonValidateUserPolicy)
	$formConfigurationManager.Controls.Add($buttonValidateMachinePolic)
	$formConfigurationManager.Controls.Add($buttonUserPolicyAgentClean)
	$formConfigurationManager.Controls.Add($buttonMachinePolicyAgentCl)
	$formConfigurationManager.Controls.Add($buttonClearProxySettingsCa)
	$formConfigurationManager.Controls.Add($buttonSourceUpdateMessage)
	$formConfigurationManager.Controls.Add($buttonSoftwareMeteringUsag)
	$formConfigurationManager.Controls.Add($buttonPolicyAgentEvaluateA)
	$formConfigurationManager.Controls.Add($buttonLSRefreshLocations)
	$formConfigurationManager.Controls.Add($buttonRefreshDefaultMPTask)
	$formConfigurationManager.Controls.Add($buttonEvaluateMachinePolic)
	$formConfigurationManager.Controls.Add($buttonMachineAssignments)
	$formConfigurationManager.Controls.Add($buttonClientMachineAuthent)
	$formConfigurationManager.Controls.Add($buttonIDMIFCollection)
	$formConfigurationManager.Controls.Add($buttonFileCollection)
	$formConfigurationManager.Controls.Add($buttonDiscoveryInventory)
	$formConfigurationManager.Controls.Add($buttonSoftwareInventory)
	$formConfigurationManager.Controls.Add($buttonHardwareInventory)
	$formConfigurationManager.AutoScaleDimensions = '6, 13'
	$formConfigurationManager.AutoScaleMode = 'Font'
	$formConfigurationManager.ClientSize = '630, 501'
	$formConfigurationManager.Name = 'formConfigurationManager'
	$formConfigurationManager.Text = 'Configuration Manager Actions'
	$formConfigurationManager.add_Load($formConfigurationManager_Load)
	#
	# buttonExternalEventDetecti
	#
	$buttonExternalEventDetecti.Location = '403, 410'
	$buttonExternalEventDetecti.Name = 'buttonExternalEventDetecti'
	$buttonExternalEventDetecti.Size = '214, 23'
	$buttonExternalEventDetecti.TabIndex = 51
	$buttonExternalEventDetecti.Text = 'External Event Detection'
	$buttonExternalEventDetecti.UseCompatibleTextRendering = $True
	$buttonExternalEventDetecti.UseVisualStyleBackColor = $True
	$buttonExternalEventDetecti.add_Click($buttonExternalEventDetecti_Click)
	#
	# labelClickOnTheActionYouW
	#
	$labelClickOnTheActionYouW.AutoSize = $True
	$labelClickOnTheActionYouW.Location = '106, 480'
	$labelClickOnTheActionYouW.Name = 'labelClickOnTheActionYouW'
	$labelClickOnTheActionYouW.Size = '418, 17'
	$labelClickOnTheActionYouW.TabIndex = 50
	$labelClickOnTheActionYouW.Text = 'Click on the action you would like to preform. All actions are done silently for now.  '
	$labelClickOnTheActionYouW.UseCompatibleTextRendering = $True
	#
	# buttonEndpointAMPolicyReev
	#
	$buttonEndpointAMPolicyReev.Location = '404, 385'
	$buttonEndpointAMPolicyReev.Name = 'buttonEndpointAMPolicyReev'
	$buttonEndpointAMPolicyReev.Size = '214, 23'
	$buttonEndpointAMPolicyReev.TabIndex = 47
	$buttonEndpointAMPolicyReev.Text = 'Endpoint AM Policy Reevaluate'
	$buttonEndpointAMPolicyReev.UseCompatibleTextRendering = $True
	$buttonEndpointAMPolicyReev.UseVisualStyleBackColor = $True
	$buttonEndpointAMPolicyReev.add_Click($buttonEndpointAMPolicyReev_Click)
	#
	# buttonEndpointDeploymentRe
	#
	$buttonEndpointDeploymentRe.Location = '404, 360'
	$buttonEndpointDeploymentRe.Name = 'buttonEndpointDeploymentRe'
	$buttonEndpointDeploymentRe.Size = '214, 23'
	$buttonEndpointDeploymentRe.TabIndex = 46
	$buttonEndpointDeploymentRe.Text = 'Endpoint Deployment Reevaluate'
	$buttonEndpointDeploymentRe.UseCompatibleTextRendering = $True
	$buttonEndpointDeploymentRe.UseVisualStyleBackColor = $True
	$buttonEndpointDeploymentRe.add_Click($buttonEndpointDeploymentRe_Click)
	#
	# buttonSendUnsentStateMessa
	#
	$buttonSendUnsentStateMessa.Location = '403, 85'
	$buttonSendUnsentStateMessa.Name = 'buttonSendUnsentStateMessa'
	$buttonSendUnsentStateMessa.Size = '215, 23'
	$buttonSendUnsentStateMessa.TabIndex = 45
	$buttonSendUnsentStateMessa.Text = 'Send Unsent State Message'
	$buttonSendUnsentStateMessa.UseCompatibleTextRendering = $True
	$buttonSendUnsentStateMessa.UseVisualStyleBackColor = $True
	$buttonSendUnsentStateMessa.add_Click($buttonSendUnsentStateMessa_Click)
	#
	# buttonDCMPolicy
	#
	$buttonDCMPolicy.Location = '404, 60'
	$buttonDCMPolicy.Name = 'buttonDCMPolicy'
	$buttonDCMPolicy.Size = '213, 23'
	$buttonDCMPolicy.TabIndex = 44
	$buttonDCMPolicy.Text = 'DCM Policy'
	$buttonDCMPolicy.UseCompatibleTextRendering = $True
	$buttonDCMPolicy.UseVisualStyleBackColor = $True
	$buttonDCMPolicy.add_Click($buttonDCMPolicy_Click)
	#
	# buttonSUMUpdatesInstallSch
	#
	$buttonSUMUpdatesInstallSch.Location = '204, 185'
	$buttonSUMUpdatesInstallSch.Name = 'buttonSUMUpdatesInstallSch'
	$buttonSUMUpdatesInstallSch.Size = '193, 23'
	$buttonSUMUpdatesInstallSch.TabIndex = 43
	$buttonSUMUpdatesInstallSch.Text = 'SUM Updates Install Schedule'
	$buttonSUMUpdatesInstallSch.UseCompatibleTextRendering = $True
	$buttonSUMUpdatesInstallSch.UseVisualStyleBackColor = $True
	$buttonSUMUpdatesInstallSch.add_Click($buttonSUMUpdatesInstallSch_Click)
	#
	# buttonPendingPackageCheckS
	#
	$buttonPendingPackageCheckS.Location = '204, 160'
	$buttonPendingPackageCheckS.Name = 'buttonPendingPackageCheckS'
	$buttonPendingPackageCheckS.Size = '193, 23'
	$buttonPendingPackageCheckS.TabIndex = 42
	$buttonPendingPackageCheckS.Text = 'Pending Package Check Schedule'
	$buttonPendingPackageCheckS.UseCompatibleTextRendering = $True
	$buttonPendingPackageCheckS.UseVisualStyleBackColor = $True
	$buttonPendingPackageCheckS.add_Click($buttonPendingPackageCheckS_Click)
	#
	# buttonPolicyAgentRequestAs
	#
	$buttonPolicyAgentRequestAs.Location = '13, 310'
	$buttonPolicyAgentRequestAs.Name = 'buttonPolicyAgentRequestAs'
	$buttonPolicyAgentRequestAs.Size = '185, 23'
	$buttonPolicyAgentRequestAs.TabIndex = 41
	$buttonPolicyAgentRequestAs.Text = 'Policy Agent Request Assignment'
	$buttonPolicyAgentRequestAs.UseCompatibleTextRendering = $True
	$buttonPolicyAgentRequestAs.UseVisualStyleBackColor = $True
	$buttonPolicyAgentRequestAs.add_Click($buttonPolicyAgentRequestAs_Click)
	#
	# buttonLSTimeoutRefresh
	#
	$buttonLSTimeoutRefresh.Location = '13, 285'
	$buttonLSTimeoutRefresh.Name = 'buttonLSTimeoutRefresh'
	$buttonLSTimeoutRefresh.Size = '185, 23'
	$buttonLSTimeoutRefresh.TabIndex = 40
	$buttonLSTimeoutRefresh.Text = 'LS Timeout Refresh'
	$buttonLSTimeoutRefresh.UseCompatibleTextRendering = $True
	$buttonLSTimeoutRefresh.UseVisualStyleBackColor = $True
	$buttonLSTimeoutRefresh.add_Click($buttonLSTimeoutRefresh_Click)
	#
	# buttonPowerManagementStart
	#
	$buttonPowerManagementStart.Location = '404, 335'
	$buttonPowerManagementStart.Name = 'buttonPowerManagementStart'
	$buttonPowerManagementStart.Size = '214, 23'
	$buttonPowerManagementStart.TabIndex = 39
	$buttonPowerManagementStart.Text = 'PowerManagement Start Summarizer'
	$buttonPowerManagementStart.UseCompatibleTextRendering = $True
	$buttonPowerManagementStart.UseVisualStyleBackColor = $True
	$buttonPowerManagementStart.add_Click($buttonPowerManagementStart_Click)
	#
	# buttonAppManagerGlobalEval
	#
	$buttonAppManagerGlobalEval.Location = '404, 310'
	$buttonAppManagerGlobalEval.Name = 'buttonAppManagerGlobalEval'
	$buttonAppManagerGlobalEval.Size = '213, 23'
	$buttonAppManagerGlobalEval.TabIndex = 38
	$buttonAppManagerGlobalEval.Text = 'App Manager Global Evaluation Action'
	$buttonAppManagerGlobalEval.UseCompatibleTextRendering = $True
	$buttonAppManagerGlobalEval.UseVisualStyleBackColor = $True
	$buttonAppManagerGlobalEval.add_Click($buttonAppManagerGlobalEval_Click)
	#
	# buttonAppManagerUserPolicy
	#
	$buttonAppManagerUserPolicy.Location = '404, 285'
	$buttonAppManagerUserPolicy.Name = 'buttonAppManagerUserPolicy'
	$buttonAppManagerUserPolicy.Size = '213, 23'
	$buttonAppManagerUserPolicy.TabIndex = 37
	$buttonAppManagerUserPolicy.Text = 'App Manager User Policy Action'
	$buttonAppManagerUserPolicy.UseCompatibleTextRendering = $True
	$buttonAppManagerUserPolicy.UseVisualStyleBackColor = $True
	$buttonAppManagerUserPolicy.add_Click($buttonAppManagerUserPolicy_Click)
	#
	# buttonApplicationManagerPo
	#
	$buttonApplicationManagerPo.Location = '404, 260'
	$buttonApplicationManagerPo.Name = 'buttonApplicationManagerPo'
	$buttonApplicationManagerPo.Size = '213, 23'
	$buttonApplicationManagerPo.TabIndex = 36
	$buttonApplicationManagerPo.Text = 'Application Manager Policy Action'
	$buttonApplicationManagerPo.UseCompatibleTextRendering = $True
	$buttonApplicationManagerPo.UseVisualStyleBackColor = $True
	$buttonApplicationManagerPo.add_Click($buttonApplicationManagerPo_Click)
	#
	# buttonAMTStatusCheckPolicy
	#
	$buttonAMTStatusCheckPolicy.Location = '404, 235'
	$buttonAMTStatusCheckPolicy.Name = 'buttonAMTStatusCheckPolicy'
	$buttonAMTStatusCheckPolicy.Size = '213, 23'
	$buttonAMTStatusCheckPolicy.TabIndex = 35
	$buttonAMTStatusCheckPolicy.Text = 'AMT Status Check Policy'
	$buttonAMTStatusCheckPolicy.UseCompatibleTextRendering = $True
	$buttonAMTStatusCheckPolicy.UseVisualStyleBackColor = $True
	$buttonAMTStatusCheckPolicy.add_Click($buttonAMTStatusCheckPolicy_Click)
	#
	# button26
	#
	$button26.Location = '404, 210'
	$button26.Name = 'button26'
	$button26.Size = '213, 23'
	$button26.TabIndex = 34
	$button26.Text = 'State System Policy Bulk Send Low'
	$button26.UseCompatibleTextRendering = $True
	$button26.UseVisualStyleBackColor = $True
	$button26.add_Click($button26_Click)
	#
	# buttonStateSystemPolicyBul
	#
	$buttonStateSystemPolicyBul.Location = '404, 185'
	$buttonStateSystemPolicyBul.Name = 'buttonStateSystemPolicyBul'
	$buttonStateSystemPolicyBul.Size = '213, 23'
	$buttonStateSystemPolicyBul.TabIndex = 33
	$buttonStateSystemPolicyBul.Text = 'State System Policy Bulk Send High'
	$buttonStateSystemPolicyBul.UseCompatibleTextRendering = $True
	$buttonStateSystemPolicyBul.UseVisualStyleBackColor = $True
	$buttonStateSystemPolicyBul.add_Click($buttonStateSystemPolicyBul_Click)
	#
	# buttonUpdateStorePolicy
	#
	$buttonUpdateStorePolicy.Location = '404, 160'
	$buttonUpdateStorePolicy.Name = 'buttonUpdateStorePolicy'
	$buttonUpdateStorePolicy.Size = '213, 23'
	$buttonUpdateStorePolicy.TabIndex = 32
	$buttonUpdateStorePolicy.Text = 'Update Store Policy'
	$buttonUpdateStorePolicy.UseCompatibleTextRendering = $True
	$buttonUpdateStorePolicy.UseVisualStyleBackColor = $True
	$buttonUpdateStorePolicy.add_Click($buttonUpdateStorePolicy_Click)
	#
	# buttonScanByUpdateSource
	#
	$buttonScanByUpdateSource.Location = '404, 135'
	$buttonScanByUpdateSource.Name = 'buttonScanByUpdateSource'
	$buttonScanByUpdateSource.Size = '213, 23'
	$buttonScanByUpdateSource.TabIndex = 31
	$buttonScanByUpdateSource.Text = 'Scan By Update Source'
	$buttonScanByUpdateSource.UseCompatibleTextRendering = $True
	$buttonScanByUpdateSource.UseVisualStyleBackColor = $True
	$buttonScanByUpdateSource.add_Click($buttonScanByUpdateSource_Click)
	#
	# buttonStateSystemPolicyCle
	#
	$buttonStateSystemPolicyCle.Location = '403, 110'
	$buttonStateSystemPolicyCle.Name = 'buttonStateSystemPolicyCle'
	$buttonStateSystemPolicyCle.Size = '214, 23'
	$buttonStateSystemPolicyCle.TabIndex = 30
	$buttonStateSystemPolicyCle.Text = 'State System Policy Cleanout'
	$buttonStateSystemPolicyCle.UseCompatibleTextRendering = $True
	$buttonStateSystemPolicyCle.UseVisualStyleBackColor = $True
	$buttonStateSystemPolicyCle.add_Click($buttonStateSystemPolicyCle_Click)
	#
	# buttonBranchDistributionPo
	#
	$buttonBranchDistributionPo.Location = '403, 35'
	$buttonBranchDistributionPo.Name = 'buttonBranchDistributionPo'
	$buttonBranchDistributionPo.Size = '214, 23'
	$buttonBranchDistributionPo.TabIndex = 29
	$buttonBranchDistributionPo.Text = 'Branch Distribution Point Maint'
	$buttonBranchDistributionPo.UseCompatibleTextRendering = $True
	$buttonBranchDistributionPo.UseVisualStyleBackColor = $True
	$buttonBranchDistributionPo.add_Click($buttonBranchDistributionPo_Click)
	#
	# buttonSoftwareUpdatesAssig
	#
	$buttonSoftwareUpdatesAssig.Location = '204, 410'
	$buttonSoftwareUpdatesAssig.Name = 'buttonSoftwareUpdatesAssig'
	$buttonSoftwareUpdatesAssig.Size = '193, 23'
	$buttonSoftwareUpdatesAssig.TabIndex = 28
	$buttonSoftwareUpdatesAssig.Text = 'Software Updates Assignments'
	$buttonSoftwareUpdatesAssig.UseCompatibleTextRendering = $True
	$buttonSoftwareUpdatesAssig.UseVisualStyleBackColor = $True
	$buttonSoftwareUpdatesAssig.add_Click($buttonSoftwareUpdatesAssig_Click)
	#
	# buttonWindowsInstallerSour
	#
	$buttonWindowsInstallerSour.Location = '204, 385'
	$buttonWindowsInstallerSour.Name = 'buttonWindowsInstallerSour'
	$buttonWindowsInstallerSour.Size = '193, 23'
	$buttonWindowsInstallerSour.TabIndex = 27
	$buttonWindowsInstallerSour.Text = 'Windows Installer Source List'
	$buttonWindowsInstallerSour.UseCompatibleTextRendering = $True
	$buttonWindowsInstallerSour.UseVisualStyleBackColor = $True
	$buttonWindowsInstallerSour.add_Click($buttonWindowsInstallerSour_Click)
	#
	# button14
	#
	$button14.Location = '204, 360'
	$button14.Name = 'button14'
	$button14.Size = '193, 23'
	$button14.TabIndex = 26
	$button14.Text = 'Software Metering Usage Report'
	$button14.UseCompatibleTextRendering = $True
	$button14.UseVisualStyleBackColor = $True
	$button14.add_Click($button14_Click)
	#
	# buttonIDMIFCollectionCycle
	#
	$buttonIDMIFCollectionCycle.Location = '204, 335'
	$buttonIDMIFCollectionCycle.Name = 'buttonIDMIFCollectionCycle'
	$buttonIDMIFCollectionCycle.Size = '193, 23'
	$buttonIDMIFCollectionCycle.TabIndex = 25
	$buttonIDMIFCollectionCycle.Text = 'IDMIF Collection Cycle'
	$buttonIDMIFCollectionCycle.UseCompatibleTextRendering = $True
	$buttonIDMIFCollectionCycle.UseVisualStyleBackColor = $True
	$buttonIDMIFCollectionCycle.add_Click($buttonIDMIFCollectionCycle_Click)
	#
	# buttonFileCollectionCycle
	#
	$buttonFileCollectionCycle.Location = '204, 310'
	$buttonFileCollectionCycle.Name = 'buttonFileCollectionCycle'
	$buttonFileCollectionCycle.Size = '193, 23'
	$buttonFileCollectionCycle.TabIndex = 24
	$buttonFileCollectionCycle.Text = 'File Collection Cycle'
	$buttonFileCollectionCycle.UseCompatibleTextRendering = $True
	$buttonFileCollectionCycle.UseVisualStyleBackColor = $True
	$buttonFileCollectionCycle.add_Click($buttonFileCollectionCycle_Click)
	#
	# buttonDiscoveryDataCollect
	#
	$buttonDiscoveryDataCollect.Location = '204, 285'
	$buttonDiscoveryDataCollect.Name = 'buttonDiscoveryDataCollect'
	$buttonDiscoveryDataCollect.Size = '193, 23'
	$buttonDiscoveryDataCollect.TabIndex = 23
	$buttonDiscoveryDataCollect.Text = 'Discovery Data Collection'
	$buttonDiscoveryDataCollect.UseCompatibleTextRendering = $True
	$buttonDiscoveryDataCollect.UseVisualStyleBackColor = $True
	$buttonDiscoveryDataCollect.add_Click($buttonDiscoveryDataCollect_Click)
	#
	# buttonSoftwareInventoryCol
	#
	$buttonSoftwareInventoryCol.Location = '204, 260'
	$buttonSoftwareInventoryCol.Name = 'buttonSoftwareInventoryCol'
	$buttonSoftwareInventoryCol.Size = '193, 23'
	$buttonSoftwareInventoryCol.TabIndex = 22
	$buttonSoftwareInventoryCol.Text = 'Software Inventory Collection'
	$buttonSoftwareInventoryCol.UseCompatibleTextRendering = $True
	$buttonSoftwareInventoryCol.UseVisualStyleBackColor = $True
	$buttonSoftwareInventoryCol.add_Click($buttonSoftwareInventoryCol_Click)
	#
	# buttonHardwareInventoryCol
	#
	$buttonHardwareInventoryCol.Location = '204, 235'
	$buttonHardwareInventoryCol.Name = 'buttonHardwareInventoryCol'
	$buttonHardwareInventoryCol.Size = '193, 23'
	$buttonHardwareInventoryCol.TabIndex = 21
	$buttonHardwareInventoryCol.Text = 'Hardware Inventory Collection'
	$buttonHardwareInventoryCol.UseCompatibleTextRendering = $True
	$buttonHardwareInventoryCol.UseVisualStyleBackColor = $True
	$buttonHardwareInventoryCol.add_Click($buttonHardwareInventoryCol_Click)
	#
	# buttonNAPAction
	#
	$buttonNAPAction.Location = '204, 210'
	$buttonNAPAction.Name = 'buttonNAPAction'
	$buttonNAPAction.Size = '193, 23'
	$buttonNAPAction.TabIndex = 20
	$buttonNAPAction.Text = 'NAP Action'
	$buttonNAPAction.UseCompatibleTextRendering = $True
	$buttonNAPAction.UseVisualStyleBackColor = $True
	$buttonNAPAction.add_Click($buttonNAPAction_Click)
	#
	# buttonPeerDPStatusReportin
	#
	$buttonPeerDPStatusReportin.Location = '204, 135'
	$buttonPeerDPStatusReportin.Name = 'buttonPeerDPStatusReportin'
	$buttonPeerDPStatusReportin.Size = '193, 23'
	$buttonPeerDPStatusReportin.TabIndex = 19
	$buttonPeerDPStatusReportin.Text = 'Peer DP Status Reporting'
	$buttonPeerDPStatusReportin.UseCompatibleTextRendering = $True
	$buttonPeerDPStatusReportin.UseVisualStyleBackColor = $True
	$buttonPeerDPStatusReportin.add_Click($buttonPeerDPStatusReportin_Click)
	#
	# buttonRetryRefreshingCerti
	#
	$buttonRetryRefreshingCerti.Location = '204, 110'
	$buttonRetryRefreshingCerti.Name = 'buttonRetryRefreshingCerti'
	$buttonRetryRefreshingCerti.Size = '193, 23'
	$buttonRetryRefreshingCerti.TabIndex = 18
	$buttonRetryRefreshingCerti.Text = 'Retry Refreshing certificates ADMP'
	$buttonRetryRefreshingCerti.UseCompatibleTextRendering = $True
	$buttonRetryRefreshingCerti.UseVisualStyleBackColor = $True
	$buttonRetryRefreshingCerti.add_Click($buttonRetryRefreshingCerti_Click)
	#
	# buttonValidateUserPolicy
	#
	$buttonValidateUserPolicy.Location = '204, 85'
	$buttonValidateUserPolicy.Name = 'buttonValidateUserPolicy'
	$buttonValidateUserPolicy.Size = '193, 23'
	$buttonValidateUserPolicy.TabIndex = 17
	$buttonValidateUserPolicy.Text = 'Validate User Policy'
	$buttonValidateUserPolicy.UseCompatibleTextRendering = $True
	$buttonValidateUserPolicy.UseVisualStyleBackColor = $True
	$buttonValidateUserPolicy.add_Click($buttonValidateUserPolicy_Click)
	#
	# buttonValidateMachinePolic
	#
	$buttonValidateMachinePolic.Location = '204, 60'
	$buttonValidateMachinePolic.Name = 'buttonValidateMachinePolic'
	$buttonValidateMachinePolic.Size = '193, 23'
	$buttonValidateMachinePolic.TabIndex = 16
	$buttonValidateMachinePolic.Text = 'Validate Machine Policy'
	$buttonValidateMachinePolic.UseCompatibleTextRendering = $True
	$buttonValidateMachinePolic.UseVisualStyleBackColor = $True
	$buttonValidateMachinePolic.add_Click($buttonValidateMachinePolic_Click)
	#
	# buttonUserPolicyAgentClean
	#
	$buttonUserPolicyAgentClean.Location = '204, 35'
	$buttonUserPolicyAgentClean.Name = 'buttonUserPolicyAgentClean'
	$buttonUserPolicyAgentClean.Size = '193, 23'
	$buttonUserPolicyAgentClean.TabIndex = 15
	$buttonUserPolicyAgentClean.Text = 'User Policy Agent Cleanup'
	$buttonUserPolicyAgentClean.UseCompatibleTextRendering = $True
	$buttonUserPolicyAgentClean.UseVisualStyleBackColor = $True
	$buttonUserPolicyAgentClean.add_Click($buttonUserPolicyAgentClean_Click)
	#
	# buttonMachinePolicyAgentCl
	#
	$buttonMachinePolicyAgentCl.Location = '204, 435'
	$buttonMachinePolicyAgentCl.Name = 'buttonMachinePolicyAgentCl'
	$buttonMachinePolicyAgentCl.Size = '193, 23'
	$buttonMachinePolicyAgentCl.TabIndex = 14
	$buttonMachinePolicyAgentCl.Text = 'Machine Policy Agent Cleanup'
	$buttonMachinePolicyAgentCl.UseCompatibleTextRendering = $True
	$buttonMachinePolicyAgentCl.UseVisualStyleBackColor = $True
	$buttonMachinePolicyAgentCl.add_Click($buttonMachinePolicyAgentCl_Click)
	#
	# buttonClearProxySettingsCa
	#
	$buttonClearProxySettingsCa.Location = '13, 410'
	$buttonClearProxySettingsCa.Name = 'buttonClearProxySettingsCa'
	$buttonClearProxySettingsCa.Size = '185, 23'
	$buttonClearProxySettingsCa.TabIndex = 13
	$buttonClearProxySettingsCa.Text = 'Clear Proxy Settings Cache'
	$buttonClearProxySettingsCa.UseCompatibleTextRendering = $True
	$buttonClearProxySettingsCa.UseVisualStyleBackColor = $True
	$buttonClearProxySettingsCa.add_Click($buttonClearProxySettingsCa_Click)
	#
	# buttonSourceUpdateMessage
	#
	$buttonSourceUpdateMessage.Location = '13, 385'
	$buttonSourceUpdateMessage.Name = 'buttonSourceUpdateMessage'
	$buttonSourceUpdateMessage.Size = '185, 23'
	$buttonSourceUpdateMessage.TabIndex = 12
	$buttonSourceUpdateMessage.Text = 'Source Update Message'
	$buttonSourceUpdateMessage.UseCompatibleTextRendering = $True
	$buttonSourceUpdateMessage.UseVisualStyleBackColor = $True
	$buttonSourceUpdateMessage.add_Click($buttonSourceUpdateMessage_Click)
	#
	# buttonSoftwareMeteringUsag
	#
	$buttonSoftwareMeteringUsag.Location = '13, 360'
	$buttonSoftwareMeteringUsag.Name = 'buttonSoftwareMeteringUsag'
	$buttonSoftwareMeteringUsag.Size = '185, 23'
	$buttonSoftwareMeteringUsag.TabIndex = 11
	$buttonSoftwareMeteringUsag.Text = 'Software Metering Usage Report'
	$buttonSoftwareMeteringUsag.UseCompatibleTextRendering = $True
	$buttonSoftwareMeteringUsag.UseVisualStyleBackColor = $True
	$buttonSoftwareMeteringUsag.add_Click($buttonSoftwareMeteringUsag_Click)
	#
	# buttonPolicyAgentEvaluateA
	#
	$buttonPolicyAgentEvaluateA.Location = '13, 335'
	$buttonPolicyAgentEvaluateA.Name = 'buttonPolicyAgentEvaluateA'
	$buttonPolicyAgentEvaluateA.Size = '185, 23'
	$buttonPolicyAgentEvaluateA.TabIndex = 10
	$buttonPolicyAgentEvaluateA.Text = 'Policy Agent Evaluate Assignment'
	$buttonPolicyAgentEvaluateA.UseCompatibleTextRendering = $True
	$buttonPolicyAgentEvaluateA.UseVisualStyleBackColor = $True
	$buttonPolicyAgentEvaluateA.add_Click($buttonPolicyAgentEvaluateA_Click)
	#
	# buttonLSRefreshLocations
	#
	$buttonLSRefreshLocations.Location = '13, 260'
	$buttonLSRefreshLocations.Name = 'buttonLSRefreshLocations'
	$buttonLSRefreshLocations.Size = '185, 23'
	$buttonLSRefreshLocations.TabIndex = 9
	$buttonLSRefreshLocations.Text = 'LS Refresh Locations'
	$buttonLSRefreshLocations.UseCompatibleTextRendering = $True
	$buttonLSRefreshLocations.UseVisualStyleBackColor = $True
	$buttonLSRefreshLocations.add_Click($buttonLSRefreshLocations_Click)
	#
	# buttonRefreshDefaultMPTask
	#
	$buttonRefreshDefaultMPTask.Location = '13, 235'
	$buttonRefreshDefaultMPTask.Name = 'buttonRefreshDefaultMPTask'
	$buttonRefreshDefaultMPTask.Size = '185, 23'
	$buttonRefreshDefaultMPTask.TabIndex = 8
	$buttonRefreshDefaultMPTask.Text = 'Refresh Default MP Task'
	$buttonRefreshDefaultMPTask.UseCompatibleTextRendering = $True
	$buttonRefreshDefaultMPTask.UseVisualStyleBackColor = $True
	$buttonRefreshDefaultMPTask.add_Click($buttonRefreshDefaultMPTask_Click)
	#
	# buttonEvaluateMachinePolic
	#
	$buttonEvaluateMachinePolic.Location = '13, 210'
	$buttonEvaluateMachinePolic.Name = 'buttonEvaluateMachinePolic'
	$buttonEvaluateMachinePolic.Size = '185, 23'
	$buttonEvaluateMachinePolic.TabIndex = 7
	$buttonEvaluateMachinePolic.Text = 'Evaluate Machine Policies'
	$buttonEvaluateMachinePolic.UseCompatibleTextRendering = $True
	$buttonEvaluateMachinePolic.UseVisualStyleBackColor = $True
	$buttonEvaluateMachinePolic.add_Click($buttonEvaluateMachinePolic_Click)
	#
	# buttonMachineAssignments
	#
	$buttonMachineAssignments.Location = '13, 185'
	$buttonMachineAssignments.Name = 'buttonMachineAssignments'
	$buttonMachineAssignments.Size = '185, 23'
	$buttonMachineAssignments.TabIndex = 6
	$buttonMachineAssignments.Text = 'Machine Assignments'
	$buttonMachineAssignments.UseCompatibleTextRendering = $True
	$buttonMachineAssignments.UseVisualStyleBackColor = $True
	$buttonMachineAssignments.add_Click($buttonMachineAssignments_Click)
	#
	# buttonClientMachineAuthent
	#
	$buttonClientMachineAuthent.Location = '13, 160'
	$buttonClientMachineAuthent.Name = 'buttonClientMachineAuthent'
	$buttonClientMachineAuthent.Size = '185, 23'
	$buttonClientMachineAuthent.TabIndex = 5
	$buttonClientMachineAuthent.Text = 'Client Machine Authentication'
	$buttonClientMachineAuthent.UseCompatibleTextRendering = $True
	$buttonClientMachineAuthent.UseVisualStyleBackColor = $True
	$buttonClientMachineAuthent.add_Click($buttonClientMachineAuthent_Click)
	#
	# buttonIDMIFCollection
	#
	$buttonIDMIFCollection.Location = '13, 135'
	$buttonIDMIFCollection.Name = 'buttonIDMIFCollection'
	$buttonIDMIFCollection.Size = '185, 23'
	$buttonIDMIFCollection.TabIndex = 4
	$buttonIDMIFCollection.Text = 'IDMIF Collection'
	$buttonIDMIFCollection.UseCompatibleTextRendering = $True
	$buttonIDMIFCollection.UseVisualStyleBackColor = $True
	$buttonIDMIFCollection.add_Click($buttonIDMIFCollection_Click)
	#
	# buttonFileCollection
	#
	$buttonFileCollection.Location = '13, 110'
	$buttonFileCollection.Name = 'buttonFileCollection'
	$buttonFileCollection.Size = '185, 23'
	$buttonFileCollection.TabIndex = 3
	$buttonFileCollection.Text = 'File Collection'
	$buttonFileCollection.UseCompatibleTextRendering = $True
	$buttonFileCollection.UseVisualStyleBackColor = $True
	$buttonFileCollection.add_Click($buttonFileCollection_Click)
	#
	# buttonDiscoveryInventory
	#
	$buttonDiscoveryInventory.Location = '13, 85'
	$buttonDiscoveryInventory.Name = 'buttonDiscoveryInventory'
	$buttonDiscoveryInventory.Size = '185, 23'
	$buttonDiscoveryInventory.TabIndex = 2
	$buttonDiscoveryInventory.Text = 'Discovery Inventory'
	$buttonDiscoveryInventory.UseCompatibleTextRendering = $True
	$buttonDiscoveryInventory.UseVisualStyleBackColor = $True
	$buttonDiscoveryInventory.add_Click($buttonDiscoveryInventory_Click)
	#
	# buttonSoftwareInventory
	#
	$buttonSoftwareInventory.Location = '13, 60'
	$buttonSoftwareInventory.Name = 'buttonSoftwareInventory'
	$buttonSoftwareInventory.Size = '185, 23'
	$buttonSoftwareInventory.TabIndex = 1
	$buttonSoftwareInventory.Text = 'Software Inventory'
	$buttonSoftwareInventory.UseCompatibleTextRendering = $True
	$buttonSoftwareInventory.UseVisualStyleBackColor = $True
	$buttonSoftwareInventory.add_Click($buttonSoftwareInventory_Click)
	#
	# buttonHardwareInventory
	#
	$buttonHardwareInventory.Location = '13, 35'
	$buttonHardwareInventory.Name = 'buttonHardwareInventory'
	$buttonHardwareInventory.Size = '185, 23'
	$buttonHardwareInventory.TabIndex = 0
	$buttonHardwareInventory.Text = 'Hardware Inventory'
	$buttonHardwareInventory.UseCompatibleTextRendering = $True
	$buttonHardwareInventory.UseVisualStyleBackColor = $True
	$buttonHardwareInventory.add_Click($buttonHardwareInventory_Click)
	$formConfigurationManager.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formConfigurationManager.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formConfigurationManager.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formConfigurationManager.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formConfigurationManager.ShowDialog()

} #End Function

#Call the form
Show-ConfigurationManagerActions-popupwindow_psf | Out-Null
