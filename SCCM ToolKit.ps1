#requires -Version 3
#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: bf90a41d-22bb-4fce-9b3c-8f5e4d793ae6
# Source File: iNet-SCCMToolKit.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Form generated by:  PowerShell Studio 2019
     Generated on:       8/20/2019 6:27 AM
	 Logic by:	         Alan Newingham
	 Email: 			 alan.newingham@gmail.com
	 GitHub: 			 https://github.com/01000001-01001110
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2019
#>


#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Show-SCCMToolKit {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formSCCMToolKit = New-Object 'System.Windows.Forms.Form'
	$groupbox3 = New-Object 'System.Windows.Forms.GroupBox'
	$labelCCMCacheSize = New-Object 'System.Windows.Forms.Label'
	$labelCCMCache = New-Object 'System.Windows.Forms.Label'
	$labelFreeSpaceGB = New-Object 'System.Windows.Forms.Label'
	$labelDiskSizeGB = New-Object 'System.Windows.Forms.Label'
	$labelserialNumber = New-Object 'System.Windows.Forms.Label'
	$labelenvCOMPUTERNAME = New-Object 'System.Windows.Forms.Label'
	$labelMemory = New-Object 'System.Windows.Forms.Label'
	$labelSpaceAvailable = New-Object 'System.Windows.Forms.Label'
	$labelComputerName = New-Object 'System.Windows.Forms.Label'
	$labelHardDiskSize = New-Object 'System.Windows.Forms.Label'
	$groupbox2 = New-Object 'System.Windows.Forms.GroupBox'
	$buttonUninstallReinstall = New-Object 'System.Windows.Forms.Button'
	$buttonResetRepo = New-Object 'System.Windows.Forms.Button'
	$buttonSalvageRepo = New-Object 'System.Windows.Forms.Button'
	$buttonVerifyRepo = New-Object 'System.Windows.Forms.Button'
	$groupbox1 = New-Object 'System.Windows.Forms.GroupBox'
	$buttonCMTrace = New-Object 'System.Windows.Forms.Button'
	$buttonDeleteSCCM = New-Object 'System.Windows.Forms.Button'
	$buttonDelSCCMCache = New-Object 'System.Windows.Forms.Button'
	$buttonInstallSCCM = New-Object 'System.Windows.Forms.Button'
	$buttonSCCMLogs = New-Object 'System.Windows.Forms.Button'
	$buttonClientHealthEval = New-Object 'System.Windows.Forms.Button'
	$buttonRunMachinePolicy = New-Object 'System.Windows.Forms.Button'
	$buttonRestartConfigMan = New-Object 'System.Windows.Forms.Button'
	$labelSCCMToolKit012 = New-Object 'System.Windows.Forms.Label'
	$labelemailaddress = New-Object 'System.Windows.Forms.Label'
	$labelContact = New-Object 'System.Windows.Forms.Label'
	$richtextbox1 = New-Object 'System.Windows.Forms.RichTextBox'
	$menustrip1 = New-Object 'System.Windows.Forms.MenuStrip'
	$aboutToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	$Computer = $env:COMPUTERNAME
	$GetDiskInfo = Get-WmiObject Win32_logicaldisk -ComputerName $computer -Filter "DeviceID='C:'"
	$DiskSize = $([math]::Round($GetDiskInfo.Size/1GB))
	$FreeSpace = $([math]::Round($GetDiskInfo.FreeSpace/1GB))
	$SerialNumber = (Get-WmiObject win32_bios -ComputerName $Computer).SerialNumber
	$CCMCacheSize = Get-WmiObject -namespace root\ccm\SoftMgmtAgent -class CacheConfig
	$CCMCache = $CCMCacheSize.Size
	$formSCCMToolKit_Load={
		
	}
	function Show-AboutForm_psf
	{
		
		#----------------------------------------------
		#region Import the Assemblies
		#----------------------------------------------
		[void][reflection.assembly]::Load('System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
		[void][reflection.assembly]::Load('System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
		#endregion Import Assemblies
		
		#----------------------------------------------
		#region Generated Form Objects
		#----------------------------------------------
		[System.Windows.Forms.Application]::EnableVisualStyles()
		$formAboutTheAuthor = New-Object 'System.Windows.Forms.Form'
		$picturebox1 = New-Object 'System.Windows.Forms.PictureBox'
		$labelWrittenInPowerShellS = New-Object 'System.Windows.Forms.Label'
		$labelAlannewinghamgmailco = New-Object 'System.Windows.Forms.Label'
		$labelEmail = New-Object 'System.Windows.Forms.Label'
		$labelAlanNewingham = New-Object 'System.Windows.Forms.Label'
		$labelAuthor = New-Object 'System.Windows.Forms.Label'
		$buttonOK = New-Object 'System.Windows.Forms.Button'
		$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
		#endregion Generated Form Objects
		
		#----------------------------------------------
		# User Generated Script
		#----------------------------------------------
		
		$formAboutTheAuthor_Load = {
			#TODO: Initialize Form Controls here
			
		}
		
		# --End User Generated Script--
		#----------------------------------------------
		#region Generated Events
		#----------------------------------------------
		
		$Form_StateCorrection_Load =
		{
			#Correct the initial state of the form to prevent the .Net maximized form issue
			$formAboutTheAuthor.WindowState = $InitialFormWindowState
		}
		
		$Form_Cleanup_FormClosed =
		{
			#Remove all event handlers from the controls
			try
			{
				$formAboutTheAuthor.remove_Load($formAboutTheAuthor_Load)
				$formAboutTheAuthor.remove_Load($Form_StateCorrection_Load)
				$formAboutTheAuthor.remove_FormClosed($Form_Cleanup_FormClosed)
			}
			catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
		}
		#endregion Generated Events
		
		#----------------------------------------------
		#region Generated Form Code
		#----------------------------------------------
		$formAboutTheAuthor.SuspendLayout()
		$picturebox1.BeginInit()
		#
		# formAboutTheAuthor
		#
		$formAboutTheAuthor.Controls.Add($picturebox1)
		$formAboutTheAuthor.Controls.Add($labelWrittenInPowerShellS)
		$formAboutTheAuthor.Controls.Add($labelAlannewinghamgmailco)
		$formAboutTheAuthor.Controls.Add($labelEmail)
		$formAboutTheAuthor.Controls.Add($labelAlanNewingham)
		$formAboutTheAuthor.Controls.Add($labelAuthor)
		$formAboutTheAuthor.Controls.Add($buttonOK)
		$formAboutTheAuthor.AcceptButton = $buttonOK
		$formAboutTheAuthor.AutoScaleDimensions = '6, 13'
		$formAboutTheAuthor.AutoScaleMode = 'Font'
		$formAboutTheAuthor.ClientSize = '284, 262'
		$formAboutTheAuthor.FormBorderStyle = 'FixedDialog'
		$formAboutTheAuthor.MaximizeBox = $False
		$formAboutTheAuthor.MinimizeBox = $False
		$formAboutTheAuthor.Name = 'formAboutTheAuthor'
		$formAboutTheAuthor.StartPosition = 'CenterScreen'
		$formAboutTheAuthor.Text = 'About the Author'
		$formAboutTheAuthor.add_Load($formAboutTheAuthor_Load)
		#
		# picturebox1
		#
		#region Binary Data
		$picturebox1.Image = [System.Convert]::FromBase64String('
	R0lGODlhdAB0AIcAAAAAAAAAMwAAZgAAmQAAzAAA/wArAAArMwArZgArmQArzAAr/wBVAABVMwBV
	ZgBVmQBVzABV/wCAAACAMwCAZgCAmQCAzACA/wCqAACqMwCqZgCqmQCqzACq/wDVAADVMwDVZgDV
	mQDVzADV/wD/AAD/MwD/ZgD/mQD/zAD//zMAADMAMzMAZjMAmTMAzDMA/zMrADMrMzMrZjMrmTMr
	zDMr/zNVADNVMzNVZjNVmTNVzDNV/zOAADOAMzOAZjOAmTOAzDOA/zOqADOqMzOqZjOqmTOqzDOq
	/zPVADPVMzPVZjPVmTPVzDPV/zP/ADP/MzP/ZjP/mTP/zDP//2YAAGYAM2YAZmYAmWYAzGYA/2Yr
	AGYrM2YrZmYrmWYrzGYr/2ZVAGZVM2ZVZmZVmWZVzGZV/2aAAGaAM2aAZmaAmWaAzGaA/2aqAGaq
	M2aqZmaqmWaqzGaq/2bVAGbVM2bVZmbVmWbVzGbV/2b/AGb/M2b/Zmb/mWb/zGb//5kAAJkAM5kA
	ZpkAmZkAzJkA/5krAJkrM5krZpkrmZkrzJkr/5lVAJlVM5lVZplVmZlVzJlV/5mAAJmAM5mAZpmA
	mZmAzJmA/5mqAJmqM5mqZpmqmZmqzJmq/5nVAJnVM5nVZpnVmZnVzJnV/5n/AJn/M5n/Zpn/mZn/
	zJn//8wAAMwAM8wAZswAmcwAzMwA/8wrAMwrM8wrZswrmcwrzMwr/8xVAMxVM8xVZsxVmcxVzMxV
	/8yAAMyAM8yAZsyAmcyAzMyA/8yqAMyqM8yqZsyqmcyqzMyq/8zVAMzVM8zVZszVmczVzMzV/8z/
	AMz/M8z/Zsz/mcz/zMz///8AAP8AM/8AZv8Amf8AzP8A//8rAP8rM/8rZv8rmf8rzP8r//9VAP9V
	M/9VZv9Vmf9VzP9V//+AAP+AM/+AZv+Amf+AzP+A//+qAP+qM/+qZv+qmf+qzP+q///VAP/VM//V
	Zv/Vmf/VzP/V////AP//M///Zv//mf//zP///wAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEB
	AAAh+QQBAAD8ACwAAAAAdAB0AAAI/wABCBxIsKDBg/sS7jvIsKDChxAjJiT4kKLChhgzatwIoCJH
	hxJDehQ4suPFjyhTIjypUqTLhQNLllRJ8+NMmy9DWpwYk2XNhjl19oy4EybJoDyPJjXpsijSpU6f
	Rl0qU+pQo0xFTg3K8CnErUW3ClWKNafYl129+hyb9SzRq27LqoUKN2PVt2TD1sXI9i7WtHTz2l0r
	Ua/gw0AL7207ODBjvoTxPp5802DfyH9XOq4MkqpixH41Xvbs2HDnzJYxA5YrWbRVxKtjN2aNmvLn
	jV5Ny05dejFnv5xXm128+7Rr0rWB+zzOlbjm5Muf6/4JOjpv2syLFw9OM/Ts6de1S/93Tt07ZOTZ
	x5/HTt04efew1Z/O/d584tZXlSMV/nqyae5k/XbbXJsRCJ5tvQVoXVb6NXcdffFVlyCDC46mVnv3
	sSehhghyiOGHvqkWInoj1gZieSJu+F+K/p2IoX0wsmjfiwQOp+B++bEYV408opUjjjd6+GOPRNpI
	IZBHChlkkUwOaOCQBzYpmZEAughfiy3dFteBVspXJXMCNvVel+GNiRN+S+pI5nYLomSheBuGyeOa
	6ZVpZ5L8zUXnd/KtiGaSEO7ZZ32YyVmjoLhpWSKYbS46aJp/suWniVDyGSGWgCoaJJsTSuplhaAi
	CdannWp6pZx5ajVbg55eWiWqZ1L/+mChPt7JJaET3jorckZG2airv17JKK+1CmsmsLkem+iUtEba
	36SBfllpnKYGCm1/0m5aYquZOkssktniuW21z44LbrMcGhrspKmu+SauX8Xq6580MkvirrKeGmq8
	Xb6LLL/LKikuiIeS2etzr+67o6n1qrpewgV+66CVB+Nbp756Glxsu5Yaa/GQEKdLrr0XxspqsDF6
	C3DBHFnILbvTzoduxRmeXOq9A8ssMc1FLpzsneruPPOTkALsppraFu3zxNbKC6/NtPUMMsMdBx21
	kzhfzDPRHR59c77Xqhwt0hlerPXGU4upotPreX212NiSDWe3DusMdnsuxy202nYj9pr3uXvXPeqe
	fzM9NN+D01k4lejOO7HZHTtuteRot822xzknbvXLj5bdObf+2s25rZE/vS68MLeMtcBuh8wp6wjL
	ePrDKCvsqOok6xqw66TC/vHaKJIsJXQ/d73q6osTOffrw65c7PCw4u473VumPWfnzB8vPNXB3610
	7BFPH67brY9s9O2e9zs79eATL/765JtsfvSYUg6487n3nmqDYRu+fdboq17SOjS2/wlsRtbT3OHq
	VjjH2Q9/ENQdAr9Hu+KVL3+W+9foMncixn3tgSEbn/wwmD5M0SxxLvJgvqA2uZglj28TxNjjXIi8
	BYaOd0Vr4QBfyHFAuZlLcDQ04NJStsLGme6D2juf9M5GQhRiL4HdqZ3EHgg5fInwUv2jYumsCD/r
	8RCHopOi+5qnwhMeUYmYC6HeZkg6CpZQglxrWhvZl0HMpdCIOTRfw3QXvx1yjY9V62Idv6hHvPkw
	S1P0YiG7V5SAAAA7')
		#endregion
		$picturebox1.Location = '84, 41'
		$picturebox1.Name = 'picturebox1'
		$picturebox1.Size = '116, 116'
		$picturebox1.TabIndex = 6
		$picturebox1.TabStop = $False
		#
		# labelWrittenInPowerShellS
		#
		$labelWrittenInPowerShellS.AutoSize = $True
		$labelWrittenInPowerShellS.Location = '15, 232'
		$labelWrittenInPowerShellS.Name = 'labelWrittenInPowerShellS'
		$labelWrittenInPowerShellS.Size = '176, 17'
		$labelWrittenInPowerShellS.TabIndex = 5
		$labelWrittenInPowerShellS.Text = 'Written in PowerShell Studio 2019'
		$labelWrittenInPowerShellS.UseCompatibleTextRendering = $True
		#
		# labelAlannewinghamgmailco
		#
		$labelAlannewinghamgmailco.AutoSize = $True
		$labelAlannewinghamgmailco.Location = '89, 207'
		$labelAlannewinghamgmailco.Name = 'labelAlannewinghamgmailco'
		$labelAlannewinghamgmailco.Size = '150, 17'
		$labelAlannewinghamgmailco.TabIndex = 4
		$labelAlannewinghamgmailco.Text = 'alan.newingham@gmail.com'
		$labelAlannewinghamgmailco.UseCompatibleTextRendering = $True
		#
		# labelEmail
		#
		$labelEmail.AutoSize = $True
		$labelEmail.Location = '46, 207'
		$labelEmail.Name = 'labelEmail'
		$labelEmail.Size = '36, 17'
		$labelEmail.TabIndex = 3
		$labelEmail.Text = 'Email:'
		$labelEmail.UseCompatibleTextRendering = $True
		#
		# labelAlanNewingham
		#
		$labelAlanNewingham.AutoSize = $True
		$labelAlanNewingham.Location = '121, 190'
		$labelAlanNewingham.Name = 'labelAlanNewingham'
		$labelAlanNewingham.Size = '90, 17'
		$labelAlanNewingham.TabIndex = 2
		$labelAlanNewingham.Text = 'Alan Newingham'
		$labelAlanNewingham.UseCompatibleTextRendering = $True
		#
		# labelAuthor
		#
		$labelAuthor.AutoSize = $True
		$labelAuthor.Location = '73, 190'
		$labelAuthor.Name = 'labelAuthor'
		$labelAuthor.Size = '41, 17'
		$labelAuthor.TabIndex = 1
		$labelAuthor.Text = 'Author:'
		$labelAuthor.UseCompatibleTextRendering = $True
		#
		# buttonOK
		#
		$buttonOK.Anchor = 'Bottom, Right'
		$buttonOK.DialogResult = 'OK'
		$buttonOK.Location = '197, 227'
		$buttonOK.Name = 'buttonOK'
		$buttonOK.Size = '75, 23'
		$buttonOK.TabIndex = 0
		$buttonOK.Text = '&OK'
		$buttonOK.UseCompatibleTextRendering = $True
		$buttonOK.UseVisualStyleBackColor = $True
		$picturebox1.EndInit()
		$formAboutTheAuthor.ResumeLayout()
		#endregion Generated Form Code
		
		#----------------------------------------------
		
		#Save the initial state of the form
		$InitialFormWindowState = $formAboutTheAuthor.WindowState
		#Init the OnLoad event to correct the initial state of the form
		$formAboutTheAuthor.add_Load($Form_StateCorrection_Load)
		#Clean up the control events
		$formAboutTheAuthor.add_FormClosed($Form_Cleanup_FormClosed)
		#Show the Form
		return $formAboutTheAuthor.ShowDialog()
		
	}
	function rebuildWMI
	{
		function DisableService([System.ServiceProcess.ServiceController]$svc)
		{
			Set-Service -Name $svc.Name -StartupType Disabled
		}
		
		function EnableServiceAuto([System.ServiceProcess.ServiceController]$svc)
		{
			Set-Service -Name $svc.Name -StartupType Automatic
		}
		
		function StopService([System.ServiceProcess.ServiceController]$svc)
		{
			[string]$dep = ([string]::Empty)
			
			foreach ($depsvc in $svc.DependentServices)
			{ $dep += $depsvc.DisplayName + ", " }
			
			$richtextbox1.Text += "`nStopping $($svc.DisplayName) and its dependent services ($dep)"
			
			$svc.Stop()
			
			$svc.WaitForStatus([System.ServiceProcess.ServiceControllerStatus]::Stopped)
			
			$richtextbox1.Text += "`nStopped $($svc.DisplayName)"
		}
		
		function StartService([System.ServiceProcess.ServiceController]$svc, [bool]$handleDependentServices)
		{
			if ($handleDependentServices)
			{
				$richtextbox1.Text += "`nStarting $($svc.DisplayName) and its dependent services"
			}
			
			else
			{
				$richtextbox1.Text += "`nStarting $($svc.DisplayName)"
			}
			
			if (!$svc.Status -ne [System.ServiceProcess.ServiceControllerStatus]::Running)
			{
				try
				{
					$svc.Start()
					
					$svc.WaitForStatus([System.ServiceProcess.ServiceControllerStatus]::Running)
				}
				
				catch { }
			}
			
			$richtextbox1.Text += "`nStarted $($svc.DisplayName)"
			
			if ($handleDependentServices)
			{
				[System.ServiceProcess.ServiceController]$depsvc = $null;
				
				foreach ($depsvc in $svc.DependentServices)
				{
					if ($depsvc.StartType -eq [System.ServiceProcess.ServiceStartMode]::Automatic)
					{ StartService $depsvc $handleDependentServices }
				}
			}
		}
		
		function RegSvr32([string]$path)
		{
			$richtextbox1.Text += "`nRegistering $path"
			
			regsvr32.exe $path /s
		}
		
		function RegisterMof([System.IO.FileSystemInfo]$item)
		{
			[bool]$register = $true
			
			$richtextbox1.Text += "`nInspecting: $($item.FullName)"
			
			if ($item.Name.ToLowerInvariant().Contains('uninstall'))
			{
				$register = $false
				$richtextbox1.Text += "`nSkipping - uninstall file: $($item.FullName)"
			}
			
			elseif ($item.Name.ToLowerInvariant().Contains('remove'))
			{
				$register = $false
				$richtextbox1.Text += "`nSkipping - remove file: $($item.FullName)"
			}
			
			else
			{
				$txt = Get-Content $item.FullName
				
				if ($txt.Contains('#pragma autorecover'))
				{
					$register = $false
					$richtextbox1.Text += "`nSkipping - autorecover: $($item.FullName)"
				}
				
				elseif ($txt.Contains('#pragma deleteinstance'))
				{
					$register = $false
					$richtextbox1.Text += "`nSkipping - deleteinstance: $($item.FullName)"
				}
				
				elseif ($txt.Contains('#pragma deleteclass'))
				{
					$register = $false
					$richtextbox1.Text += "`nSkipping - deleteclass: $($item.FullName)"
				}
			}
			
			if ($register)
			{
				$richtextbox1.Text += "`nRegistering $($item.FullName)"
				mofcomp $item.FullName
			}
		}
		
		function HandleFSO([System.IO.FileSystemInfo]$item, [string]$targetExt)
		{
			if ($item.Extension -ne [string]::Empty)
			{
				if ($targetExt -eq 'dll')
				{
					if ($item.Extension.ToLowerInvariant() -eq '.dll')
					{ RegSvr32 $item.FullName }
				}
				
				elseif ($targetExt -eq 'mof')
				{
					if (($item.Extension.ToLowerInvariant() -eq '.mof') -or ($item.Extension.ToLowerInvariant() -eq '.mfl'))
					{ RegisterMof $item }
				}
			}
		}
		
		# get Winmgmt service
		[System.ServiceProcess.ServiceController]$wmisvc = Get-Service 'winmgmt'
		
		# disable winmgmt service
		DisableService $wmisvc
		
		# stop winmgmt service
		StopService $wmisvc
		
		# get wbem folder
		[string]$wbempath = [Environment]::ExpandEnvironmentVariables("%windir%\system32\wbem")
		
		[System.IO.FileSystemInfo[]]$itemlist = Get-ChildItem $wbempath -Recurse | Where-Object { $_.FullName.Contains('AutoRecover') -ne $true }
		
		[System.IO.FileSystemInfo]$item = $null
		
		# walk dlls
		foreach ($item in $itemlist)
		{ HandleFSO $item 'dll' }
		
		# call /regserver method on WMI private server executable
		wmiprvse /regserver
		
		# call /resetrepository method on WinMgmt service executable
		winmgmt /resetrepository
		
		# enable winmgmt service
		EnableServiceAuto $wmisvc
		
		# start winmgmt service
		StartService $wmisvc $true
		
		# walk MOF / MFLs
		foreach ($item in $itemlist)
		{ HandleFSO $item 'mof' }
	}
	function ReloadSccmClient
	{
		Invoke-WMIMethod -ComputerName $env:COMPUTERNAME -Namespace root\ccm -Class SMS_CLIENT -Name TriggerSchedule "{00000000-0000-0000-0000-000000000021}"
		Invoke-WMIMethod -ComputerName $env:COMPUTERNAME -Namespace root\ccm -Class SMS_CLIENT -Name TriggerSchedule "{00000000-0000-0000-0000-000000000022}"
		$richtextbox1.Text += "`nRan Machine Policy Updates"
	}
	function RestartConfigMan
	{
		cmd /c "%SystemRoot%\ccm\ccmrestart.exe"
		$richtextbox1.Text += "`nConfiguration Manager Is Reloading."
	}
	function ClientHealthEval
	{
		$richtextbox1.Text += "`nRan Client Health Evaluation."
		cmd /c "%SystemRoot%\ccm\ccmeval.exe"
	}
	function BackupSccmLogs
	{
		Robocopy "C:\Windows\CCM\Logs" C:\users\$env:UserName\Desktop\SccmLogs *.* /e
		$richtextbox1.Text += $("`nSCCM Logs backed up." | Out-String)
	}
	function DeleteCache
	{
		Remove-Item -path C:\Windows\ccmcache\* -Force -Recurse
		$richtextbox1.Text += "`nDeleted SCCM Cache."
	}
	function DeleteSCCM
	{
		$richtextbox1.Text += "`nUninstalling SCCM"
		cmd /c "%windir%\ccmsetup\ccmsetup.exe /uninstall"
		
		# Stop Services
		Stop-Service -Name ccmsetup -Force -ErrorAction SilentlyContinue
		Stop-Service -Name CcmExec -Force
		Stop-Service -Name smstsmgr -Force
		Stop-Service -Name CmRcService -Force
		
		# Remove WMI Namespaces
		Get-WmiObject -Query "SELECT * FROM __Namespace WHERE Name='ccm'" -Namespace root | Remove-WmiObject
		Get-WmiObject -Query "SELECT * FROM __Namespace WHERE Name='ms'" -Namespace root\cimv2 | Remove-WmiObject
		
		# Remove Services from Registry
		$MyReg = "HKLM:\SYSTEM\CurrentControlSet\Services"
		Remove-Item -Path $MyReg\CCMSetup -Force -Recurse -ErrorAction SilentlyContinue
		Remove-Item -Path $MyReg\CcmExec -Force -Recurse -ErrorAction SilentlyContinue
		Remove-Item -Path $MyReg\smstsmgr -Force -Recurse -ErrorAction SilentlyContinue
		Remove-Item -Path $MyReg\CmRcService -Force -Recurse -ErrorAction SilentlyContinue
		
		# Remove SCCM Client from Registry
		$MyPath = "HKLM:\SOFTWARE\Microsoft"
		Remove-Item -Path $MyPath\CCM -Force -Recurse -ErrorAction SilentlyContinue
		Remove-Item -Path $MyPath\CCMSetup -Force -Recurse -ErrorAction SilentlyContinue
		Remove-Item -Path $MyPath\SMS -Force -Recurse -ErrorAction SilentlyContinue
		
		# Remove Folders and Files
		$MyDir = $env:WinDir
		Remove-Item -Path $MyDir\CCM -Force -Recurse -ErrorAction SilentlyContinue
		Remove-Item -Path $MyDir\ccmsetup -Force -Recurse -ErrorAction SilentlyContinue
		Remove-Item -Path $MyDir\ccmcache -Force -Recurse -ErrorAction SilentlyContinue
		Remove-Item -Path $MyDir\SMSCFG.ini -Force -ErrorAction SilentlyContinue
		Remove-Item -Path $MyDir\SMS*.mif -Force -ErrorAction SilentlyContinue
		$richtextbox1.Text += "`nCompleted Uninstalling SCCM."
	}
	function cmTrace
	{
		cmd /c "C:\WINDOWS\CCM\CMTrace.exe"
		$richtextbox1.Text += "`nStarted CMTrace."
	}
	function CcmRestart
	{
		$salvageRepo = (winmgmt /salvagerepository) | Out-String
		$richtextbox1.Text += $salvageRepo
	}
	function CcmRepair
	{
		$verifyRepo = (winmgmt /verifyrepository) | Out-String
		$richtextbox1.Text += $verifyRepo
	}
	
	function ResetRepo
	{
		cmd /c "net stop winmgmt /y"
		$ResetRepo1 = (winmgmt /resetRepository) | Out-String
		$richtextbox1.Text += $ResetRepo1
	}
	function InstallSCCM
	{
		taskmgr
		cmd /c 'MD C:\Windows\CCM'
		Invoke-Item c:\windows\ccmsetup\
		cmd /c 'copy "\\dbfsvs02.erau.edu\itdb\Software\SCCM\Client\ccmsetup\ccmsetup.exe" "C:\Windows\CCM\ccmsetup.exe" /Z /Y'
		$ps.StartInfo.Filename = "C:\windows\CCM\ccmsetup.exe"
		$ps.StartInfo.Arguments = " /forceinstall"
		$ps.start()
		$ps.WaitForExit()
		$richtextbox1.Text += "`nStarted CCM Setup."
	}
	
	$buttonRestartConfigMan_Click={
		RestartConfigMan
	}
	
	$buttonRunMachinePolicy_Click={
		ReloadSccmClient
	}
	
	$buttonClientHealthEval_Click={
		ClientHealthEval
	}
	
	$buttonSCCMLogs_Click={
		BackupSccmLogs
	}
	
	$buttonInstallSCCM_Click={
		InstallSCCM
	}
	
	$buttonDelSCCMCache_Click={
		DeleteCache
	}
	
	$buttonDeleteSCCM_Click={
		DeleteSCCM
	}
	
	$buttonSalvageRepo_Click={
		CcmRestart
	}
	
	$buttonVerifyRepo_Click={
		CcmRepair
	}
	
	$buttonResetRepo_Click={
		ResetRepo
	}
	
	$buttonUninstallReinstall_Click={
		rebuildWMI
	}
	
	$labelserialNumber_Click={
		#TODO: Place custom script here
		
	}
	
	$aboutToolStripMenuItem_Click={
		#TODO: Place custom script here
		Show-AboutForm_psf
	}
	
	$buttonCMTrace_Click={
		#TODO: Place custom script here
		cmTrace
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formSCCMToolKit.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$labelserialNumber.remove_Click($labelserialNumber_Click)
			$buttonUninstallReinstall.remove_Click($buttonUninstallReinstall_Click)
			$buttonResetRepo.remove_Click($buttonResetRepo_Click)
			$buttonSalvageRepo.remove_Click($buttonSalvageRepo_Click)
			$buttonVerifyRepo.remove_Click($buttonVerifyRepo_Click)
			$buttonCMTrace.remove_Click($buttonCMTrace_Click)
			$buttonDeleteSCCM.remove_Click($buttonDeleteSCCM_Click)
			$buttonDelSCCMCache.remove_Click($buttonDelSCCMCache_Click)
			$buttonInstallSCCM.remove_Click($buttonInstallSCCM_Click)
			$buttonSCCMLogs.remove_Click($buttonSCCMLogs_Click)
			$buttonClientHealthEval.remove_Click($buttonClientHealthEval_Click)
			$buttonRunMachinePolicy.remove_Click($buttonRunMachinePolicy_Click)
			$buttonRestartConfigMan.remove_Click($buttonRestartConfigMan_Click)
			$formSCCMToolKit.remove_Load($formSCCMToolKit_Load)
			$aboutToolStripMenuItem.remove_Click($aboutToolStripMenuItem_Click)
			$formSCCMToolKit.remove_Load($Form_StateCorrection_Load)
			$formSCCMToolKit.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formSCCMToolKit.SuspendLayout()
	$groupbox3.SuspendLayout()
	$groupbox2.SuspendLayout()
	$groupbox1.SuspendLayout()
	$menustrip1.SuspendLayout()
	#
	# formSCCMToolKit
	#
	$formSCCMToolKit.Controls.Add($groupbox3)
	$formSCCMToolKit.Controls.Add($groupbox2)
	$formSCCMToolKit.Controls.Add($groupbox1)
	$formSCCMToolKit.Controls.Add($labelSCCMToolKit012)
	$formSCCMToolKit.Controls.Add($labelemailaddress)
	$formSCCMToolKit.Controls.Add($labelContact)
	$formSCCMToolKit.Controls.Add($richtextbox1)
	$formSCCMToolKit.Controls.Add($menustrip1)
	$formSCCMToolKit.AutoScaleDimensions = '6, 13'
	$formSCCMToolKit.AutoScaleMode = 'Font'
	$formSCCMToolKit.ClientSize = '384, 461'
	$formSCCMToolKit.MainMenuStrip = $menustrip1
	$formSCCMToolKit.Name = 'formSCCMToolKit'
	$formSCCMToolKit.Text = 'SCCM ToolKit'
	$formSCCMToolKit.add_Load($formSCCMToolKit_Load)
	#
	# groupbox3
	#
	$groupbox3.Controls.Add($labelCCMCacheSize)
	$groupbox3.Controls.Add($labelCCMCache)
	$groupbox3.Controls.Add($labelFreeSpaceGB)
	$groupbox3.Controls.Add($labelDiskSizeGB)
	$groupbox3.Controls.Add($labelserialNumber)
	$groupbox3.Controls.Add($labelenvCOMPUTERNAME)
	$groupbox3.Controls.Add($labelMemory)
	$groupbox3.Controls.Add($labelSpaceAvailable)
	$groupbox3.Controls.Add($labelComputerName)
	$groupbox3.Controls.Add($labelHardDiskSize)
	$groupbox3.Location = '155, 207'
	$groupbox3.Name = 'groupbox3'
	$groupbox3.Size = '217, 92'
	$groupbox3.TabIndex = 10
	$groupbox3.TabStop = $False
	$groupbox3.Text = 'System Info:'
	$groupbox3.UseCompatibleTextRendering = $True
	#
	# labelCCMCacheSize
	#
	$labelCCMCacheSize.AutoSize = $True
	$labelCCMCacheSize.Location = '104, 75'
	$labelCCMCacheSize.Name = 'labelCCMCacheSize'
	$labelCCMCacheSize.Size = '69, 17'
	$labelCCMCacheSize.TabIndex = 14
	$labelCCMCacheSize.Text = "$CCMCache"
	$labelCCMCacheSize.UseCompatibleTextRendering = $True
	#
	# labelCCMCache
	#
	$labelCCMCache.AutoSize = $True
	$labelCCMCache.Location = '6, 75'
	$labelCCMCache.Name = 'labelCCMCache'
	$labelCCMCache.Size = '69, 17'
	$labelCCMCache.TabIndex = 11
	$labelCCMCache.Text = 'CCM Cache:'
	$labelCCMCache.UseCompatibleTextRendering = $True
	#
	# labelFreeSpaceGB
	#
	$labelFreeSpaceGB.AutoSize = $True
	$labelFreeSpaceGB.Location = '104, 60'
	$labelFreeSpaceGB.Name = 'labelFreeSpaceGB'
	$labelFreeSpaceGB.Size = '85, 17'
	$labelFreeSpaceGB.TabIndex = 13
	$labelFreeSpaceGB.Text = "$FreeSpace GB"
	$labelFreeSpaceGB.UseCompatibleTextRendering = $True
	#
	# labelDiskSizeGB
	#
	$labelDiskSizeGB.AutoSize = $True
	$labelDiskSizeGB.Location = '104, 46'
	$labelDiskSizeGB.Name = 'labelDiskSizeGB'
	$labelDiskSizeGB.Size = '74, 17'
	$labelDiskSizeGB.TabIndex = 12
	$labelDiskSizeGB.Text = "$DiskSize GB"
	$labelDiskSizeGB.UseCompatibleTextRendering = $True
	#
	# labelserialNumber
	#
	$labelserialNumber.AutoSize = $True
	$labelserialNumber.Location = '104, 31'
	$labelserialNumber.Name = 'labelserialNumber'
	$labelserialNumber.Size = '78, 17'
	$labelserialNumber.TabIndex = 11
	$labelserialNumber.Text = "$serialNumber"
	$labelserialNumber.UseCompatibleTextRendering = $True
	$labelserialNumber.add_Click($labelserialNumber_Click)
	#
	# labelenvCOMPUTERNAME
	#
	$labelenvCOMPUTERNAME.AutoSize = $True
	$labelenvCOMPUTERNAME.Location = '104, 16'
	$labelenvCOMPUTERNAME.Name = 'labelenvCOMPUTERNAME'
	$labelenvCOMPUTERNAME.Size = '129, 17'
	$labelenvCOMPUTERNAME.TabIndex = 10
	$labelenvCOMPUTERNAME.Text = "$env:COMPUTERNAME"
	$labelenvCOMPUTERNAME.UseCompatibleTextRendering = $True
	#
	# labelMemory
	#
	$labelMemory.AutoSize = $True
	$labelMemory.Location = '6, 31'
	$labelMemory.Name = 'labelMemory'
	$labelMemory.Size = '80, 17'
	$labelMemory.TabIndex = 7
	$labelMemory.Text = 'Serial Number:'
	$labelMemory.UseCompatibleTextRendering = $True
	#
	# labelSpaceAvailable
	#
	$labelSpaceAvailable.AutoSize = $True
	$labelSpaceAvailable.Location = '6, 60'
	$labelSpaceAvailable.Name = 'labelSpaceAvailable'
	$labelSpaceAvailable.Size = '89, 17'
	$labelSpaceAvailable.TabIndex = 9
	$labelSpaceAvailable.Text = 'Space Available:'
	$labelSpaceAvailable.UseCompatibleTextRendering = $True
	#
	# labelComputerName
	#
	$labelComputerName.AutoSize = $True
	$labelComputerName.Location = '6, 16'
	$labelComputerName.Name = 'labelComputerName'
	$labelComputerName.Size = '93, 17'
	$labelComputerName.TabIndex = 6
	$labelComputerName.Text = 'Computer Name: '
	$labelComputerName.UseCompatibleTextRendering = $True
	#
	# labelHardDiskSize
	#
	$labelHardDiskSize.AutoSize = $True
	$labelHardDiskSize.Location = '6, 46'
	$labelHardDiskSize.Name = 'labelHardDiskSize'
	$labelHardDiskSize.Size = '82, 17'
	$labelHardDiskSize.TabIndex = 8
	$labelHardDiskSize.Text = 'Hard Disk Size:'
	$labelHardDiskSize.UseCompatibleTextRendering = $True
	#
	# groupbox2
	#
	$groupbox2.Controls.Add($buttonUninstallReinstall)
	$groupbox2.Controls.Add($buttonResetRepo)
	$groupbox2.Controls.Add($buttonSalvageRepo)
	$groupbox2.Controls.Add($buttonVerifyRepo)
	$groupbox2.Location = '245, 41'
	$groupbox2.Name = 'groupbox2'
	$groupbox2.Size = '127, 138'
	$groupbox2.TabIndex = 5
	$groupbox2.TabStop = $False
	$groupbox2.Text = 'WMI'
	$groupbox2.UseCompatibleTextRendering = $True
	#
	# buttonUninstallReinstall
	#
	$buttonUninstallReinstall.BackColor = 'Tomato'
	$buttonUninstallReinstall.Location = '7, 109'
	$buttonUninstallReinstall.Name = 'buttonUninstallReinstall'
	$buttonUninstallReinstall.Size = '112, 23'
	$buttonUninstallReinstall.TabIndex = 3
	$buttonUninstallReinstall.Text = 'Uninstall/Reinstall'
	$buttonUninstallReinstall.UseCompatibleTextRendering = $True
	$buttonUninstallReinstall.UseVisualStyleBackColor = $False
	$buttonUninstallReinstall.add_Click($buttonUninstallReinstall_Click)
	#
	# buttonResetRepo
	#
	$buttonResetRepo.Location = '7, 77'
	$buttonResetRepo.Name = 'buttonResetRepo'
	$buttonResetRepo.Size = '112, 23'
	$buttonResetRepo.TabIndex = 2
	$buttonResetRepo.Text = 'Reset Repo'
	$buttonResetRepo.UseCompatibleTextRendering = $True
	$buttonResetRepo.UseVisualStyleBackColor = $True
	$buttonResetRepo.add_Click($buttonResetRepo_Click)
	#
	# buttonSalvageRepo
	#
	$buttonSalvageRepo.Location = '7, 48'
	$buttonSalvageRepo.Name = 'buttonSalvageRepo'
	$buttonSalvageRepo.Size = '112, 23'
	$buttonSalvageRepo.TabIndex = 0
	$buttonSalvageRepo.Text = 'Salvage Repo'
	$buttonSalvageRepo.UseCompatibleTextRendering = $True
	$buttonSalvageRepo.UseVisualStyleBackColor = $True
	$buttonSalvageRepo.add_Click($buttonSalvageRepo_Click)
	#
	# buttonVerifyRepo
	#
	$buttonVerifyRepo.Location = '7, 19'
	$buttonVerifyRepo.Name = 'buttonVerifyRepo'
	$buttonVerifyRepo.Size = '112, 23'
	$buttonVerifyRepo.TabIndex = 1
	$buttonVerifyRepo.Text = 'Verify Repo'
	$buttonVerifyRepo.UseCompatibleTextRendering = $True
	$buttonVerifyRepo.UseVisualStyleBackColor = $True
	$buttonVerifyRepo.add_Click($buttonVerifyRepo_Click)
	#
	# groupbox1
	#
	$groupbox1.Controls.Add($buttonCMTrace)
	$groupbox1.Controls.Add($buttonDeleteSCCM)
	$groupbox1.Controls.Add($buttonDelSCCMCache)
	$groupbox1.Controls.Add($buttonInstallSCCM)
	$groupbox1.Controls.Add($buttonSCCMLogs)
	$groupbox1.Controls.Add($buttonClientHealthEval)
	$groupbox1.Controls.Add($buttonRunMachinePolicy)
	$groupbox1.Controls.Add($buttonRestartConfigMan)
	$groupbox1.Location = '13, 41'
	$groupbox1.Name = 'groupbox1'
	$groupbox1.Size = '127, 258'
	$groupbox1.TabIndex = 4
	$groupbox1.TabStop = $False
	$groupbox1.Text = 'SCCM'
	$groupbox1.UseCompatibleTextRendering = $True
	#
	# buttonCMTrace
	#
	$buttonCMTrace.Location = '7, 228'
	$buttonCMTrace.Name = 'buttonCMTrace'
	$buttonCMTrace.Size = '112, 23'
	$buttonCMTrace.TabIndex = 8
	$buttonCMTrace.Text = 'CMTrace'
	$buttonCMTrace.UseCompatibleTextRendering = $True
	$buttonCMTrace.UseVisualStyleBackColor = $True
	$buttonCMTrace.add_Click($buttonCMTrace_Click)
	#
	# buttonDeleteSCCM
	#
	$buttonDeleteSCCM.BackColor = 'Tomato'
	$buttonDeleteSCCM.Location = '7, 198'
	$buttonDeleteSCCM.Name = 'buttonDeleteSCCM'
	$buttonDeleteSCCM.Size = '112, 23'
	$buttonDeleteSCCM.TabIndex = 7
	$buttonDeleteSCCM.Text = 'Delete SCCM'
	$buttonDeleteSCCM.UseCompatibleTextRendering = $True
	$buttonDeleteSCCM.UseVisualStyleBackColor = $False
	$buttonDeleteSCCM.add_Click($buttonDeleteSCCM_Click)
	#
	# buttonDelSCCMCache
	#
	$buttonDelSCCMCache.BackColor = 'Tomato'
	$buttonDelSCCMCache.Location = '7, 169'
	$buttonDelSCCMCache.Name = 'buttonDelSCCMCache'
	$buttonDelSCCMCache.Size = '112, 23'
	$buttonDelSCCMCache.TabIndex = 5
	$buttonDelSCCMCache.Text = 'Del SCCM Cache'
	$buttonDelSCCMCache.UseCompatibleTextRendering = $True
	$buttonDelSCCMCache.UseVisualStyleBackColor = $False
	$buttonDelSCCMCache.add_Click($buttonDelSCCMCache_Click)
	#
	# buttonInstallSCCM
	#
	$buttonInstallSCCM.Location = '7, 140'
	$buttonInstallSCCM.Name = 'buttonInstallSCCM'
	$buttonInstallSCCM.Size = '112, 23'
	$buttonInstallSCCM.TabIndex = 4
	$buttonInstallSCCM.Text = 'Install SCCM'
	$buttonInstallSCCM.UseCompatibleTextRendering = $True
	$buttonInstallSCCM.UseVisualStyleBackColor = $True
	$buttonInstallSCCM.add_Click($buttonInstallSCCM_Click)
	#
	# buttonSCCMLogs
	#
	$buttonSCCMLogs.Location = '7, 110'
	$buttonSCCMLogs.Name = 'buttonSCCMLogs'
	$buttonSCCMLogs.Size = '112, 23'
	$buttonSCCMLogs.TabIndex = 3
	$buttonSCCMLogs.Text = 'SCCM Logs'
	$buttonSCCMLogs.UseCompatibleTextRendering = $True
	$buttonSCCMLogs.UseVisualStyleBackColor = $True
	$buttonSCCMLogs.add_Click($buttonSCCMLogs_Click)
	#
	# buttonClientHealthEval
	#
	$buttonClientHealthEval.Location = '7, 80'
	$buttonClientHealthEval.Name = 'buttonClientHealthEval'
	$buttonClientHealthEval.Size = '112, 23'
	$buttonClientHealthEval.TabIndex = 2
	$buttonClientHealthEval.Text = 'Client Health Eval'
	$buttonClientHealthEval.UseCompatibleTextRendering = $True
	$buttonClientHealthEval.UseVisualStyleBackColor = $True
	$buttonClientHealthEval.add_Click($buttonClientHealthEval_Click)
	#
	# buttonRunMachinePolicy
	#
	$buttonRunMachinePolicy.Location = '7, 50'
	$buttonRunMachinePolicy.Name = 'buttonRunMachinePolicy'
	$buttonRunMachinePolicy.Size = '112, 23'
	$buttonRunMachinePolicy.TabIndex = 1
	$buttonRunMachinePolicy.Text = 'Run Machine Policy'
	$buttonRunMachinePolicy.UseCompatibleTextRendering = $True
	$buttonRunMachinePolicy.UseVisualStyleBackColor = $True
	$buttonRunMachinePolicy.add_Click($buttonRunMachinePolicy_Click)
	#
	# buttonRestartConfigMan
	#
	$buttonRestartConfigMan.Location = '7, 20'
	$buttonRestartConfigMan.Name = 'buttonRestartConfigMan'
	$buttonRestartConfigMan.Size = '112, 23'
	$buttonRestartConfigMan.TabIndex = 0
	$buttonRestartConfigMan.Text = 'Restart Config Man'
	$buttonRestartConfigMan.UseCompatibleTextRendering = $True
	$buttonRestartConfigMan.UseVisualStyleBackColor = $True
	$buttonRestartConfigMan.add_Click($buttonRestartConfigMan_Click)
	#
	# labelSCCMToolKit012
	#
	$labelSCCMToolKit012.AutoSize = $True
	$labelSCCMToolKit012.Location = '139, 24'
	$labelSCCMToolKit012.Name = 'labelSCCMToolKit012'
	$labelSCCMToolKit012.Size = '104, 17'
	$labelSCCMToolKit012.TabIndex = 3
	$labelSCCMToolKit012.Text = 'SCCM ToolKit 0.1.2'
	$labelSCCMToolKit012.UseCompatibleTextRendering = $True
	#
	# labelemailaddress
	#
	$labelemailaddress.AutoSize = $True
	$labelemailaddress.Location = '176, 444'
	$labelemailaddress.Name = 'labelemailaddress'
	$labelemailaddress.Size = '109, 17'
	$labelemailaddress.TabIndex = 2
	$labelemailaddress.Text = 'alan.newingham@gmail.com'
	$labelemailaddress.UseCompatibleTextRendering = $True
	#
	# labelContact
	#
	$labelContact.AutoSize = $True
	$labelContact.Location = '134, 444'
	$labelContact.Name = 'labelContact'
	$labelContact.Size = '46, 17'
	$labelContact.TabIndex = 1
	$labelContact.Text = 'Contact:'
	$labelContact.UseCompatibleTextRendering = $True
	#
	# richtextbox1
	#
	$richtextbox1.Location = '13, 305'
	$richtextbox1.Name = 'richtextbox1'
	$richtextbox1.Size = '359, 132'
	$richtextbox1.TabIndex = 0
	$richtextbox1.Text = ''
	#
	# menustrip1
	#
	[void]$menustrip1.Items.Add($aboutToolStripMenuItem)
	$menustrip1.Location = '0, 0'
	$menustrip1.Name = 'menustrip1'
	$menustrip1.Size = '384, 24'
	$menustrip1.TabIndex = 11
	$menustrip1.Text = 'menustrip1'
	#
	# aboutToolStripMenuItem
	#
	$aboutToolStripMenuItem.Name = 'aboutToolStripMenuItem'
	$aboutToolStripMenuItem.Size = '52, 20'
	$aboutToolStripMenuItem.Text = 'About'
	$aboutToolStripMenuItem.add_Click($aboutToolStripMenuItem_Click)
	$menustrip1.ResumeLayout()
	$groupbox1.ResumeLayout()
	$groupbox2.ResumeLayout()
	$groupbox3.ResumeLayout()
	$formSCCMToolKit.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formSCCMToolKit.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formSCCMToolKit.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formSCCMToolKit.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formSCCMToolKit.ShowDialog()

} #End Function

#Call the form
Show-SCCMToolKit | Out-Null
